{"version":3,"sources":["webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/components/base-recaptcha.component.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/components/invisible-recaptcha.component.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/components/recaptcha-2.component.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/index.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/models/recaptcha-type.enum.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/ngx-captcha.module.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/services/recaptcha_v3.service.ts","webpack:///./GoogleCaptcha/ngx-captcha-lib/src/lib/services/script.service.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-error.handler.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assets/scripts/alertify.js","webpack:///./src/app/components/app.component.css","webpack:///./src/app/components/app.component.html","webpack:///./src/app/components/app.component.ts","webpack:///./src/app/components/contact-us-ext/contact-us-ext.component.css","webpack:///./src/app/components/contact-us-ext/contact-us-ext.component.html","webpack:///./src/app/components/contact-us-ext/contact-us-ext.component.ts","webpack:///./src/app/components/contact-us/contact-us.component.css","webpack:///./src/app/components/contact-us/contact-us.component.html","webpack:///./src/app/components/contact-us/contact-us.component.ts","webpack:///./src/app/components/controls/notifications-viewer.component.css","webpack:///./src/app/components/controls/notifications-viewer.component.html","webpack:///./src/app/components/controls/notifications-viewer.component.ts","webpack:///./src/app/components/controls/role-editor.component.css","webpack:///./src/app/components/controls/role-editor.component.html","webpack:///./src/app/components/controls/role-editor.component.ts","webpack:///./src/app/components/controls/roles-management.component.css","webpack:///./src/app/components/controls/roles-management.component.html","webpack:///./src/app/components/controls/roles-management.component.ts","webpack:///./src/app/components/controls/search-box.component.css","webpack:///./src/app/components/controls/search-box.component.html","webpack:///./src/app/components/controls/search-box.component.ts","webpack:///./src/app/components/controls/statistics-demo.component.css","webpack:///./src/app/components/controls/statistics-demo.component.html","webpack:///./src/app/components/controls/statistics-demo.component.ts","webpack:///./src/app/components/controls/todo-demo.component.css","webpack:///./src/app/components/controls/todo-demo.component.html","webpack:///./src/app/components/controls/todo-demo.component.ts","webpack:///./src/app/components/controls/user-info.component.css","webpack:///./src/app/components/controls/user-info.component.html","webpack:///./src/app/components/controls/user-info.component.ts","webpack:///./src/app/components/controls/user-preferences.component.css","webpack:///./src/app/components/controls/user-preferences.component.html","webpack:///./src/app/components/controls/user-preferences.component.ts","webpack:///./src/app/components/controls/users-management.component.css","webpack:///./src/app/components/controls/users-management.component.html","webpack:///./src/app/components/controls/users-management.component.ts","webpack:///./src/app/components/forgot-password-confirmation/forgot-password-confirmation.component.css","webpack:///./src/app/components/forgot-password-confirmation/forgot-password-confirmation.component.html","webpack:///./src/app/components/forgot-password-confirmation/forgot-password-confirmation.component.ts","webpack:///./src/app/components/forgot-password/forgot-password.component.css","webpack:///./src/app/components/forgot-password/forgot-password.component.html","webpack:///./src/app/components/forgot-password/forgot-password.component.ts","webpack:///./src/app/components/forgot-username-confirmation/forgot-username-confirmation.component.css","webpack:///./src/app/components/forgot-username-confirmation/forgot-username-confirmation.component.html","webpack:///./src/app/components/forgot-username-confirmation/forgot-username-confirmation.component.ts","webpack:///./src/app/components/forgot-username/forgot-username.component.css","webpack:///./src/app/components/forgot-username/forgot-username.component.html","webpack:///./src/app/components/forgot-username/forgot-username.component.ts","webpack:///./src/app/components/invoices-closed/invoices-closed.component.css","webpack:///./src/app/components/invoices-closed/invoices-closed.component.html","webpack:///./src/app/components/invoices-closed/invoices-closed.component.ts","webpack:///./src/app/components/landing/landing.component.css","webpack:///./src/app/components/landing/landing.component.html","webpack:///./src/app/components/landing/landing.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/paymentautopay/payment-autopay.component.css","webpack:///./src/app/components/paymentautopay/payment-autopay.component.html","webpack:///./src/app/components/paymentautopay/payment-autopay.component.ts","webpack:///./src/app/components/paymentedit/payment-edit.component.css","webpack:///./src/app/components/paymentedit/payment-edit.component.html","webpack:///./src/app/components/paymentedit/payment-edit.component.ts","webpack:///./src/app/components/paymentpaynow/payment-paynow.component.css","webpack:///./src/app/components/paymentpaynow/payment-paynow.component.html","webpack:///./src/app/components/paymentpaynow/payment-paynow.component.ts","webpack:///./src/app/components/paymentprofile/payment-profile.component.css","webpack:///./src/app/components/paymentprofile/payment-profile.component.html","webpack:///./src/app/components/paymentprofile/payment-profile.component.ts","webpack:///./src/app/components/privacy/privacy.component.css","webpack:///./src/app/components/privacy/privacy.component.html","webpack:///./src/app/components/privacy/privacy.component.ts","webpack:///./src/app/components/register-confirmation-email/register-confirmation-email.component.css","webpack:///./src/app/components/register-confirmation-email/register-confirmation-email.component.html","webpack:///./src/app/components/register-confirmation-email/register-confirmation-email.component.ts","webpack:///./src/app/components/register-confirmation/register-confirmation.component.css","webpack:///./src/app/components/register-confirmation/register-confirmation.component.html","webpack:///./src/app/components/register-confirmation/register-confirmation.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reset-password/reset-password.component.css","webpack:///./src/app/components/reset-password/reset-password.component.html","webpack:///./src/app/components/reset-password/reset-password.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/terms/terms.component.css","webpack:///./src/app/components/terms/terms.component.html","webpack:///./src/app/components/terms/terms.component.ts","webpack:///./src/app/directives/autofocus.directive.ts","webpack:///./src/app/directives/bootstrap-datepicker.directive.ts","webpack:///./src/app/directives/bootstrap-select.directive.ts","webpack:///./src/app/directives/bootstrap-tab.directive.ts","webpack:///./src/app/directives/bootstrap-toggle.directive.ts","webpack:///./src/app/directives/equal-validator.directive.ts","webpack:///./src/app/directives/last-element.directive.ts","webpack:///./src/app/directives/modelstate.directive.ts","webpack:///./src/app/directives/notequal-validator.directive.ts","webpack:///./src/app/models/account.model.ts","webpack:///./src/app/models/address.model.ts","webpack:///./src/app/models/notification.model.ts","webpack:///./src/app/models/payment-profile.model.ts","webpack:///./src/app/models/permission.model.ts","webpack:///./src/app/models/register.model.ts","webpack:///./src/app/models/role.model.ts","webpack:///./src/app/models/user-edit.model.ts","webpack:///./src/app/models/user-forgot-password.model.ts","webpack:///./src/app/models/user-forgot-username.model.ts","webpack:///./src/app/models/user-login.model.ts","webpack:///./src/app/models/user-new.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/pipes/group-by.pipe.ts","webpack:///./src/app/services/account-endpoint.service.ts","webpack:///./src/app/services/account.service.ts","webpack:///./src/app/services/alert.service.ts","webpack:///./src/app/services/animations.ts","webpack:///./src/app/services/app-title.service.ts","webpack:///./src/app/services/app-translation.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/configuration.service.ts","webpack:///./src/app/services/db-Keys.ts","webpack:///./src/app/services/endpoint-factory.service.ts","webpack:///./src/app/services/invoice-endpoint.service.ts","webpack:///./src/app/services/invoice.service.ts","webpack:///./src/app/services/jwt-helper.ts","webpack:///./src/app/services/language-observable.service.ts","webpack:///./src/app/services/local-store-manager.service.ts","webpack:///./src/app/services/notification-endpoint.service.ts","webpack:///./src/app/services/notification.service.ts","webpack:///./src/app/services/payment-service-endpoint.service.ts","webpack:///./src/app/services/payment.service.ts","webpack:///./src/app/services/utilities.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uCAAuC,SAAS;;AAEhD;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS;AACrC,4BAA4B,IAAI,8BAA8B,QAAQ;AACtE;AACA;AACA,4BAA4B,SAAS;AACrC,4BAA4B,IAAI,8BAA8B,QAAQ;AACtE;AACA;AACA,4BAA4B,SAAS;AACrC,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,EAAE;AACjD,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,2FAA2F;AAC3G;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sDAAsD,EAAE;AACnF;AAC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","file":"main.js","sourcesContent":["import {\r\n    AfterViewInit,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Injector,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\n\r\nimport { ReCaptchaType } from '../models/recaptcha-type.enum';\r\nimport { ScriptService } from '../services/script.service';\r\n\r\nexport abstract class BaseReCaptchaComponent implements OnChanges, ControlValueAccessor, AfterViewInit {\r\n\r\n    /**\r\n    * Prefix of the captcha element\r\n    */\r\n    protected readonly captchaElemPrefix = 'ngx_captcha_id_';\r\n\r\n    /**\r\n    * Google's site key.\r\n    * You can find this under https://www.google.com/recaptcha\r\n    */\r\n    @Input() siteKey: string;\r\n\r\n    /**\r\n     * Indicates if global domain 'recaptcha.net' should be used instead of default domain ('google.com')\r\n     */\r\n    @Input() useGlobalDomain: boolean = false;\r\n\r\n    /**\r\n    * Type\r\n    */\r\n    @Input() type: 'audio' | 'image' = 'image';\r\n\r\n    /**\r\n    * Language code. Auto-detects the user's language if unspecified.\r\n    */\r\n    @Input() hl: string;\r\n\r\n    /**\r\n    * Tab index\r\n    */\r\n    @Input() tabIndex = 0;\r\n\r\n    /**\r\n    * Called when captcha receives successful response.\r\n    * Captcha response token is passed to event.\r\n    */\r\n    @Output() success = new EventEmitter<string>();\r\n\r\n    /**\r\n    * Called when captcha is loaded. Event receives id of the captcha\r\n    */\r\n    @Output() load = new EventEmitter<number>();\r\n\r\n    /**\r\n    * Called when captcha is reset.\r\n    */\r\n    @Output() reset = new EventEmitter<void>();\r\n\r\n    /**\r\n    * Called when captcha is loaded & ready. I.e. when you need to execute captcha on component load.\r\n    */\r\n    @Output() ready = new EventEmitter<void>();\r\n\r\n    @ViewChild('captchaWrapperElem') captchaWrapperElem: ElementRef;\r\n    @ViewChild('captchaScriptElem') captchaScriptElem: ElementRef;\r\n\r\n    /**\r\n    * Indicates if captcha should be set on load\r\n    */\r\n    private setupAfterLoad = false;\r\n\r\n    /**\r\n    * Captcha element\r\n    */\r\n    protected captchaElem?: HTMLElement;\r\n\r\n    /**\r\n    * Id of the captcha elem\r\n    */\r\n    protected captchaId?: number;\r\n\r\n    /**\r\n    * Holds last response value\r\n    */\r\n    protected currentResponse?: string;\r\n\r\n    /**\r\n    * If enabled, captcha will reset after receiving success response. This is useful\r\n    * when invisible captcha need to be resolved multiple times on same page\r\n    */\r\n    protected resetCaptchaAfterSuccess = false;\r\n\r\n    /**\r\n    * Captcha type\r\n    */\r\n    protected abstract recaptchaType: ReCaptchaType;\r\n\r\n    /**\r\n    * Required by ControlValueAccessor\r\n    */\r\n    protected onChange: (value: string | undefined) => void;\r\n    protected onTouched: (value: string | undefined) => void;\r\n\r\n    /**\r\n    * Indicates if captcha is loaded\r\n    */\r\n    public isLoaded = false;\r\n\r\n    /**\r\n    * Reference to global reCaptcha API\r\n    */\r\n    public reCaptchaApi?: any;\r\n\r\n    /**\r\n    * Id of the DOM element wrapping captcha\r\n    */\r\n    public captchaElemId?: string;\r\n\r\n    /**\r\n    * Form Control to be enable usage in reactive forms\r\n    */\r\n    public control?: FormControl;\r\n\r\n    protected constructor(\r\n        protected renderer: Renderer2,\r\n        protected zone: NgZone,\r\n        protected injector: Injector,\r\n        protected scriptService: ScriptService,\r\n    ) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.control = this.injector.get(NgControl).control;\r\n    }\r\n\r\n    /**\r\n    * Gets reCaptcha properties\r\n    */\r\n    protected abstract getCaptchaProperties(): any;\r\n\r\n    /**\r\n    * Used for captcha specific setup\r\n    */\r\n    protected abstract captchaSpecificSetup(): void;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // cleanup scripts if language changed because they need to be reloaded\r\n        if (changes && changes.hl) {\r\n            // cleanup scripts when language changes\r\n            if (!changes.hl.firstChange && (changes.hl.currentValue !== changes.hl.previousValue)) {\r\n                this.scriptService.cleanup();\r\n            }\r\n        }\r\n\r\n        if (changes && changes.useGlobalDomain) {\r\n            // cleanup scripts when domain changes\r\n            if (!changes.useGlobalDomain.firstChange && (changes.useGlobalDomain.currentValue !== changes.useGlobalDomain.previousValue)) {\r\n                this.scriptService.cleanup();\r\n            }\r\n        }\r\n\r\n        this.setupComponent();\r\n    }\r\n\r\n    /**\r\n    * Gets captcha response as per reCaptcha docs\r\n    */\r\n    getResponse(): string {\r\n        return this.reCaptchaApi.getResponse(this.captchaId);\r\n    }\r\n\r\n    /**\r\n    * Gets Id of captcha widget\r\n    */\r\n    getCaptchaId(): number | undefined {\r\n        return this.captchaId;\r\n    }\r\n\r\n    /**\r\n    * Resets captcha\r\n    */\r\n    resetCaptcha(): void {\r\n        this.zone.run(() => {\r\n            // reset captcha using Google js api\r\n            this.reCaptchaApi.reset();\r\n\r\n            // required due to forms\r\n            this.onChange(undefined);\r\n            this.onTouched(undefined);\r\n\r\n\r\n            // trigger reset event\r\n            this.reset.next();\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Gets last submitted captcha response\r\n    */\r\n    getCurrentResponse(): string | undefined {\r\n        return this.currentResponse;\r\n    }\r\n\r\n    /**\r\n    * Reload captcha. Useful when properties (i.e. theme) changed and captcha need to reflect them\r\n    */\r\n    reloadCaptcha(): void {\r\n        this.setupComponent();\r\n    }\r\n\r\n    protected ensureCaptchaElem(captchaElemId: string): void {\r\n        const captchaElem = document.getElementById(captchaElemId);\r\n\r\n        if (!captchaElem) {\r\n            throw Error(`Captcha element with id '${captchaElemId}' was not found`);\r\n        }\r\n\r\n        // assign captcha alem\r\n        this.captchaElem = captchaElem;\r\n    }\r\n\r\n    /**\r\n    * Responsible for instantiating captcha element\r\n    */\r\n    protected renderReCaptcha(): void {\r\n        // run outside angular zone due to timeout issues when testing\r\n        // details: https://github.com/Enngage/ngx-captcha/issues/26\r\n        this.zone.runOutsideAngular(() => {\r\n            this.captchaId = this.reCaptchaApi.render(this.captchaElemId, this.getCaptchaProperties());\r\n            this.ready.next();\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Called when captcha receives response\r\n    * @param callback Callback\r\n    */\r\n    protected handleCallback(callback: any): void {\r\n        this.currentResponse = callback;\r\n        this.success.next(callback);\r\n\r\n        this.zone.run(() => {\r\n            this.onChange(callback);\r\n            this.onTouched(callback);\r\n        });\r\n\r\n        if (this.resetCaptchaAfterSuccess) {\r\n            this.resetCaptcha();\r\n        }\r\n    }\r\n\r\n    private getPseudoUniqueNumber(): number {\r\n        return new Date().getUTCMilliseconds() + Math.floor(Math.random() * 9999);\r\n    }\r\n\r\n    private setupComponent(): void {\r\n        // captcha specific setup\r\n        this.captchaSpecificSetup();\r\n\r\n        // create captcha wrapper\r\n        this.createAndSetCaptchaElem();\r\n\r\n        this.scriptService.registerCaptchaScript(this.useGlobalDomain, 'explicit', (grecaptcha) => {\r\n            this.onloadCallback(grecaptcha);\r\n        }, this.hl);\r\n    }\r\n\r\n    /**\r\n    * Called when google's recaptcha script is ready\r\n    */\r\n    private onloadCallback(grecapcha: any): void {\r\n        // assign reference to reCaptcha Api once its loaded\r\n        this.reCaptchaApi = grecapcha;\r\n\r\n        if (!this.reCaptchaApi) {\r\n            throw Error(`ReCaptcha Api was not initialized correctly`);\r\n        }\r\n\r\n        // loaded flag\r\n        this.isLoaded = true;\r\n\r\n        // fire load event\r\n        this.load.next();\r\n\r\n        // render captcha\r\n        this.renderReCaptcha();\r\n\r\n        // setup component if it was flagged as such\r\n        if (this.setupAfterLoad) {\r\n            this.setupAfterLoad = false;\r\n            this.setupComponent();\r\n        }\r\n    }\r\n\r\n    private generateNewElemId(): string {\r\n        return this.captchaElemPrefix + this.getPseudoUniqueNumber();\r\n    }\r\n\r\n    private createAndSetCaptchaElem(): void {\r\n        // generate new captcha id\r\n        this.captchaElemId = this.generateNewElemId();\r\n\r\n        if (!this.captchaElemId) {\r\n            throw Error(`Captcha elem Id is not set`);\r\n        }\r\n\r\n        // remove old html\r\n        this.captchaWrapperElem.nativeElement.innerHTML = '';\r\n\r\n        // create new wrapper for captcha\r\n        const newElem = this.renderer.createElement('div');\r\n        newElem.id = this.captchaElemId;\r\n\r\n        this.renderer.appendChild(this.captchaWrapperElem.nativeElement, newElem);\r\n\r\n        // update captcha elem\r\n        this.ensureCaptchaElem(this.captchaElemId);\r\n    }\r\n\r\n    /**\r\n     * To be aligned with the ControlValueAccessor interface we need to implement this method\r\n     * However as we don't want to update the recaptcha, this doesn't need to be implemented\r\n     */\r\n    public writeValue(obj: any): void { }\r\n\r\n    /**\r\n     * This method helps us tie together recaptcha and our formControl values\r\n     */\r\n    public registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    /**\r\n    * At some point we might be interested whether the user has touched our component\r\n    */\r\n    public registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n}\r\n\r\n","import { Component, forwardRef, Injector, Input, NgZone, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ReCaptchaType } from '../models/recaptcha-type.enum';\r\nimport { ScriptService } from '../services/script.service';\r\nimport { BaseReCaptchaComponent } from './base-recaptcha.component';\r\n\r\n@Component({\r\n  selector: 'ngx-invisible-recaptcha',\r\n  template: `\r\n  <div #captchaWrapperElem></div>`,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InvisibleReCaptchaComponent),\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class InvisibleReCaptchaComponent extends BaseReCaptchaComponent implements OnChanges {\r\n\r\n  /**\r\n   * This size representing invisible captcha\r\n   */\r\n  protected readonly size = 'invisible';\r\n\r\n  /**\r\n   * Theme\r\n   */\r\n  @Input() theme: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n   * Badge\r\n   */\r\n  @Input() badge: 'bottomright' | 'bottomleft' | 'inline' = 'bottomright';\r\n\r\n  /**\r\n   * Language code. Auto-detects the user's language if unspecified.\r\n   */\r\n  @Input() hl: string;\r\n\r\n  protected recaptchaType: ReCaptchaType = ReCaptchaType.InvisibleReCaptcha;\r\n\r\n  constructor(\r\n    protected renderer: Renderer2,\r\n    protected zone: NgZone,\r\n    protected injector: Injector,\r\n    protected scriptService: ScriptService\r\n  ) {\r\n    super(renderer, zone, injector, scriptService);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n  }\r\n\r\n  /**\r\n   * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.\r\n   */\r\n  execute(): void {\r\n    // execute captcha\r\n    this.zone.runOutsideAngular(() => this.reCaptchaApi.execute(this.captchaId));\r\n  }\r\n\r\n  protected captchaSpecificSetup(): void {\r\n  }\r\n\r\n  /**\r\n  * Gets reCaptcha properties\r\n  */\r\n  protected getCaptchaProperties(): any {\r\n    return {\r\n      'sitekey': this.siteKey,\r\n      'callback': (response) => this.zone.run(() => this.handleCallback(response)),\r\n      'badge': this.badge,\r\n      'type': this.type,\r\n      'tabindex': this.tabIndex,\r\n      'size': this.size,\r\n      'theme': this.theme\r\n    };\r\n  }\r\n}\r\n\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ReCaptchaType } from '../models/recaptcha-type.enum';\r\nimport { ScriptService } from '../services/script.service';\r\nimport { BaseReCaptchaComponent } from './base-recaptcha.component';\r\n\r\n@Component({\r\n  selector: 'ngx-recaptcha2',\r\n  template: `\r\n  <div #captchaWrapperElem></div>`,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => ReCaptcha2Component),\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class ReCaptcha2Component extends BaseReCaptchaComponent implements OnChanges, OnDestroy {\r\n\r\n  /**\r\n  * Name of the global expire callback\r\n  */\r\n  protected readonly windowOnErrorCallbackProperty = 'ngx_captcha_error_callback';\r\n\r\n  /**\r\n  * Name of the global error callback\r\n  */\r\n  protected readonly windowOnExpireCallbackProperty = 'ngx_captcha_expire_callback';\r\n\r\n  /**\r\n   * Theme\r\n   */\r\n  @Input() theme: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n  * Size\r\n  */\r\n  @Input() size: 'compact' | 'normal' = 'normal';\r\n\r\n  /**\r\n   * Language code. Auto-detects the user's language if unspecified.\r\n   */\r\n  @Input() hl: string;\r\n\r\n  /**\r\n  * Expired callback\r\n  */\r\n  @Output() expire = new EventEmitter<void>();\r\n\r\n  /**\r\n  * Error callback\r\n  */\r\n  @Output() error = new EventEmitter<void>();\r\n\r\n  protected recaptchaType: ReCaptchaType = ReCaptchaType.ReCaptcha2;\r\n\r\n  constructor(\r\n    protected renderer: Renderer2,\r\n    protected zone: NgZone,\r\n    protected injector: Injector,\r\n    protected scriptService: ScriptService,\r\n  ) {\r\n    super(renderer, zone, injector, scriptService);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    window[this.windowOnErrorCallbackProperty] = {};\r\n    window[this.windowOnExpireCallbackProperty] = {};\r\n  }\r\n\r\n  protected captchaSpecificSetup(): void {\r\n    this.registerCallbacks();\r\n  }\r\n\r\n  /**\r\n   * Gets reCaptcha properties\r\n  */\r\n  protected getCaptchaProperties(): any {\r\n    return {\r\n      'sitekey': this.siteKey,\r\n      'callback': (response) => this.zone.run(() => this.handleCallback(response)),\r\n      'expired-callback': () => this.zone.run(() => this.handleExpireCallback()),\r\n      'error-callback': () => this.zone.run(() => this.handleErrorCallback()),\r\n      'theme': this.theme,\r\n      'type': this.type,\r\n      'size': this.size,\r\n      'tabindex': this.tabIndex\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Registers global callbacks\r\n  */\r\n  private registerCallbacks(): void {\r\n    window[this.windowOnErrorCallbackProperty] = this.handleErrorCallback.bind(this);\r\n    window[this.windowOnExpireCallbackProperty] = this.handleExpireCallback.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Handles error callback\r\n  */\r\n  private handleErrorCallback(): void {\r\n    this.zone.run(() => {\r\n      this.onChange(undefined);\r\n      this.onTouched(undefined);\r\n    });\r\n\r\n    this.error.next();\r\n  }\r\n\r\n  /**\r\n   * Handles expired callback\r\n   */\r\n  private handleExpireCallback(): void {\r\n    this.expire.next();\r\n\r\n    // reset captcha on expire callback\r\n    this.resetCaptcha();\r\n  }\r\n}\r\n\r\n","export * from './components/base-recaptcha.component';\r\nexport * from './components/invisible-recaptcha.component';\r\nexport * from './components/recaptcha-2.component';\r\nexport * from './models/recaptcha-type.enum';\r\nexport * from './services/script.service';\r\nexport * from './services/recaptcha_v3.service';\r\nexport * from './ngx-captcha.module';\r\n\r\n","export enum ReCaptchaType {\r\n\r\n    InvisibleReCaptcha,\r\n    ReCaptcha2\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { InvisibleReCaptchaComponent } from './components/invisible-recaptcha.component';\r\nimport { ReCaptcha2Component } from './components/recaptcha-2.component';\r\nimport { ReCaptchaV3Service } from './services/recaptcha_v3.service';\r\nimport { ScriptService } from './services/script.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    ReCaptcha2Component,\r\n    InvisibleReCaptchaComponent\r\n  ],\r\n  providers: [\r\n    ScriptService,\r\n    ReCaptchaV3Service\r\n  ],\r\n  exports: [\r\n    ReCaptcha2Component,\r\n    InvisibleReCaptchaComponent\r\n  ]\r\n})\r\nexport class NgxCaptchaModule {\r\n}\r\n\r\n\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { ScriptService } from './script.service';\r\n\r\n@Injectable()\r\nexport class ReCaptchaV3Service {\r\n\r\n    constructor(\r\n        protected scriptService: ScriptService,\r\n        protected zone: NgZone\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Executes reCaptcha v3 with given action and passes token via callback. You need to verify\r\n     * this callback in your backend to get meaningful results.\r\n     *\r\n     * For more information see https://developers.google.com/recaptcha/docs/v3\r\n     *\r\n     * @param siteKey Site key found in your google admin panel\r\n     * @param action Action to log\r\n     */\r\n    execute(siteKey: string, action: string, callback: (token: string) => void, config?: {\r\n        useGlobalDomain: boolean\r\n    }): void {\r\n\r\n        const useGlobalDomain = config && config.useGlobalDomain ? true : false;\r\n\r\n        this.scriptService.registerCaptchaScript(useGlobalDomain, siteKey, (grecaptcha) => {\r\n            this.zone.runOutsideAngular(() => {\r\n                grecaptcha.execute(siteKey, {\r\n                    action: action\r\n                }).then((token) => {\r\n                    this.zone.run(() => callback(token));\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\ndeclare var document: any;\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n\r\n    /**\r\n     * Name of the global google recaptcha script\r\n     */\r\n    protected readonly windowGrecaptcha = 'grecaptcha';\r\n\r\n    /**\r\n    * Name of the global callback\r\n    */\r\n    protected readonly windowOnLoadCallbackProperty = 'ngx_captcha_onload_callback';\r\n\r\n    protected readonly globalDomain: string = 'recaptcha.net';\r\n\r\n    protected readonly defaultDomain: string = 'google.com';\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n    }\r\n\r\n    registerCaptchaScript(useGlobalDomain: boolean, render: string, onLoad: (grecaptcha: any) => void, language?: string): void {\r\n        if (this.grecaptchaScriptLoaded()) {\r\n            // recaptcha script is already loaded\r\n            // just call the callback\r\n            this.zone.run(() => {\r\n                onLoad(window[this.windowGrecaptcha]);\r\n            });\r\n            return;\r\n        }\r\n\r\n        // we need to patch the callback through global variable, otherwise callback is not accessible\r\n        // note: https://github.com/Enngage/ngx-captcha/issues/2\r\n        window[this.windowOnLoadCallbackProperty] = <any>(() => this.zone.run(\r\n            onLoad.bind(this, window[this.windowGrecaptcha])\r\n        ));\r\n\r\n        // prepare script elem\r\n        const scriptElem = document.createElement('script');\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.src = this.getCaptchaScriptUrl(useGlobalDomain, render, language);\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    }\r\n\r\n    cleanup(): void {\r\n        window[this.windowOnLoadCallbackProperty] = undefined;\r\n        window[this.windowGrecaptcha] = undefined;\r\n    }\r\n\r\n    /**\r\n     * Indicates if google recaptcha script is available and ready to be used\r\n     */\r\n    private grecaptchaScriptLoaded(): boolean {\r\n        if (window[this.windowOnLoadCallbackProperty] && window[this.windowGrecaptcha]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets language param used in script url\r\n     */\r\n    private getLanguageParam(hl?: string): string {\r\n        if (!hl) {\r\n            return '';\r\n        }\r\n\r\n        return `&hl=${hl}`;\r\n    }\r\n\r\n    /**\r\n    * Url to google api script\r\n    */\r\n    private getCaptchaScriptUrl(useGlobalDomain: boolean, render: string, language?: string): string {\r\n        const domain = useGlobalDomain ? this.globalDomain : this.defaultDomain;\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        return `https://www.${domain}/recaptcha/api.js?onload=${this.windowOnLoadCallbackProperty}&render=${render}${this.getLanguageParam(language)}`;\r\n    }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, ErrorHandler } from \"@angular/core\";\r\nimport { AlertService, MessageSeverity } from './services/alert.service';\r\n\r\n\r\n@Injectable()\r\nexport class AppErrorHandler extends ErrorHandler {\r\n\r\n    //private alertService: AlertService;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    handleError(error: any) {\r\n        //if (this.alertService == null) {\r\n        //    this.alertService = this.injector.get(AlertService);\r\n        //}\r\n\r\n        //this.alertService.showStickyMessage(\"Fatal Error!\", \"An unresolved error has occured. Please reload the page to correct this error\", MessageSeverity.warn);\r\n        //this.alertService.showStickyMessage(\"Unhandled Error\", error.message || error, MessageSeverity.error, error);\r\n\r\n        if (confirm(\"Fatal Error!\\nAn unresolved error has occured. Do you want to reload the page to correct this?\\n\\nError: \" + error.message))\r\n            window.location.reload(true);\r\n\r\n        super.handleError(error);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\n\r\nimport { LandingComponent } from \"./components/landing/landing.component\";\r\n\r\nimport { NotFoundComponent } from \"./components/not-found/not-found.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\n\r\nimport { RegisterComponent } from \"./components/register/register.component\";\r\nimport { RegisterConfirmationComponent } from './components/register-confirmation/register-confirmation.component';\r\nimport { RegisterConfirmationEmailComponent } from \"./components/register-confirmation-email/register-confirmation-email.component\";\r\n\r\nimport { ForgotUserNameComponent } from \"./components/forgot-username/forgot-username.component\";\r\nimport { ForgotUserNameConfirmationComponent } from \"./components/forgot-username-confirmation/forgot-username-confirmation.component\";\r\n\r\nimport { ForgotPasswordComponent } from \"./components/forgot-password/forgot-password.component\";\r\nimport { ForgotPasswordConfirmationComponent } from './components/forgot-password-confirmation/forgot-password-confirmation.component';\r\n\r\nimport { InvoiceClosedComponent } from './components/invoices-closed/invoices-closed.component';\r\nimport { ContactUsComponent } from \"./components/contact-us/contact-us.component\";\r\nimport { ContactUsExtComponent } from \"./components/contact-us-ext/contact-us-ext.component\";\r\n\r\nimport { SettingsComponent } from \"./components/settings/settings.component\";\r\n\r\nimport { PaymentProfileComponent } from \"./components/paymentprofile/payment-profile.component\";\r\nimport { PaymentPaynowComponent } from \"./components/paymentpaynow/payment-paynow.component\";\r\nimport { PaymentAutopayComponent } from \"./components/paymentautopay/payment-autopay.component\";\r\nimport { PaymentEditComponent } from \"./components/paymentedit/payment-edit.component\";\r\n\r\nimport { PrivacyComponent } from \"./components/privacy/privacy.component\";\r\nimport { TermsComponent } from \"./components/terms/terms.component\";\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent, data: { title: \"Login\" } },\r\n  {\r\n    path: 'secure',\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: \"payment\",\r\n        children: [\r\n          { path: \"paynow\", component: PaymentPaynowComponent, data: { title: \"Pay Now\" } },\r\n          { path: \"profile\", component: PaymentProfileComponent, data: { title: \"Payment Profiles\" } },\r\n          { path: \"autopay\", component: PaymentAutopayComponent, data: { title: \"Auto Pay\" } },\r\n          { path: \":id\", component: PaymentEditComponent, data: { title: \"Edit Payment Method\" } },\r\n          { path: \"\", component: PaymentEditComponent, data: { title: \"Add Payment Method\" }, pathMatch: 'full' },\r\n        ]\r\n      },\r\n      { path: \"invoices\", component: InvoiceClosedComponent, data: { title: \"Invoice History\" } },\r\n      { path: \"contactus\", component: ContactUsComponent, data: { title: \"Contact Us\" } },\r\n      { path: \"settings\", component: SettingsComponent, data: { title: \"Settings\" } },\r\n      { path: \"\", component: LandingComponent, data: { title: \"Invoices\" } },\r\n    ]\r\n  },\r\n  { path: \"contactus\",    component: ContactUsExtComponent, data: { title: \"Contact Us\" } },\r\n  { path: \"privacy\",      component: PrivacyComponent, data: { title: \"Privacy Policy\" } },\r\n  { path: \"terms\",        component: TermsComponent, data: { title: \"Terms & Conditions\" } },\r\n  {\r\n    path: \"register\",\r\n    children: [\r\n      { path: \":id/:code\", component: RegisterConfirmationEmailComponent, data: { title: \"Email Confirmation\" } },\r\n      { path: \":id\", component: RegisterConfirmationComponent, data: { title: \"Confirmation\" } },\r\n      { path: '', component: RegisterComponent, data: { title: \"Register\" }, pathMatch: 'full' },\r\n    ]\r\n  },\r\n  {\r\n    path: \"forgot\",\r\n    children: [\r\n      { path: 'username/confirmation',  component: ForgotUserNameConfirmationComponent, data: { title: \"Confirmation\" } },\r\n      { path: 'username',               component: ForgotUserNameComponent, data: { title: \"Forgot Username\" }, pathMatch: 'full' },\r\n      { path: 'password/confirmation',  component: ForgotPasswordConfirmationComponent, data: { title: \"Confirmation\" } },\r\n      { path: \"password/:id/:code\",     component: ResetPasswordComponent, data: { title: \"Reset Password\" } },\r\n      { path: 'password',               component: ForgotPasswordComponent, data: { title: \"Forgot Password\" }, pathMatch: 'full' },\r\n    ]\r\n  },\r\n\r\n\r\n  { path: \"landing\",      redirectTo: 'secure' },\r\n  { path: \"\",             redirectTo: 'secure', pathMatch: 'full' },\r\n  { path: \"**\",           component: NotFoundComponent, data: { title: \"Page Not Found\" } },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n  providers: [AuthService, AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule, ErrorHandler } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { TranslateModule, TranslateLoader, TranslateService } from \"@ngx-translate/core\";\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ToastaModule } from 'ngx-toasta';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TooltipModule } from \"ngx-bootstrap/tooltip\";\r\nimport { PopoverModule } from \"ngx-bootstrap/popover\";\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgxCaptchaModule } from '../../GoogleCaptcha/ngx-captcha-lib/src/lib';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppErrorHandler } from './app-error.handler';\r\nimport { AppTitleService } from './services/app-title.service';\r\nimport { AppTranslationService, TranslateLanguageLoader } from './services/app-translation.service';\r\nimport { ConfigurationService } from './services/configuration.service';\r\nimport { AlertService } from './services/alert.service';\r\nimport { LocalStoreManager } from './services/local-store-manager.service';\r\nimport { EndpointFactory } from './services/endpoint-factory.service';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { NotificationEndpoint } from './services/notification-endpoint.service';\r\nimport { AccountService } from './services/account.service';\r\nimport { AccountEndpoint } from './services/account-endpoint.service';\r\nimport { PaymentService } from './services/payment.service';\r\nimport { PaymentServiceEndpoint } from './services/payment-service-endpoint.service';\r\nimport { InvoiceService } from './services/invoice.service';\r\nimport { InvoiceEndpoint } from './services/invoice-endpoint.service';\r\n\r\n\r\nimport { EqualValidator } from './directives/equal-validator.directive';\r\nimport { NotEqualValidator } from './directives/notequal-validator.directive';\r\nimport { LastElementDirective } from './directives/last-element.directive';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { BootstrapTabDirective } from './directives/bootstrap-tab.directive';\r\nimport { BootstrapToggleDirective } from './directives/bootstrap-toggle.directive';\r\nimport { BootstrapSelectDirective } from './directives/bootstrap-select.directive';\r\nimport { BootstrapDatepickerDirective } from './directives/bootstrap-datepicker.directive';\r\nimport { GroupByPipe } from './pipes/group-by.pipe';\r\n\r\nimport { AppComponent } from \"./components/app.component\";\r\nimport { LandingComponent } from \"./components/landing/landing.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\n\r\nimport { SettingsComponent } from \"./components/settings/settings.component\";\r\nimport { NotFoundComponent } from \"./components/not-found/not-found.component\";\r\n\r\nimport { TodoDemoComponent } from \"./components/controls/todo-demo.component\";\r\nimport { StatisticsDemoComponent } from \"./components/controls/statistics-demo.component\";\r\nimport { NotificationsViewerComponent } from \"./components/controls/notifications-viewer.component\";\r\nimport { SearchBoxComponent } from \"./components/controls/search-box.component\";\r\nimport { UserInfoComponent } from \"./components/controls/user-info.component\";\r\nimport { UserPreferencesComponent } from \"./components/controls/user-preferences.component\";\r\nimport { UsersManagementComponent } from \"./components/controls/users-management.component\";\r\nimport { RolesManagementComponent } from \"./components/controls/roles-management.component\";\r\nimport { RoleEditorComponent } from \"./components/controls/role-editor.component\";\r\n\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { RegisterConfirmationComponent } from './components/register-confirmation/register-confirmation.component';\r\nimport { RegisterConfirmationEmailComponent } from \"./components/register-confirmation-email/register-confirmation-email.component\";\r\n\r\nimport { ForgotUserNameComponent } from './components/forgot-username/forgot-username.component';\r\nimport { ForgotUserNameConfirmationComponent } from './components/forgot-username-confirmation/forgot-username-confirmation.component';\r\n\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { ForgotPasswordConfirmationComponent } from './components/forgot-password-confirmation/forgot-password-confirmation.component';\r\n\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\nimport { PaymentProfileComponent } from \"./components/paymentprofile/payment-profile.component\";\r\nimport { PaymentPaynowComponent } from \"./components/paymentpaynow/payment-paynow.component\";\r\nimport { PaymentAutopayComponent } from \"./components/paymentautopay/payment-autopay.component\";\r\nimport { PaymentEditComponent } from \"./components/paymentedit/payment-edit.component\";\r\n\r\nimport { PrivacyComponent } from \"./components/privacy/privacy.component\";\r\nimport { TermsComponent } from \"./components/terms/terms.component\";\r\nimport { ContactUsComponent } from \"./components/contact-us/contact-us.component\";\r\nimport { ContactUsExtComponent } from \"./components/contact-us-ext/contact-us-ext.component\";\r\n\r\nimport { InvoiceClosedComponent } from './components/invoices-closed/invoices-closed.component';\r\nimport { ModelStateDirective } from './directives/modelstate.directive';\r\nimport { LanguageObservableService } from \"./services/language-observable.service\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useClass: TranslateLanguageLoader\r\n      }\r\n    }),\r\n    NgxDatatableModule,\r\n    ToastaModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ChartsModule,\r\n    NgxCaptchaModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SettingsComponent,\r\n    UsersManagementComponent, UserInfoComponent, UserPreferencesComponent,\r\n    RolesManagementComponent, RoleEditorComponent,\r\n    NotFoundComponent,\r\n    NotificationsViewerComponent,\r\n    SearchBoxComponent,\r\n    StatisticsDemoComponent, TodoDemoComponent,\r\n    EqualValidator,\r\n    NotEqualValidator,\r\n    ModelStateDirective,\r\n    LastElementDirective,\r\n    AutofocusDirective,\r\n    BootstrapTabDirective,\r\n    BootstrapToggleDirective,\r\n    BootstrapSelectDirective,\r\n    BootstrapDatepickerDirective,\r\n    GroupByPipe,\r\n    LandingComponent,\r\n    RegisterComponent,\r\n    RegisterConfirmationComponent,\r\n    RegisterConfirmationEmailComponent,\r\n    ResetPasswordComponent,\r\n    ForgotUserNameComponent,\r\n    ForgotPasswordComponent,\r\n    ForgotPasswordConfirmationComponent,\r\n    ForgotUserNameConfirmationComponent,\r\n    PaymentProfileComponent,\r\n    PaymentPaynowComponent,\r\n    PaymentAutopayComponent,\r\n    PaymentEditComponent,\r\n    PrivacyComponent,\r\n    TermsComponent,\r\n    InvoiceClosedComponent,\r\n    ContactUsComponent,\r\n    ContactUsExtComponent\r\n  ],\r\n  providers: [\r\n    { provide: 'BASE_URL', useFactory: getBaseUrl },\r\n    { provide: ErrorHandler, useClass: AppErrorHandler },\r\n    AlertService,\r\n    ConfigurationService,\r\n    AppTitleService,\r\n    AppTranslationService,\r\n    NotificationService,\r\n    NotificationEndpoint,\r\n    AccountService,\r\n    AccountEndpoint,\r\n    LocalStoreManager,\r\n    EndpointFactory,\r\n    InvoiceService,\r\n    InvoiceEndpoint,\r\n    PaymentService,\r\n    PaymentServiceEndpoint,\r\n    LanguageObservableService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(translate: TranslateService) {\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    translate.setDefaultLang('en');\r\n  }\r\n}\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n","/**\r\n * alertify\r\n * An unobtrusive customizable JavaScript notification system\r\n *\r\n * @author Fabien Doiron <fabien.doiron@gmail.com>\r\n * @copyright Fabien Doiron 2013\r\n * @license MIT <http://opensource.org/licenses/mit-license.php>\r\n * @link http://fabien-d.github.com/alertify.js/\r\n * @module alertify\r\n * @version 0.3.11\r\n */\r\n(function (global, undefined) {\r\n\t\"use strict\";\r\n\r\n\tvar document = global.document,\r\n\t    Alertify;\r\n\r\n\tAlertify = function () {\r\n\r\n\t\tvar _alertify = {},\r\n\t\t    dialogs   = {},\r\n\t\t    isopen    = false,\r\n\t\t    keys      = { ENTER: 13, ESC: 27, SPACE: 32 },\r\n\t\t    queue     = [],\r\n\t\t    $, btnCancel, btnOK, btnReset, btnResetBack, btnFocus, elCallee, elCover, elDialog, elLog, form, input, getTransitionEvent;\r\n\r\n\t\t/**\r\n\t\t * Markup pieces\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tdialogs = {\r\n\t\t\tbuttons : {\r\n\t\t\t\tholder : \"<nav class=\\\"alertify-buttons\\\">{{buttons}}</nav>\",\r\n\t\t\t\tsubmit : \"<button type=\\\"submit\\\" class=\\\"alertify-button alertify-button-ok\\\" id=\\\"alertify-ok\\\">{{ok}}</button>\",\r\n\t\t\t\tok     : \"<button class=\\\"alertify-button alertify-button-ok\\\" id=\\\"alertify-ok\\\">{{ok}}</button>\",\r\n\t\t\t\tcancel : \"<button class=\\\"alertify-button alertify-button-cancel\\\" id=\\\"alertify-cancel\\\">{{cancel}}</button>\"\r\n\t\t\t},\r\n\t\t\tinput   : \"<div class=\\\"alertify-text-wrapper\\\"><input type=\\\"text\\\" class=\\\"alertify-text\\\" id=\\\"alertify-text\\\"></div>\",\r\n\t\t\tmessage : \"<p class=\\\"alertify-message\\\">{{message}}</p>\",\r\n\t\t\tlog     : \"<article class=\\\"alertify-log{{class}}\\\">{{message}}</article>\"\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Return the proper transitionend event\r\n\t\t * @return {String}    Transition type string\r\n\t\t */\r\n\t\tgetTransitionEvent = function () {\r\n\t\t\tvar t,\r\n\t\t\t    type,\r\n\t\t\t    supported   = false,\r\n\t\t\t    el          = document.createElement(\"fakeelement\"),\r\n\t\t\t    transitions = {\r\n\t\t\t\t    \"WebkitTransition\" : \"webkitTransitionEnd\",\r\n\t\t\t\t    \"MozTransition\"    : \"transitionend\",\r\n\t\t\t\t    \"OTransition\"      : \"otransitionend\",\r\n\t\t\t\t    \"transition\"       : \"transitionend\"\r\n\t\t\t    };\r\n\r\n\t\t\tfor (t in transitions) {\r\n\t\t\t\tif (el.style[t] !== undefined) {\r\n\t\t\t\t\ttype      = transitions[t];\r\n\t\t\t\t\tsupported = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttype      : type,\r\n\t\t\t\tsupported : supported\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Shorthand for document.getElementById()\r\n\t\t *\r\n\t\t * @param  {String} id    A specific element ID\r\n\t\t * @return {Object}       HTML element\r\n\t\t */\r\n\t\t$ = function (id) {\r\n\t\t\treturn document.getElementById(id);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Alertify private object\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\t_alertify = {\r\n\r\n\t\t\t/**\r\n\t\t\t * Labels object\r\n\t\t\t * @type {Object}\r\n\t\t\t */\r\n\t\t\tlabels : {\r\n\t\t\t\tok     : \"OK\",\r\n\t\t\t\tcancel : \"Cancel\"\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Delay number\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tdelay : 5000,\r\n\r\n\t\t\t/**\r\n\t\t\t * Whether buttons are reversed (default is secondary/primary)\r\n\t\t\t * @type {Boolean}\r\n\t\t\t */\r\n\t\t\tbuttonReverse : false,\r\n\r\n\t\t\t/**\r\n\t\t\t * Which button should be focused by default\r\n\t\t\t * @type {String}\t\"ok\" (default), \"cancel\", or \"none\"\r\n\t\t\t */\r\n\t\t\tbuttonFocus : \"ok\",\r\n\r\n\t\t\t/**\r\n\t\t\t * Set the transition event on load\r\n\t\t\t * @type {[type]}\r\n\t\t\t */\r\n\t\t\ttransition : undefined,\r\n\r\n\t\t\t/**\r\n\t\t\t * Set the proper button click events\r\n\t\t\t *\r\n\t\t\t * @param {Function} fn    [Optional] Callback function\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\taddListeners : function (fn) {\r\n\t\t\t\tvar hasOK     = (typeof btnOK !== \"undefined\"),\r\n\t\t\t\t    hasCancel = (typeof btnCancel !== \"undefined\"),\r\n\t\t\t\t    hasInput  = (typeof input !== \"undefined\"),\r\n\t\t\t\t    val       = \"\",\r\n\t\t\t\t    self      = this,\r\n\t\t\t\t    ok, cancel, common, key, reset;\r\n\r\n\t\t\t\t// ok event handler\r\n\t\t\t\tok = function (event) {\r\n\t\t\t\t\tif (typeof event.preventDefault !== \"undefined\") event.preventDefault();\r\n\t\t\t\t\tcommon(event);\r\n\t\t\t\t\tif (typeof input !== \"undefined\") val = input.value;\r\n\t\t\t\t\tif (typeof fn === \"function\") {\r\n\t\t\t\t\t\tif (typeof input !== \"undefined\") {\r\n\t\t\t\t\t\t\tfn(true, val);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse fn(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// cancel event handler\r\n\t\t\t\tcancel = function (event) {\r\n\t\t\t\t\tif (typeof event.preventDefault !== \"undefined\") event.preventDefault();\r\n\t\t\t\t\tcommon(event);\r\n\t\t\t\t\tif (typeof fn === \"function\") fn(false);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// common event handler (keyup, ok and cancel)\r\n\t\t\t\tcommon = function (event) {\r\n\t\t\t\t\tself.hide();\r\n\t\t\t\t\tself.unbind(document.body, \"keyup\", key);\r\n\t\t\t\t\tself.unbind(btnReset, \"focus\", reset);\r\n\t\t\t\t\tif (hasOK) self.unbind(btnOK, \"click\", ok);\r\n\t\t\t\t\tif (hasCancel) self.unbind(btnCancel, \"click\", cancel);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// keyup handler\r\n\t\t\t\tkey = function (event) {\r\n\t\t\t\t\tvar keyCode = event.keyCode;\r\n\t\t\t\t\tif ((keyCode === keys.SPACE && !hasInput) || (hasInput && keyCode === keys.ENTER)) ok(event);\r\n\t\t\t\t\tif (keyCode === keys.ESC && hasCancel) cancel(event);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// reset focus to first item in the dialog\r\n\t\t\t\treset = function (event) {\r\n\t\t\t\t\tif (hasInput) input.focus();\r\n\t\t\t\t\telse if (!hasCancel || self.buttonReverse) btnOK.focus();\r\n\t\t\t\t\telse btnCancel.focus();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// handle reset focus link\r\n\t\t\t\t// this ensures that the keyboard focus does not\r\n\t\t\t\t// ever leave the dialog box until an action has\r\n\t\t\t\t// been taken\r\n\t\t\t\tthis.bind(btnReset, \"focus\", reset);\r\n\t\t\t\tthis.bind(btnResetBack, \"focus\", reset);\r\n\t\t\t\t// handle OK click\r\n\t\t\t\tif (hasOK) this.bind(btnOK, \"click\", ok);\r\n\t\t\t\t// handle Cancel click\r\n\t\t\t\tif (hasCancel) this.bind(btnCancel, \"click\", cancel);\r\n\t\t\t\t// listen for keys, Cancel => ESC\r\n\t\t\t\tthis.bind(document.body, \"keyup\", key);\r\n\t\t\t\tif (!this.transition.supported) {\r\n\t\t\t\t\tthis.setFocus();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Bind events to elements\r\n\t\t\t *\r\n\t\t\t * @param  {Object}   el       HTML Object\r\n\t\t\t * @param  {Event}    event    Event to attach to element\r\n\t\t\t * @param  {Function} fn       Callback function\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tbind : function (el, event, fn) {\r\n\t\t\t\tif (typeof el.addEventListener === \"function\") {\r\n\t\t\t\t\tel.addEventListener(event, fn, false);\r\n\t\t\t\t} else if (el.attachEvent) {\r\n\t\t\t\t\tel.attachEvent(\"on\" + event, fn);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Use alertify as the global error handler (using window.onerror)\r\n\t\t\t *\r\n\t\t\t * @return {boolean} success\r\n\t\t\t */\r\n\t\t\thandleErrors : function () {\r\n\t\t\t\tif (typeof global.onerror !== \"undefined\") {\r\n\t\t\t\t\tvar self = this;\r\n\t\t\t\t\tglobal.onerror = function (msg, url, line) {\r\n\t\t\t\t\t\tself.error(\"[\" + msg + \" on line \" + line + \" of \" + url + \"]\", 0);\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Append button HTML strings\r\n\t\t\t *\r\n\t\t\t * @param {String} secondary    The secondary button HTML string\r\n\t\t\t * @param {String} primary      The primary button HTML string\r\n\t\t\t *\r\n\t\t\t * @return {String}             The appended button HTML strings\r\n\t\t\t */\r\n\t\t\tappendButtons : function (secondary, primary) {\r\n\t\t\t\treturn this.buttonReverse ? primary + secondary : secondary + primary;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Build the proper message box\r\n\t\t\t *\r\n\t\t\t * @param  {Object} item    Current object in the queue\r\n\t\t\t *\r\n\t\t\t * @return {String}         An HTML string of the message box\r\n\t\t\t */\r\n\t\t\tbuild : function (item) {\r\n\t\t\t\tvar html    = \"\",\r\n\t\t\t\t    type    = item.type,\r\n\t\t\t\t    message = item.message,\r\n\t\t\t\t    css     = item.cssClass || \"\";\r\n\r\n\t\t\t\thtml += \"<div class=\\\"alertify-dialog\\\">\";\r\n\t\t\t\thtml += \"<a id=\\\"alertify-resetFocusBack\\\" class=\\\"alertify-resetFocus\\\" href=\\\"#\\\">Reset Focus</a>\";\r\n\r\n\t\t\t\tif (_alertify.buttonFocus === \"none\") html += \"<a href=\\\"#\\\" id=\\\"alertify-noneFocus\\\" class=\\\"alertify-hidden\\\"></a>\";\r\n\r\n\t\t\t\t// doens't require an actual form\r\n\t\t\t\tif (type === \"prompt\") html += \"<div id=\\\"alertify-form\\\">\";\r\n\r\n\t\t\t\thtml += \"<article class=\\\"alertify-inner\\\">\";\r\n\t\t\t\thtml += dialogs.message.replace(\"{{message}}\", message);\r\n\r\n\t\t\t\tif (type === \"prompt\") html += dialogs.input;\r\n\r\n\t\t\t\thtml += dialogs.buttons.holder;\r\n\t\t\t\thtml += \"</article>\";\r\n\r\n\t\t\t\tif (type === \"prompt\") html += \"</div>\";\r\n\r\n\t\t\t\thtml += \"<a id=\\\"alertify-resetFocus\\\" class=\\\"alertify-resetFocus\\\" href=\\\"#\\\">Reset Focus</a>\";\r\n\t\t\t\thtml += \"</div>\";\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\tcase \"confirm\":\r\n\t\t\t\t\thtml = html.replace(\"{{buttons}}\", this.appendButtons(dialogs.buttons.cancel, dialogs.buttons.ok));\r\n\t\t\t\t\thtml = html.replace(\"{{ok}}\", this.labels.ok).replace(\"{{cancel}}\", this.labels.cancel);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"prompt\":\r\n\t\t\t\t\thtml = html.replace(\"{{buttons}}\", this.appendButtons(dialogs.buttons.cancel, dialogs.buttons.submit));\r\n\t\t\t\t\thtml = html.replace(\"{{ok}}\", this.labels.ok).replace(\"{{cancel}}\", this.labels.cancel);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"alert\":\r\n\t\t\t\t\thtml = html.replace(\"{{buttons}}\", dialogs.buttons.ok);\r\n\t\t\t\t\thtml = html.replace(\"{{ok}}\", this.labels.ok);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telDialog.className = \"alertify alertify-\" + type + \" \" + css;\r\n\t\t\t\telCover.className  = \"alertify-cover\";\r\n\t\t\t\treturn html;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Close the log messages\r\n\t\t\t *\r\n\t\t\t * @param  {Object} elem    HTML Element of log message to close\r\n\t\t\t * @param  {Number} wait    [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tclose : function (elem, wait) {\r\n\t\t\t\t// Unary Plus: +\"2\" === 2\r\n\t\t\t\tvar timer = (wait && !isNaN(wait)) ? +wait : this.delay,\r\n\t\t\t\t    self  = this,\r\n\t\t\t\t    hideElement, transitionDone;\r\n\r\n\t\t\t\t// set click event on log messages\r\n\t\t\t\tthis.bind(elem, \"click\", function () {\r\n\t\t\t\t\thideElement(elem);\r\n\t\t\t\t});\r\n\t\t\t\t// Hide the dialog box after transition\r\n\t\t\t\t// This ensure it doens't block any element from being clicked\r\n\t\t\t\ttransitionDone = function (event) {\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t// unbind event so function only gets called once\r\n\t\t\t\t\tself.unbind(this, self.transition.type, transitionDone);\r\n\t\t\t\t\t// remove log message\r\n\t\t\t\t\telLog.removeChild(this);\r\n\t\t\t\t\tif (!elLog.hasChildNodes()) elLog.className += \" alertify-logs-hidden\";\r\n\t\t\t\t};\r\n\t\t\t\t// this sets the hide class to transition out\r\n\t\t\t\t// or removes the child if css transitions aren't supported\r\n\t\t\t\thideElement = function (el) {\r\n\t\t\t\t\t// ensure element exists\r\n\t\t\t\t\tif (typeof el !== \"undefined\" && el.parentNode === elLog) {\r\n\t\t\t\t\t\t// whether CSS transition exists\r\n\t\t\t\t\t\tif (self.transition.supported) {\r\n\t\t\t\t\t\t\tself.bind(el, self.transition.type, transitionDone);\r\n\t\t\t\t\t\t\tel.className += \" alertify-log-hide\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telLog.removeChild(el);\r\n\t\t\t\t\t\t\tif (!elLog.hasChildNodes()) elLog.className += \" alertify-logs-hidden\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t// never close (until click) if wait is set to 0\r\n\t\t\t\tif (wait === 0) return;\r\n\t\t\t\t// set timeout to auto close the log message\r\n\t\t\t\tsetTimeout(function () { hideElement(elem); }, timer);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Create a dialog box\r\n\t\t\t *\r\n\t\t\t * @param  {String}   message        The message passed from the callee\r\n\t\t\t * @param  {String}   type           Type of dialog to create\r\n\t\t\t * @param  {Function} fn             [Optional] Callback function\r\n\t\t\t * @param  {String}   placeholder    [Optional] Default value for prompt input field\r\n\t\t\t * @param  {String}   cssClass       [Optional] Class(es) to append to dialog box\r\n\t\t\t *\r\n\t\t\t * @return {Object}\r\n\t\t\t */\r\n\t\t\tdialog : function (message, type, fn, placeholder, cssClass) {\r\n\t\t\t\t// set the current active element\r\n\t\t\t\t// this allows the keyboard focus to be resetted\r\n\t\t\t\t// after the dialog box is closed\r\n\t\t\t\telCallee = document.activeElement;\r\n\t\t\t\t// check to ensure the alertify dialog element\r\n\t\t\t\t// has been successfully created\r\n\t\t\t\tvar check = function () {\r\n\t\t\t\t\tif ((elLog && elLog.scrollTop !== null) && (elCover && elCover.scrollTop !== null)) return;\r\n\t\t\t\t\telse check();\r\n\t\t\t\t};\r\n\t\t\t\t// error catching\r\n\t\t\t\tif (typeof message !== \"string\") throw new Error(\"message must be a string\");\r\n\t\t\t\tif (typeof type !== \"string\") throw new Error(\"type must be a string\");\r\n\t\t\t\tif (typeof fn !== \"undefined\" && typeof fn !== \"function\") throw new Error(\"fn must be a function\");\r\n\t\t\t\t// initialize alertify if it hasn't already been done\r\n\t\t\t\tthis.init();\r\n\t\t\t\tcheck();\r\n\r\n\t\t\t\tqueue.push({ type: type, message: message, callback: fn, placeholder: placeholder, cssClass: cssClass });\r\n\t\t\t\tif (!isopen) this.setup();\r\n\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Extend the log method to create custom methods\r\n\t\t\t *\r\n\t\t\t * @param  {String} type    Custom method name\r\n\t\t\t *\r\n\t\t\t * @return {Function}\r\n\t\t\t */\r\n\t\t\textend : function (type) {\r\n\t\t\t\tif (typeof type !== \"string\") throw new Error(\"extend method must have exactly one paramter\");\r\n\t\t\t\treturn function (message, wait) {\r\n\t\t\t\t\tthis.log(message, type, wait);\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Hide the dialog and rest to defaults\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\thide : function () {\r\n\t\t\t\tvar transitionDone,\r\n\t\t\t\t    self = this;\r\n\t\t\t\t// remove reference from queue\r\n\t\t\t\tqueue.splice(0,1);\r\n\t\t\t\t// if items remaining in the queue\r\n\t\t\t\tif (queue.length > 0) this.setup(true);\r\n\t\t\t\telse {\r\n\t\t\t\t\tisopen = false;\r\n\t\t\t\t\t// Hide the dialog box after transition\r\n\t\t\t\t\t// This ensure it doens't block any element from being clicked\r\n\t\t\t\t\ttransitionDone = function (event) {\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t// unbind event so function only gets called once\r\n\t\t\t\t\t\tself.unbind(elDialog, self.transition.type, transitionDone);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// whether CSS transition exists\r\n\t\t\t\t\tif (this.transition.supported) {\r\n\t\t\t\t\t\tthis.bind(elDialog, this.transition.type, transitionDone);\r\n\t\t\t\t\t\telDialog.className = \"alertify alertify-hide alertify-hidden\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telDialog.className = \"alertify alertify-hide alertify-hidden alertify-isHidden\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telCover.className  = \"alertify-cover alertify-cover-hidden\";\r\n\t\t\t\t\t// set focus to the last element or body\r\n\t\t\t\t\t// after the dialog is closed\r\n\t\t\t\t\telCallee.focus();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initialize Alertify\r\n\t\t\t * Create the 2 main elements\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tinit : function () {\r\n\t\t\t\t// ensure legacy browsers support html5 tags\r\n\t\t\t\tdocument.createElement(\"nav\");\r\n\t\t\t\tdocument.createElement(\"article\");\r\n\t\t\t\tdocument.createElement(\"section\");\r\n\t\t\t\t// cover\r\n\t\t\t\tif ($(\"alertify-cover\") == null) {\r\n\t\t\t\t\telCover = document.createElement(\"div\");\r\n\t\t\t\t\telCover.setAttribute(\"id\", \"alertify-cover\");\r\n\t\t\t\t\telCover.className = \"alertify-cover alertify-cover-hidden\";\r\n\t\t\t\t\tdocument.body.appendChild(elCover);\r\n\t\t\t\t}\r\n\t\t\t\t// main element\r\n\t\t\t\tif ($(\"alertify\") == null) {\r\n\t\t\t\t\tisopen = false;\r\n\t\t\t\t\tqueue = [];\r\n\t\t\t\t\telDialog = document.createElement(\"section\");\r\n\t\t\t\t\telDialog.setAttribute(\"id\", \"alertify\");\r\n\t\t\t\t\telDialog.className = \"alertify alertify-hidden\";\r\n\t\t\t\t\tdocument.body.appendChild(elDialog);\r\n\t\t\t\t}\r\n\t\t\t\t// log element\r\n\t\t\t\tif ($(\"alertify-logs\") == null) {\r\n\t\t\t\t\telLog = document.createElement(\"section\");\r\n\t\t\t\t\telLog.setAttribute(\"id\", \"alertify-logs\");\r\n\t\t\t\t\telLog.className = \"alertify-logs alertify-logs-hidden\";\r\n\t\t\t\t\tdocument.body.appendChild(elLog);\r\n\t\t\t\t}\r\n\t\t\t\t// set tabindex attribute on body element\r\n\t\t\t\t// this allows script to give it focus\r\n\t\t\t\t// after the dialog is closed\r\n\t\t\t\tdocument.body.setAttribute(\"tabindex\", \"0\");\r\n\t\t\t\t// set transition type\r\n\t\t\t\tthis.transition = getTransitionEvent();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Show a new log message box\r\n\t\t\t *\r\n\t\t\t * @param  {String} message    The message passed from the callee\r\n\t\t\t * @param  {String} type       [Optional] Optional type of log message\r\n\t\t\t * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding the log\r\n\t\t\t *\r\n\t\t\t * @return {Object}\r\n\t\t\t */\r\n\t\t\tlog : function (message, type, wait) {\r\n\t\t\t\t// check to ensure the alertify dialog element\r\n\t\t\t\t// has been successfully created\r\n\t\t\t\tvar check = function () {\r\n\t\t\t\t\tif (elLog && elLog.scrollTop !== null) return;\r\n\t\t\t\t\telse check();\r\n\t\t\t\t};\r\n\t\t\t\t// initialize alertify if it hasn't already been done\r\n\t\t\t\tthis.init();\r\n\t\t\t\tcheck();\r\n\r\n\t\t\t\telLog.className = \"alertify-logs\";\r\n\t\t\t\tthis.notify(message, type, wait);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Add new log message\r\n\t\t\t * If a type is passed, a class name \"alertify-log-{type}\" will get added.\r\n\t\t\t * This allows for custom look and feel for various types of notifications.\r\n\t\t\t *\r\n\t\t\t * @param  {String} message    The message passed from the callee\r\n\t\t\t * @param  {String} type       [Optional] Type of log message\r\n\t\t\t * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tnotify : function (message, type, wait) {\r\n\t\t\t\tvar log = document.createElement(\"article\");\r\n\t\t\t\tlog.className = \"alertify-log\" + ((typeof type === \"string\" && type !== \"\") ? \" alertify-log-\" + type : \"\");\r\n\t\t\t\tlog.innerHTML = message;\r\n\t\t\t\t// append child\r\n\t\t\t\telLog.appendChild(log);\r\n\t\t\t\t// triggers the CSS animation\r\n\t\t\t\tsetTimeout(function() { log.className = log.className + \" alertify-log-show\"; }, 50);\r\n\t\t\t\tthis.close(log, wait);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set properties\r\n\t\t\t *\r\n\t\t\t * @param {Object} args     Passing parameters\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tset : function (args) {\r\n\t\t\t\tvar k;\r\n\t\t\t\t// error catching\r\n\t\t\t\tif (typeof args !== \"object\" && args instanceof Array) throw new Error(\"args must be an object\");\r\n\t\t\t\t// set parameters\r\n\t\t\t\tfor (k in args) {\r\n\t\t\t\t\tif (args.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tthis[k] = args[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Common place to set focus to proper element\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tsetFocus : function () {\r\n\t\t\t\tif (input) {\r\n\t\t\t\t\tinput.focus();\r\n\t\t\t\t\tinput.select();\r\n\t\t\t\t}\r\n\t\t\t\telse btnFocus.focus();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initiate all the required pieces for the dialog box\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tsetup : function (fromQueue) {\r\n\t\t\t\tvar item = queue[0],\r\n\t\t\t\t    self = this,\r\n\t\t\t\t    transitionDone;\r\n\r\n\t\t\t\t// dialog is open\r\n\t\t\t\tisopen = true;\r\n\t\t\t\t// Set button focus after transition\r\n\t\t\t\ttransitionDone = function (event) {\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\tself.setFocus();\r\n\t\t\t\t\t// unbind event so function only gets called once\r\n\t\t\t\t\tself.unbind(elDialog, self.transition.type, transitionDone);\r\n\t\t\t\t};\r\n\t\t\t\t// whether CSS transition exists\r\n\t\t\t\tif (this.transition.supported && !fromQueue) {\r\n\t\t\t\t\tthis.bind(elDialog, this.transition.type, transitionDone);\r\n\t\t\t\t}\r\n\t\t\t\t// build the proper dialog HTML\r\n\t\t\t\telDialog.innerHTML = this.build(item);\r\n\t\t\t\t// assign all the common elements\r\n\t\t\t\tbtnReset  = $(\"alertify-resetFocus\");\r\n\t\t\t\tbtnResetBack  = $(\"alertify-resetFocusBack\");\r\n\t\t\t\tbtnOK     = $(\"alertify-ok\")     || undefined;\r\n\t\t\t\tbtnCancel = $(\"alertify-cancel\") || undefined;\r\n\t\t\t\tbtnFocus  = (_alertify.buttonFocus === \"cancel\") ? btnCancel : ((_alertify.buttonFocus === \"none\") ? $(\"alertify-noneFocus\") : btnOK),\r\n\t\t\t\tinput     = $(\"alertify-text\")   || undefined;\r\n\t\t\t\tform      = $(\"alertify-form\")   || undefined;\r\n\t\t\t\t// add placeholder value to the input field\r\n\t\t\t\tif (typeof item.placeholder === \"string\" && item.placeholder !== \"\") input.value = item.placeholder;\r\n\t\t\t\tif (fromQueue) this.setFocus();\r\n\t\t\t\tthis.addListeners(item.callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Unbind events to elements\r\n\t\t\t *\r\n\t\t\t * @param  {Object}   el       HTML Object\r\n\t\t\t * @param  {Event}    event    Event to detach to element\r\n\t\t\t * @param  {Function} fn       Callback function\r\n\t\t\t *\r\n\t\t\t * @return {undefined}\r\n\t\t\t */\r\n\t\t\tunbind : function (el, event, fn) {\r\n\t\t\t\tif (typeof el.removeEventListener === \"function\") {\r\n\t\t\t\t\tel.removeEventListener(event, fn, false);\r\n\t\t\t\t} else if (el.detachEvent) {\r\n\t\t\t\t\tel.detachEvent(\"on\" + event, fn);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\talert   : function (message, fn, cssClass) { _alertify.dialog(message, \"alert\", fn, \"\", cssClass); return this; },\r\n\t\t\tconfirm : function (message, fn, cssClass) { _alertify.dialog(message, \"confirm\", fn, \"\", cssClass); return this; },\r\n\t\t\textend  : _alertify.extend,\r\n\t\t\tinit    : _alertify.init,\r\n\t\t\tlog     : function (message, type, wait) { _alertify.log(message, type, wait); return this; },\r\n\t\t\tprompt  : function (message, fn, placeholder, cssClass) { _alertify.dialog(message, \"prompt\", fn, placeholder, cssClass); return this; },\r\n\t\t\tsuccess : function (message, wait) { _alertify.log(message, \"success\", wait); return this; },\r\n\t\t\terror   : function (message, wait) { _alertify.log(message, \"error\", wait); return this; },\r\n\t\t\tset     : function (args) { _alertify.set(args); },\r\n\t\t\tlabels  : _alertify.labels,\r\n\t\t\tdebug   : _alertify.handleErrors\r\n\t\t};\r\n\t};\r\n\r\n\t// AMD and window support\r\n\tif (typeof define === \"function\") {\r\n\t\tdefine([], function () { return new Alertify(); });\r\n\t} else if (typeof global.alertify === \"undefined\") {\r\n\t\tglobal.alertify = new Alertify();\r\n\t}\r\n\r\n}(window));\r\n","module.exports = \"\\r\\n#mainContent.app-component {\\r\\n    padding-top: 150px;\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n.navbar-inner.app-component {\\r\\n  padding-left: 0px;\\r\\n  border-radius: 0px;\\r\\n  box-shadow: none;\\r\\n  background-color: #56B2CB;\\r\\n  background-image: none;\\r\\n  min-height: 150px;\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n\\r\\n.navbar.app-component .nav > .active > a,\\r\\n.navbar.app-component .nav > .active > a:hover,\\r\\n.navbar.app-component .nav > .active > a:focus {\\r\\n  border-bottom: 2px white solid;\\r\\n  box-shadow: none;\\r\\n  color: lightgray;\\r\\n}\\r\\n\\r\\n\\r\\n.navbar.app-component .nav > li {\\r\\n  cursor: pointer;\\r\\n  color: lightgray !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n\\r\\n\\r\\n.navbar.app-component .nav > li:hover {\\r\\n    color: lightgray !important;\\r\\n    background-color: transparent !important;\\r\\n  }\\r\\n\\r\\n\\r\\n.navbar-fixed-top.app-component .navbar-inner.app-component,\\r\\n.navbar-static-top.app-component .navbar-inner.app-component {\\r\\n  box-shadow: 0 1px 00px rgba(0, 0, 0, 0);\\r\\n}\\r\\n\\r\\n\\r\\np.navbar-text.app-component {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n\\r\\np.navbar-text.app-component a {\\r\\n    color: #fff;\\r\\n  }\\r\\n\\r\\n\\r\\n.vcenter_text.app-component {\\r\\n    line-height: 40px;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n\\r\\n.prebootShow.app-component {\\r\\n    opacity: 1 !important;\\r\\n}\\r\\n\\r\\n\\r\\n.prebootStep.app-component {\\r\\n    opacity: 0;\\r\\n    transition: .5s ease-in-out all;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"app_container\\\" class=\\\"{{configurations.theme | lowercase}}-theme\\\">\\r\\n  <ngx-toasta></ngx-toasta>\\r\\n  <style>\\r\\n    /**\\r\\n    select.form-control {\\r\\n      -moz-appearance: none;\\r\\n      -webkit-appearance: none;\\r\\n      appearance: none;\\r\\n    }\\r\\n      **/\\r\\n    select.form-control.input-sm {\\r\\n      height: 22px;\\r\\n      line-height: inherit;\\r\\n      text-align: center;\\r\\n    }\\r\\n\\r\\n    .bootstrap-select > .dropdown-toggle {\\r\\n      padding: 2px 12px;\\r\\n    }\\r\\n  </style>\\r\\n  <div class=\\\"container\\\">\\r\\n    <nav id=\\\"header\\\" class=\\\"app-component navbar navbar-inner navbar-fixed-top\\\">\\r\\n      <nav class=\\\"container\\\">\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"max-width:100px;float:right;margin-top:4px;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-xs-2 text-right\\\" style=\\\"padding:0px;margin-top:1px;\\\">\\r\\n                <img [src]=\\\"globeImage\\\" class=\\\"img-responsive\\\" alt=\\\"Globe ICON\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-10\\\" style=\\\"padding-left:5px;\\\">\\r\\n\\r\\n                <select id=\\\"language\\\" [(ngModel)]=\\\"configurations.language\\\" (change)=\\\"languageChange()\\\" #languageSelector=\\\"bootstrap-select\\\" bootstrapSelect class=\\\"selectpicker form-control input-sm\\\">\\r\\n\\r\\n                  <!--<option data-subtext=\\\"(Default)\\\" value=\\\"en\\\">{{'preferences.English' | translate}}</option>\\r\\n  <option value=\\\"fr\\\">{{'preferences.French' | translate}}</option>\\r\\n  <option value=\\\"es\\\">{{'preferences.Spanish' | translate}}</option>\\r\\n  <option value=\\\"de\\\">{{'preferences.Dutch' | translate}}</option>-->\\r\\n                  <option data-subtext=\\\"(Default)\\\" value=\\\"en\\\">English</option>\\r\\n                  <option value=\\\"fr\\\">French</option>\\r\\n                  <option value=\\\"es\\\">Spanish</option>\\r\\n                  <option value=\\\"de\\\">Dutch</option>\\r\\n                  <option value=\\\"zh\\\">Chinese</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 50px;\\\">\\r\\n          <div class=\\\"col-xs-6\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"app-component navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\".menuItemsContainer.app-component\\\" aria-expanded=\\\"false\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\">a</span>\\r\\n                <span class=\\\"icon-bar\\\">b</span>\\r\\n                <span class=\\\"icon-bar\\\">c</span>\\r\\n              </button>\\r\\n              <a ngPreserveWhitespaces class=\\\"app-component navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n                <img [src]=\\\"appLogo\\\" alt=\\\"logo\\\">\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!isUserLoggedIn\\\" class=\\\"col-xs-6 text-right\\\">\\r\\n            <div style=\\\"margin-top: 15px;\\\">\\r\\n              <div style=\\\"font-size: x-large; color: white; margin-top: 30px; font-weight: 500;\\\">\\r\\n                <span>\\r\\n                  {{'app.Welcome' | translate}}\\r\\n                </span>\\r\\n              </div>\\r\\n              <div style=\\\"font-size: large; color: white; font-weight: 300;\\\">\\r\\n                <span>\\r\\n                  {{'app.Notifications' | translate}}\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isUserLoggedIn\\\" class=\\\"col-xs-6 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div style=\\\"font-size: x-large; color: white; margin-top: 5px; font-weight: 500;\\\">\\r\\n                  <div>\\r\\n                    {{this.pageAccount?.name}}\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div style=\\\"font-size: small; color: white; font-weight: 500; \\\">\\r\\n                  <div>\\r\\n                    {{ 'mainMenu.CustomerIdNumber' | translate }}: {{this.pageAccount?.number}}\\r\\n                    <br />\\r\\n                    {{this.pageAccount?.address?.line1}}\\r\\n                    <br />\\r\\n                    {{this.pageAccount?.address?.municipality}}, {{this.pageAccount?.address?.stateOrProvince}} {{this.pageAccount?.address?.postalCode}}\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div style=\\\"font-size: large; color: white; font-weight: 300;\\\">\\r\\n                  <span>\\r\\n\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"isUserLoggedIn\\\" style=\\\"background-color: #337ab7; top: 150px; right: 0px; position: fixed; width: 100%;\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"app-component collapse navbar-collapse menuItemsContainer\\\">\\r\\n                <ul class=\\\"app-component nav navbar-nav\\\">\\r\\n                  <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a class=\\\"sa-menu-link\\\" routerLink=\\\"/secure\\\" title=\\\"{{ 'mainMenu.AccountSummary' | translate }}\\\">{{ 'mainMenu.AccountSummary' | translate }}</a></li>\\r\\n                  <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a class=\\\"sa-menu-link\\\" routerLink=\\\"/secure/payment/profile\\\" title=\\\"{{ 'mainMenu.PaymentMethods' | translate }}\\\">{{ 'mainMenu.PaymentMethods' | translate }}</a></li>\\r\\n                  <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a class=\\\"sa-menu-link\\\" routerLink=\\\"/secure/settings\\\" title=\\\"{{ 'mainMenu.Settings' | translate }}\\\">{{ 'mainMenu.Settings' | translate }}</a></li>\\r\\n                  <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a class=\\\"sa-menu-link\\\" routerLink=\\\"/secure/contactUs\\\" title=\\\"{{ 'mainMenu.ContactUs' | translate }}\\\">{{ 'mainMenu.ContactUs' | translate }}</a></li>\\r\\n\\r\\n                  <li (click)=\\\"logout()\\\"><a class=\\\"sa-menu-link\\\" href=\\\"javascript:;\\\" title=\\\"{{'mainMenu.Logout' | translate}}\\\">{{'mainMenu.Logout' | translate}}</a></li>\\r\\n                </ul>\\r\\n\\r\\n                <div class=\\\"app-component navbar-text navbar-right sa-popup\\\" (mouseenter)=\\\"togglePopover($event)\\\" (mouseleave)=\\\"togglePopover($event)\\\">\\r\\n                  <div class=\\\"sa-enroll-auto-pay-button\\\" routerLink=\\\"/secure/payment/autopay\\\">\\r\\n                    {{ 'mainMenu.EnrollInAutoPay' | translate }}\\r\\n                    <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon\\\"></span>\\r\\n                    <span class=\\\"sa-popuptext\\\" [class.sa-show]=\\\"isAutoEnrollPopoverVisible\\\" id=\\\"autpPayPopover\\\" style=\\\"margin-right: 20px;\\\">{{'mainMenu.EnrollToolTip' | translate}}</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </nav>\\r\\n    </nav>\\r\\n\\r\\n    <div id=\\\"pre-bootstrap\\\" *ngIf=\\\"!removePrebootScreen\\\" [class.prebootShow.app-component]=\\\"!isAppLoaded\\\" class=\\\"app-component prebootStep\\\">\\r\\n      <div class=\\\"messaging\\\">\\r\\n        <h1>\\r\\n          Loaded!\\r\\n        </h1>\\r\\n        <p>\\r\\n          <span class=\\\"appName\\\" style=\\\"font-style:italic\\\">Portal</span>\\r\\n        </p>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"mainContent\\\" class=\\\"app-component sa-box-shadow\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"footer\\\" class=\\\" text-center\\\">\\r\\n      <div class=\\\"app-component\\\">\\r\\n        <div class=\\\"sa-footer\\\">\\r\\n          <footer>\\r\\n            <div style=\\\"color: darkgrey; font-weight: bold; font-size: 14px;padding-bottom: 8px;\\\">\\r\\n              <span>&copy; {{getYear()}} {{ 'Login.CopyRight' | translate }}</span><span style=\\\"margin-left: 8px; margin-right: 8px;\\\">|</span>\\r\\n              <span><a href=\\\"https://www.scentair.com/legal/privacy.html\\\" target=\\\"_blank\\\">{{ 'Login.Privacy' | translate }}</a></span><span style=\\\"margin-left: 8px; margin-right: 8px;\\\">|</span>\\r\\n              <span><a href=\\\"https://www.scentair.com/legal/termsofuse.html\\\" target=\\\"_blank\\\">{{ 'Login.TermsofUse' | translate }}</a></span><span style=\\\"margin-left: 8px; margin-right: 8px;\\\">|</span>\\r\\n\\r\\n\\r\\n              <span *ngIf=\\\"!isUserLoggedIn\\\"><a routerLink=\\\"/contactus\\\">{{ 'Login.ContactUsOnFooter' | translate }}</a><span style=\\\"margin-left: 8px; margin-right: 8px;\\\">|</span></span>\\r\\n              <span *ngIf=\\\"isUserLoggedIn\\\"><a routerLink=\\\"/secure/contactus\\\">{{ 'Login.ContactUsOnFooter' | translate }}</a><span style=\\\"margin-left: 8px; margin-right: 8px;\\\">|</span></span>\\r\\n              <span><a href=\\\"https://www.scentair.com/customercenter/AccountCenterFAQ.html\\\" target=\\\"_blank\\\">{{ 'Login.FAQ' | translate }}</a></span>\\r\\n            </div>\\r\\n            <div style=\\\"color: darkgrey; font-weight: bold; font-size: 12px;\\\">\\r\\n              <span>{{ 'Login.Corporate' | translate }}</span>\\r\\n            </div>\\r\\n          </footer>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <br />\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shouldShowLoginModal\\\" class=\\\"modal fade\\\" bsModal #loginModal=\\\"bs-modal\\\" (onShown)=\\\"onLoginModalShown()\\\" (onHidden)=\\\"onLoginModalHidden()\\\" (onHide)=\\\"onLoginModalHide()\\\"\\r\\n       [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n      <app-login #loginControl isModal=\\\"true\\\"></app-login>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ViewEncapsulation, OnInit, OnDestroy, ViewChildren, AfterViewInit, QueryList, ElementRef, DebugElement } from \"@angular/core\";\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { ToastaService, ToastaConfig, ToastOptions, ToastData } from 'ngx-toasta';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\nimport { AlertService, AlertDialog, DialogType, AlertMessage, MessageSeverity } from '../services/alert.service';\r\nimport { NotificationService } from \"../services/notification.service\";\r\nimport { AppTranslationService } from \"../services/app-translation.service\";\r\nimport { AccountService } from '../services/account.service';\r\nimport { LocalStoreManager } from '../services/local-store-manager.service';\r\nimport { AppTitleService } from '../services/app-title.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ConfigurationService } from '../services/configuration.service';\r\nimport { Permission } from '../models/permission.model';\r\nimport { LoginComponent } from \"../components/login/login.component\";\r\nimport { Account } from \"../models/account.model\";\r\nimport { element } from \"protractor\";\r\nimport { Subject, Observable, Subscription } from \"rxjs\";\r\nimport { access } from \"fs\";\r\nimport { LanguageObservableService } from \"../services/language-observable.service\";\r\n\r\n\r\nvar alertify: any = require('../assets/scripts/alertify.js');\r\n\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent implements OnInit, AfterViewInit {\r\n\r\n  isAutoEnrollPopoverVisible: boolean;\r\n  isAppLoaded: boolean;\r\n  isUserLoggedIn: boolean;\r\n  shouldShowLoginModal: boolean;\r\n  removePrebootScreen: boolean;\r\n  newNotificationCount = 0;\r\n  appTitle = \"Portal\";\r\n  appLogo = '../assets/images/sa-logo.png';\r\n  globeImage = '../assets/images/Globe Icon.png';\r\n\r\n\r\n  stickyToasties: number[] = [];\r\n\r\n  dataLoadingConsecutiveFailurs = 0;\r\n  notificationsLoadingSubscription: any;\r\n\r\n  @ViewChildren('loginModal,loginControl')\r\n  modalLoginControls: QueryList<any>;\r\n\r\n  loginModal: ModalDirective;\r\n  loginControl: LoginComponent;\r\n  accountSubcription: Subscription;\r\n  CurrentAccount: Subject<Account>;\r\n  pageAccount: Account;\r\n\r\n\r\n  get notificationsTitle() {\r\n\r\n    let gT = (key: string) => this.translationService.getTranslation(key);\r\n\r\n    if (this.newNotificationCount)\r\n      return `${gT(\"app.Notifications\")} (${this.newNotificationCount} ${gT(\"app.New\")})`;\r\n    else\r\n      return gT(\"app.Notifications\");\r\n  }\r\n\r\n\r\n  constructor(\r\n    storageManager: LocalStoreManager,\r\n    private toastaService: ToastaService,\r\n    private toastaConfig: ToastaConfig,\r\n    private accountService: AccountService,\r\n    private alertService: AlertService,\r\n    private notificationService: NotificationService,\r\n    private appTitleService: AppTitleService,\r\n    private authService: AuthService,\r\n    private translationService: AppTranslationService,\r\n    public configurations: ConfigurationService,\r\n    public userInfoService: LanguageObservableService,\r\n    public router: Router) {\r\n\r\n    storageManager.initialiseStorageSyncListener();\r\n\r\n    translationService.addLanguages([\"en\", \"fr\", \"sp\", \"de\", \"es\", \"zh\"]);\r\n    translationService.setDefaultLanguage('en');\r\n\r\n\r\n    this.toastaConfig.theme = 'bootstrap';\r\n    this.toastaConfig.position = 'top-right';\r\n    this.toastaConfig.limit = 100;\r\n    this.toastaConfig.showClose = true;\r\n\r\n    this.appTitleService.appName = this.appTitle;\r\n    this.CurrentAccount = new Subject<Account>();\r\n    this.pageAccount = null;\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n  \r\n\r\n  onLoginModalShown() {\r\n    this.alertService.showStickyMessage(\"Session Expired\", \"Your Session has expired. Please log in again\", MessageSeverity.info);\r\n  }\r\n\r\n\r\n  onLoginModalHidden() {\r\n    this.alertService.resetStickyMessage();\r\n    this.loginControl.reset();\r\n    this.shouldShowLoginModal = false;\r\n\r\n    if (this.authService.isSessionExpired)\r\n      this.alertService.showStickyMessage(\"Session Expired\", \"Your Session has expired. Please log in again to renew your session\", MessageSeverity.warn);\r\n  }\r\n\r\n\r\n  onLoginModalHide() {\r\n    this.alertService.resetStickyMessage();\r\n  }\r\n\r\n  languageChange() {\r\n     \r\n    this.userInfoService.setDefaultLanguage(this.configurations.language);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.isUserLoggedIn = this.authService.isLoggedIn;\r\n    if (!this.isUserLoggedIn)\r\n      this.configurations.import(null);\r\n    this.userInfoService.setDefaultLanguage(\"en\");\r\n\r\n    // 1 sec to ensure all the effort to get the css animation working is appreciated :|, Preboot screen is removed .5 sec later\r\n    setTimeout(() => this.isAppLoaded = true, 1000);\r\n    setTimeout(() => this.removePrebootScreen = true, 1500);\r\n\r\n    setTimeout(() => {\r\n      if (this.isUserLoggedIn) {\r\n        this.alertService.resetStickyMessage();\r\n      }\r\n    }, 2000);\r\n\r\n\r\n    this.alertService.getDialogEvent().subscribe(alert => this.showDialog(alert));\r\n    this.alertService.getMessageEvent().subscribe(message => this.showToast(message, false));\r\n    this.alertService.getStickyMessageEvent().subscribe(message => this.showToast(message, true));\r\n\r\n    this.authService.reLoginDelegate = () => this.shouldShowLoginModal = true;\r\n\r\n    this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\r\n      this.isUserLoggedIn = isLoggedIn;\r\n\r\n      setTimeout(() => {\r\n        if (this.isUserLoggedIn) {\r\n          this.initNotificationsLoading();\r\n        }\r\n        else {\r\n          var message = \"\";\r\n          this.translationService.getTranslationAsync(\"app.SessionEnd\").subscribe((s) => message = s);\r\n          this.alertService.showMessage(message, \"\", MessageSeverity.default);\r\n          this.unsubscribeNotifications();\r\n\r\n        }\r\n      }, 500);\r\n    });\r\n\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        let url = (<NavigationStart>event).url;\r\n\r\n        if (url !== url.toLowerCase()) {\r\n          this.router.navigateByUrl((<NavigationStart>event).url.toLowerCase());\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribeNotifications();\r\n  }\r\n\r\n\r\n  private unsubscribeNotifications() {\r\n    if (this.notificationsLoadingSubscription)\r\n      this.notificationsLoadingSubscription.unsubscribe();\r\n\r\n    if (this.accountSubcription)\r\n      this.accountSubcription.unsubscribe();\r\n  }\r\n\r\n\r\n\r\n  initNotificationsLoading() {\r\n\r\n    this.notificationsLoadingSubscription = this.notificationService.getNewNotificationsPeriodically()\r\n      .subscribe(notifications => {\r\n        this.dataLoadingConsecutiveFailurs = 0;\r\n        this.newNotificationCount = notifications.filter(n => !n.isRead).length;\r\n      },\r\n        error => {\r\n          this.alertService.logError(error);\r\n\r\n          if (this.dataLoadingConsecutiveFailurs++ < 20)\r\n            setTimeout(() => this.initNotificationsLoading(), 5000);\r\n          else\r\n            this.alertService.showStickyMessage(\"Load Error\", \"Loading new notifications from the server failed!\", MessageSeverity.error);\r\n      });\r\n\r\n    this.accountSubcription = this.accountService.getAccount().subscribe(\r\n      account => {\r\n        if (account) {\r\n          this.pageAccount = account\r\n        }\r\n      });\r\n\r\n    this.accountSubcription = this.accountService.getAccount().subscribe(\r\n      account => {\r\n        if (account) {\r\n          this.CurrentAccount.next(account)      \r\n          this.router.navigateByUrl('/Landing');\r\n        }\r\n      });\r\n\r\n\r\n    \r\n    \r\n  }\r\n  \r\n  markNotificationsAsRead() {\r\n\r\n    let recentNotifications = this.notificationService.recentNotifications;\r\n\r\n    if (recentNotifications.length) {\r\n      this.notificationService.readUnreadNotification(recentNotifications.map(n => n.id), true)\r\n        .subscribe(response => {\r\n          for (let n of recentNotifications) {\r\n            n.isRead = true;\r\n          }\r\n\r\n          this.newNotificationCount = recentNotifications.filter(n => !n.isRead).length;\r\n        },\r\n          error => {\r\n            this.alertService.logError(error);\r\n            this.alertService.showMessage(\"Notification Error\", \"Marking read notifications failed\", MessageSeverity.error);\r\n\r\n          });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  showDialog(dialog: AlertDialog) {\r\n\r\n    alertify.set({\r\n      labels: {\r\n        ok: dialog.okLabel || \"OK\",\r\n        cancel: dialog.cancelLabel || \"Cancel\"\r\n      }\r\n    });\r\n\r\n    switch (dialog.type) {\r\n      case DialogType.alert:\r\n        alertify.alert(dialog.message);\r\n\r\n        break\r\n      case DialogType.confirm:\r\n        alertify\r\n          .confirm(dialog.message, (e) => {\r\n            if (e) {\r\n              dialog.okCallback();\r\n            }\r\n            else {\r\n              if (dialog.cancelCallback)\r\n                dialog.cancelCallback();\r\n            }\r\n          });\r\n\r\n        break;\r\n      case DialogType.prompt:\r\n        alertify\r\n          .prompt(dialog.message, (e, val) => {\r\n            if (e) {\r\n              dialog.okCallback(val);\r\n            }\r\n            else {\r\n              if (dialog.cancelCallback)\r\n                dialog.cancelCallback();\r\n            }\r\n          }, dialog.defaultValue);\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  showToast(message: AlertMessage, isSticky: boolean) {\r\n\r\n    if (message == null) {\r\n      for (let id of this.stickyToasties.slice(0)) {\r\n        this.toastaService.clear(id);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let toastOptions: ToastOptions = {\r\n      title: message.summary,\r\n      msg: message.detail,\r\n      timeout: isSticky ? 0 : 4000\r\n    };\r\n\r\n\r\n    if (isSticky) {\r\n      toastOptions.onAdd = (toast: ToastData) => this.stickyToasties.push(toast.id);\r\n\r\n      toastOptions.onRemove = (toast: ToastData) => {\r\n        let index = this.stickyToasties.indexOf(toast.id, 0);\r\n\r\n        if (index > -1) {\r\n          this.stickyToasties.splice(index, 1);\r\n        }\r\n\r\n        toast.onAdd = null;\r\n        toast.onRemove = null;\r\n      };\r\n    }\r\n\r\n\r\n    switch (message.severity) {\r\n      case MessageSeverity.default:   this.toastaService.default(toastOptions); break;\r\n      case MessageSeverity.info:      this.toastaService.info(toastOptions); break;\r\n      case MessageSeverity.success:   this.toastaService.success(toastOptions); break;\r\n      case MessageSeverity.error:     this.toastaService.error(toastOptions); break;\r\n      case MessageSeverity.warn:      this.toastaService.warning(toastOptions); break;\r\n      case MessageSeverity.wait:      this.toastaService.wait(toastOptions); break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.authService.redirectLogoutUser();\r\n  }\r\n\r\n\r\n  getYear() {\r\n    return new Date().getUTCFullYear();\r\n  }\r\n\r\n\r\n  get userName(): string {\r\n    return this.authService.currentUser ? this.authService.currentUser.userName : \"\";\r\n  }\r\n\r\n\r\n  get fullName(): string {\r\n    return this.authService.currentUser ? this.authService.currentUser.lastName : \"\";\r\n  }\r\n\r\n\r\n\r\n  get canViewCustomers() {\r\n    return this.accountService.userHasPermission(Permission.viewUsersPermission); //eg. viewCustomersPermission\r\n  }\r\n\r\n  get canViewProducts() {\r\n    return this.accountService.userHasPermission(Permission.viewUsersPermission); //eg. viewProductsPermission\r\n  }\r\n\r\n  get canViewOrders() {\r\n    return true; //eg. viewOrdersPermission\r\n  }\r\n\r\n\r\n  togglePopover(e) {\r\n    this.isAutoEnrollPopoverVisible = !this.isAutoEnrollPopoverVisible;\r\n    return this.isAutoEnrollPopoverVisible;\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ContactUs.ContactUs' | translate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        {{'ContactUs.AMERICAS' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.France' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Spain' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Switzerland' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Netherlands' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.UK' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.AllCountries' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.APAC' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contact-us-ext',\r\n  templateUrl: './contact-us-ext.component.html',\r\n  styleUrls: ['./contact-us-ext.component.css']\r\n})\r\nexport class ContactUsExtComponent implements OnInit {\r\n\r\n \r\n  constructor()\r\n  {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin-loggedin\\\">\\r\\n  \\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ContactUs.ContactUs' | translate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        {{'ContactUs.AMERICAS' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.France' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Spain' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Switzerland' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Netherlands' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.UK' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.AllCountries' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.APAC' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contact-us',\r\n  templateUrl: './contact-us.component.html',\r\n  styleUrls: ['./contact-us.component.css']\r\n})\r\nexport class ContactUsComponent implements OnInit {\r\n\r\n \r\n  constructor()\r\n  {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\r\\n.unread {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n    <ngx-datatable class=\\\"material colored-header sm table-hover\\\"\\r\\n                   [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n                   [rows]=\\\"rows\\\"\\r\\n                   [rowHeight]=\\\"35\\\"\\r\\n                   [headerHeight]=\\\"isViewOnly ? 0 : 35\\\"\\r\\n                   [footerHeight]=\\\"35\\\"\\r\\n                   [limit]=\\\"10\\\"\\r\\n                   [columns]=\\\"columns\\\"\\r\\n                   [scrollbarV]=\\\"verticalScrollbar\\\"\\r\\n                   [columnMode]=\\\"'force'\\\">\\r\\n    </ngx-datatable>\\r\\n\\r\\n    <ng-template #statusHeaderTemplate>\\r\\n        <i class=\\\"fa fa-bullhorn\\\"></i>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #statusTemplate>\\r\\n        <span></span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #dateTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span [class.unread]=\\\"!row.isRead\\\" attr.title=\\\"{{getPrintedDate(value)}}\\\">\\r\\n            {{getPrintedDate(value)}}\\r\\n        </span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #contentHeaderTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span [class.unread]=\\\"!row.isRead\\\" attr.title=\\\"{{row.body}}\\\">\\r\\n            {{value}}\\r\\n        </span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #contenBodytTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span [class.unread]=\\\"!row.isRead\\\" attr.title=\\\"{{row.header}}\\\">\\r\\n            {{value}}\\r\\n        </span>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <ng-template #actionsTemplate let-row=\\\"row\\\">\\r\\n        <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" tooltip=\\\"{{'notifications.Delete' | translate}}\\\" container=\\\"body\\\" (click)=\\\"deleteNotification(row)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n        <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" tooltip=\\\"{{'notifications.Pin' | translate}}\\\" co container=\\\"body\\\" (click)=\\\"togglePin(row)\\\">\\r\\n            <i *ngIf=\\\"row.isPinned\\\" class=\\\"fa fa-thumb-tack\\\"></i>\\r\\n            <i *ngIf=\\\"!row.isPinned\\\" class=\\\"fa fa-thumb-tack fa-rotate-90\\\"></i>\\r\\n        </a>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, TemplateRef, ViewChild, Input } from '@angular/core';\r\n\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { NotificationService } from \"../../services/notification.service\";\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Permission } from '../../models/permission.model';\r\nimport { Utilities } from \"../../services/utilities\";\r\nimport { Notification } from '../../models/notification.model';\r\n\r\n\r\n@Component({\r\n    selector: 'notifications-viewer',\r\n    templateUrl: './notifications-viewer.component.html',\r\n    styleUrls: ['./notifications-viewer.component.css']\r\n})\r\nexport class NotificationsViewerComponent implements OnInit, OnDestroy {\r\n    columns: any[] = [];\r\n    rows: Notification[] = [];\r\n    loadingIndicator: boolean;\r\n\r\n    dataLoadingConsecutiveFailurs = 0;\r\n    dataLoadingSubscription: any;\r\n\r\n\r\n    @Input()\r\n    isViewOnly: boolean;\r\n\r\n    @Input()\r\n    verticalScrollbar: boolean = false;\r\n\r\n\r\n    @ViewChild('statusHeaderTemplate')\r\n    statusHeaderTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('statusTemplate')\r\n    statusTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('dateTemplate')\r\n    dateTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('contentHeaderTemplate')\r\n    contentHeaderTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('contenBodytTemplate')\r\n    contenBodytTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('actionsTemplate')\r\n    actionsTemplate: TemplateRef<any>;\r\n\r\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, private notificationService: NotificationService) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.isViewOnly) {\r\n            this.columns = [\r\n                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\r\n                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },\r\n            ];\r\n        }\r\n        else {\r\n            let gT = (key: string) => this.translationService.getTranslation(key);\r\n\r\n            this.columns = [\r\n                { prop: \"\", name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\r\n                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },\r\n                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },\r\n                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\r\n            ];\r\n        }\r\n\r\n\r\n        this.initDataLoading();\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        if (this.dataLoadingSubscription)\r\n            this.dataLoadingSubscription.unsubscribe();\r\n    }\r\n\r\n\r\n\r\n    initDataLoading() {\r\n\r\n        if (this.isViewOnly && this.notificationService.recentNotifications) {\r\n            this.rows = this.processResults(this.notificationService.recentNotifications);\r\n            return;\r\n        }\r\n\r\n\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        let dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically()\r\n\r\n        this.dataLoadingSubscription = dataLoadTask\r\n            .subscribe(notifications => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n                this.dataLoadingConsecutiveFailurs = 0;\r\n\r\n                this.rows = this.processResults(notifications);\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showMessage(\"Load Error\", \"Loading new notifications from the server failed!\", MessageSeverity.warn);\r\n                this.alertService.logError(error);\r\n\r\n                if (this.dataLoadingConsecutiveFailurs++ < 5)\r\n                    setTimeout(() => this.initDataLoading(), 5000);\r\n                else\r\n                    this.alertService.showStickyMessage(\"Load Error\", \"Loading new notifications from the server failed!\", MessageSeverity.error);\r\n\r\n            });\r\n\r\n\r\n        if (this.isViewOnly)\r\n            this.dataLoadingSubscription = null;\r\n    }\r\n\r\n\r\n    private processResults(notifications: Notification[]) {\r\n\r\n        if (this.isViewOnly) {\r\n            notifications.sort((a, b) => {\r\n                return b.date.valueOf() - a.date.valueOf();\r\n            });\r\n        }\r\n\r\n        return notifications;\r\n    }\r\n\r\n\r\n\r\n    getPrintedDate(value: Date) {\r\n        if (value)\r\n            return Utilities.printTimeOnly(value) + \" on \" + Utilities.printDateOnly(value);\r\n    }\r\n\r\n\r\n    deleteNotification(row: Notification) {\r\n        this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\r\n    }\r\n\r\n\r\n    deleteNotificationHelper(row: Notification) {\r\n\r\n        this.alertService.startLoadingMessage(\"Deleting...\");\r\n        this.loadingIndicator = true;\r\n\r\n        this.notificationService.deleteNotification(row)\r\n            .subscribe(results => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.rows = this.rows.filter(item => item.id != row.id)\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showStickyMessage(\"Delete Error\", `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                    MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n    togglePin(row: Notification) {\r\n\r\n        let pin = !row.isPinned;\r\n        let opText = pin ? \"Pinning\" : \"Unpinning\";\r\n\r\n        this.alertService.startLoadingMessage(opText + \"...\");\r\n        this.loadingIndicator = true;\r\n\r\n        this.notificationService.pinUnpinNotification(row, pin)\r\n            .subscribe(results => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                row.isPinned = pin;\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showStickyMessage(opText + \" Error\", `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                    MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n    get canManageNotifications() {\r\n        return this.accountService.userHasPermission(Permission.manageRolesPermission); //Todo: Consider creating separate permission for notifications\r\n    }\r\n\r\n}\r\n","module.exports = \".row:not(:last-child) {\\r\\n    /*border-bottom: 1px solid #ccc;*/\\r\\n}\\r\\n\\r\\n.separator-hr {\\r\\n    margin: 0 5px;\\r\\n    border-top-style: dashed;\\r\\n}\\r\\n\\r\\n.edit-separator-hr {\\r\\n    margin: 10px 5px;\\r\\n    border-top-style: dashed;\\r\\n}\\r\\n\\r\\n.last-separator-hr {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.edit-last-separator-hr {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\ninput.form-control {\\r\\n    border-left-width: 5px;\\r\\n}\\r\\n\\r\\n.roleErrorMessage {\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\n.permissionsColumn {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.permissionsRow {\\r\\n    margin: 0 15px;\\r\\n}\\r\\n\\r\\n.password-well {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) {\\r\\n    .user-enabled {\\r\\n        margin-left: 40px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <form *ngIf=\\\"formResetToggle\\\" class=\\\"form-horizontal\\\" name=\\\"roleEditorForm\\\" #f=\\\"ngForm\\\" novalidate\\r\\n        (ngSubmit)=\\\"f.form.valid ? save() :\\r\\n          (!roleName.valid && showErrorAlert('Role name is required', 'Please enter a role name (minimum of 2 and maximum of 200 characters)'));\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group has-feedback\\\">\\r\\n          <label class=\\\"control-label col-md-2\\\" for=\\\"roleName\\\">{{'roles.editor.Name' | translate}}</label>\\r\\n          <div class=\\\"col-md-10\\\" [ngClass]=\\\"{'has-success': f.submitted && roleName.valid, 'has-error' : f.submitted && !roleName.valid}\\\">\\r\\n            <input [disabled]=\\\"!canManageRoles\\\" type=\\\"text\\\" id=\\\"roleName\\\" name=\\\"roleName\\\" placeholder=\\\"Enter role name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"roleEdit.name\\\" #roleName=\\\"ngModel\\\" required minlength=\\\"2\\\" maxlength=\\\"200\\\" />\\r\\n            <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': roleName.valid, 'glyphicon-remove' : !roleName.valid}\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-md-2\\\" for=\\\"roleDescription\\\">{{'roles.editor.Description' | translate}}</label>\\r\\n          <div class=\\\"col-md-10\\\">\\r\\n            <input [disabled]=\\\"!canManageRoles\\\" type=\\\"text\\\" id=\\\"roleDescription\\\" name=\\\"roleDescription\\\" placeholder=\\\"Enter role description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"roleEdit.description\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted && !roleName.valid\\\" class=\\\"errorMessage roleErrorMessage\\\">\\r\\n          {{'roles.editor.RoleNameRequired' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"edit-separator-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"row well well-sm permissionsRow\\\">\\r\\n\\r\\n        <ng-template ngFor let-permissionGroup [ngForOf]=\\\"allPermissions | groupBy: 'groupName'\\\" let-i=\\\"index\\\">\\r\\n          <div class=\\\"form-group col-sm-6 permissionsColumn\\\">\\r\\n            <label class=\\\"col-md-5 control-label\\\" for=\\\"checkboxes\\\" (click)=\\\"toggleGroup(permissionGroup.key)\\\">{{permissionGroup.key}}</label>\\r\\n            <div class=\\\"col-md-7\\\">\\r\\n              <div class=\\\"checkbox\\\" *ngFor=\\\"let permission of permissionGroup.value\\\">\\r\\n                <label tooltip=\\\"{{permission.description}}\\\" for=\\\"checkboxes-{{permission.value}}\\\">\\r\\n                  <input [disabled]=\\\"!canManageRoles\\\" name=\\\"checkboxes-{{permission.value}}\\\" id=\\\"checkboxes-{{permission.value}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"selectedValues[permission.value]\\\">\\r\\n                  {{permission.name}}\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"(i + 1) % 2 === 0\\\" class=\\\"clearfix\\\"></div>\\r\\n        </ng-template>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"edit-last-separator-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <div *ngIf=\\\"canManageRoles\\\" class=\\\"pull-left\\\">\\r\\n          <a (click)=\\\"selectAll()\\\" href=\\\"javascript:;\\\" class=\\\"btn btn-link\\\">{{'roles.editor.SelectAll' | translate}}</a>|<a (click)=\\\"selectNone()\\\" href=\\\"javascript:;\\\" class=\\\"btn btn-link\\\">{{'roles.editor.SelectNone' | translate}}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-sm-7\\\">\\r\\n        <div ngPreserveWhitespaces class=\\\"pull-right\\\">\\r\\n          <button *ngIf=\\\"!canManageRoles\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">{{'roles.editor.Close' | translate}}</button>\\r\\n          <button *ngIf=\\\"canManageRoles\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"isSaving\\\"><i class='fa fa-times'></i> {{'roles.editor.Cancel' | translate}}</button>\\r\\n          <button *ngIf=\\\"canManageRoles\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"isSaving\\\">\\r\\n            <i *ngIf=\\\"!isSaving\\\" class='fa fa-save'></i><i *ngIf=\\\"isSaving\\\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('roles.editor.Saving' | translate) : ('roles.editor.Save' | translate)}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, ViewChild } from '@angular/core';\r\n\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Role } from '../../models/role.model';\r\nimport { Permission } from '../../models/permission.model';\r\n\r\n\r\n@Component({\r\n    selector: 'role-editor',\r\n    templateUrl: './role-editor.component.html',\r\n    styleUrls: ['./role-editor.component.css']\r\n})\r\nexport class RoleEditorComponent {\r\n\r\n    private isNewRole = false;\r\n    private isSaving: boolean;\r\n    private showValidationErrors: boolean = true;\r\n    private editingRoleName: string;\r\n    private roleEdit: Role = new Role();\r\n    private allPermissions: Permission[] = [];\r\n    private selectedValues: { [key: string]: boolean; } = {};\r\n\r\n    public formResetToggle = true;\r\n\r\n    public changesSavedCallback: () => void;\r\n    public changesFailedCallback: () => void;\r\n    public changesCancelledCallback: () => void;\r\n\r\n\r\n    @ViewChild('f')\r\n    private form;\r\n\r\n\r\n\r\n    constructor(private alertService: AlertService, private accountService: AccountService) {\r\n    }\r\n\r\n\r\n\r\n    private showErrorAlert(caption: string, message: string) {\r\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\r\n    }\r\n\r\n\r\n    private save() {\r\n        this.isSaving = true;\r\n        this.alertService.startLoadingMessage(\"Saving changes...\");\r\n\r\n        this.roleEdit.permissions = this.getSelectedPermissions();\r\n\r\n        if (this.isNewRole) {\r\n            this.accountService.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));\r\n        }\r\n        else {\r\n            this.accountService.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    private saveSuccessHelper(role?: Role) {\r\n        if (role)\r\n            Object.assign(this.roleEdit, role);\r\n\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.showValidationErrors = false;\r\n\r\n        if (this.isNewRole)\r\n            this.alertService.showMessage(\"Success\", `Role \\\"${this.roleEdit.name}\\\" was created successfully`, MessageSeverity.success);\r\n        else\r\n            this.alertService.showMessage(\"Success\", `Changes to role \\\"${this.roleEdit.name}\\\" was saved successfully`, MessageSeverity.success);\r\n\r\n\r\n        this.roleEdit = new Role();\r\n        this.resetForm();\r\n\r\n\r\n        if (!this.isNewRole && this.accountService.currentUser.roles.some(r => r == this.editingRoleName))\r\n            this.refreshLoggedInUser();\r\n\r\n        if (this.changesSavedCallback)\r\n            this.changesSavedCallback();\r\n    }\r\n\r\n\r\n    private refreshLoggedInUser() {\r\n        this.accountService.refreshLoggedInUser()\r\n            .subscribe(user => { },\r\n            error => {\r\n                this.alertService.resetStickyMessage();\r\n                this.alertService.showStickyMessage(\"Refresh failed\", \"An error occured whilst refreshing logged in user information from the server\", MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    private saveFailedHelper(error: any) {\r\n        this.isSaving = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showStickyMessage(\"Save Error\", \"The below errors occured whilst saving your changes:\", MessageSeverity.error, error);\r\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\r\n        if (this.changesFailedCallback)\r\n            this.changesFailedCallback();\r\n    }\r\n\r\n\r\n    private cancel() {\r\n        this.roleEdit = new Role();\r\n\r\n        this.showValidationErrors = false;\r\n        this.resetForm();\r\n\r\n        this.alertService.showMessage(\"Cancelled\", \"Operation cancelled by user\", MessageSeverity.default);\r\n        this.alertService.resetStickyMessage();\r\n\r\n        if (this.changesCancelledCallback)\r\n            this.changesCancelledCallback();\r\n    }\r\n\r\n\r\n\r\n    private selectAll() {\r\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);\r\n    }\r\n\r\n\r\n    private selectNone() {\r\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);\r\n    }\r\n\r\n\r\n    private toggleGroup(groupName: string) {\r\n        let firstMemberValue: boolean;\r\n\r\n        this.allPermissions.forEach(p => {\r\n            if (p.groupName != groupName)\r\n                return;\r\n\r\n            if (firstMemberValue == null)\r\n                firstMemberValue = this.selectedValues[p.value] == true;\r\n\r\n            this.selectedValues[p.value] = !firstMemberValue;\r\n        });\r\n    }\r\n\r\n\r\n    private getSelectedPermissions() {\r\n        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);\r\n    }\r\n\r\n\r\n    resetForm(replace = false) {\r\n\r\n        if (!replace) {\r\n            this.form.reset();\r\n        }\r\n        else {\r\n            this.formResetToggle = false;\r\n\r\n            setTimeout(() => {\r\n                this.formResetToggle = true;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    newRole(allPermissions: Permission[]) {\r\n        this.isNewRole = true;\r\n        this.showValidationErrors = true;\r\n\r\n        this.editingRoleName = null;\r\n        this.allPermissions = allPermissions;\r\n        this.selectedValues = {};\r\n        this.roleEdit = new Role();\r\n\r\n        return this.roleEdit;\r\n    }\r\n\r\n    editRole(role: Role, allPermissions: Permission[]) {\r\n        if (role) {\r\n            this.isNewRole = false;\r\n            this.showValidationErrors = true;\r\n\r\n            this.editingRoleName = role.name;\r\n            this.allPermissions = allPermissions;\r\n            this.selectedValues = {};\r\n            role.permissions.forEach(p => this.selectedValues[p.value] = true);\r\n            this.roleEdit = new Role();\r\n            Object.assign(this.roleEdit, role);\r\n\r\n            return this.roleEdit;\r\n        }\r\n        else {\r\n            return this.newRole(allPermissions);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    get canManageRoles() {\r\n        return this.accountService.userHasPermission(Permission.manageRolesPermission)\r\n    }\r\n}\r\n","module.exports = \"\\r\\n.control-box {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.search-box {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.action-box {\\r\\n    margin: 0 50px 0 0;\\r\\n    min-height: 0;\\r\\n}\\r\\n\\r\\n.action-box .toolbaritem a {\\r\\n        padding-top: 5px;\\r\\n        padding-bottom: 5px;\\r\\n        min-width: 100px;\\r\\n    }\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n    .action-box {\\r\\n        margin: 0 14px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n    <div class=\\\"row control-box\\\">\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <div class=\\\"form-group search-box\\\">\\r\\n                <search-box (searchChange)=\\\"onSearchChanged($event)\\\" placeholder=\\\"{{'roles.management.Search' | translate}}\\\">></search-box>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"navbar action-box\\\">\\r\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                    <li *ngIf=\\\"canManageRoles\\\" class=\\\"toolbaritem\\\">\\r\\n                        <a href=\\\"javascript:;\\\" (click)=\\\"newRole(row)\\\">\\r\\n                            <i class=\\\"fa fa-plus-circle\\\"></i> {{'roles.management.NewRole' | translate}}\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ngx-datatable class=\\\"material colored-header sm table table-striped table-hover\\\"\\r\\n                   [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n                   [rows]=\\\"rows\\\"\\r\\n                   [rowHeight]=\\\"35\\\"\\r\\n                   [headerHeight]=\\\"35\\\"\\r\\n                   [footerHeight]=\\\"35\\\"\\r\\n                   [columns]=\\\"columns\\\"\\r\\n                   [scrollbarV]=\\\"true\\\"\\r\\n                   [columnMode]=\\\"'force'\\\">\\r\\n    </ngx-datatable>\\r\\n\\r\\n    <ng-template #indexTemplate let-value=\\\"value\\\">\\r\\n        <strong>{{value}}</strong>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <ng-template #actionsTemplate let-row=\\\"row\\\" let-value=\\\"value\\\" let-i=\\\"index\\\">\\r\\n        <a *ngIf=\\\"canManageRoles\\\" class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" (click)=\\\"editRole(row)\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> {{'roles.management.Edit' | translate}}</a>\\r\\n        <a *ngIf=\\\"!canManageRoles\\\" class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" (click)=\\\"editRole(row)\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i> {{'roles.management.Details' | translate}}</a>\\r\\n        {{canManageRoles ? '|' : ''}}\\r\\n        <a *ngIf=\\\"canManageRoles\\\" class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" (click)=\\\"deleteRole(row)\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i> {{'roles.management.Delete' | translate}}</a>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <div class=\\\"modal fade\\\" bsModal #editorModal=\\\"bs-modal\\\" (onHidden)=\\\"onEditorModalHidden()\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 *ngIf=\\\"!canManageRoles\\\" class=\\\"modal-title pull-left\\\"><i class=\\\"fa fa-shield\\\"></i> {{'roles.management.RoleDetails' | translate:editingRoleName}}</h4>\\r\\n                    <h4 *ngIf=\\\"canManageRoles\\\" class=\\\"modal-title pull-left\\\"><i class=\\\"fa fa-shield\\\"></i> {{editingRoleName ? ('roles.management.EditRole' | translate:editingRoleName) : ('roles.management.NewRole' | translate)}}</h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close pull-right\\\" title=\\\"Close\\\" (click)=\\\"editorModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <role-editor #roleEditor></role-editor>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { Role } from '../../models/role.model';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { RoleEditorComponent } from \"./role-editor.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'roles-management',\r\n    templateUrl: './roles-management.component.html',\r\n    styleUrls: ['./roles-management.component.css']\r\n})\r\nexport class RolesManagementComponent implements OnInit, AfterViewInit {\r\n    columns: any[] = [];\r\n    rows: Role[] = [];\r\n    rowsCache: Role[] = [];\r\n    allPermissions: Permission[] = [];\r\n    editedRole: Role;\r\n    sourceRole: Role;\r\n    editingRoleName: { name: string };\r\n    loadingIndicator: boolean;\r\n\r\n\r\n\r\n    @ViewChild('indexTemplate')\r\n    indexTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('actionsTemplate')\r\n    actionsTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('editorModal')\r\n    editorModal: ModalDirective;\r\n\r\n    @ViewChild('roleEditor')\r\n    roleEditor: RoleEditorComponent;\r\n\r\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        let gT = (key: string) => this.translationService.getTranslation(key);\r\n\r\n        this.columns = [\r\n            { prop: \"index\", name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },\r\n            { prop: 'name', name: gT('roles.management.Name'), width: 200 },\r\n            { prop: 'description', name: gT('roles.management.Description'), width: 350 },\r\n            { prop: 'usersCount', name: gT('roles.management.Users'), width: 80 },\r\n            { name: '', width: 130, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\r\n        ];\r\n\r\n        this.loadData();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    ngAfterViewInit() {\r\n\r\n        this.roleEditor.changesSavedCallback = () => {\r\n            this.addNewRoleToList();\r\n            this.editorModal.hide();\r\n        };\r\n\r\n        this.roleEditor.changesCancelledCallback = () => {\r\n            this.editedRole = null;\r\n            this.sourceRole = null;\r\n            this.editorModal.hide();\r\n        };\r\n    }\r\n\r\n\r\n    addNewRoleToList() {\r\n        if (this.sourceRole) {\r\n            Object.assign(this.sourceRole, this.editedRole);\r\n\r\n            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);\r\n            if (sourceIndex > -1)\r\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\r\n\r\n            sourceIndex = this.rows.indexOf(this.sourceRole, 0);\r\n            if (sourceIndex > -1)\r\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\r\n\r\n            this.editedRole = null;\r\n            this.sourceRole = null;\r\n        }\r\n        else {\r\n            let role = new Role();\r\n            Object.assign(role, this.editedRole);\r\n            this.editedRole = null;\r\n\r\n            let maxIndex = 0;\r\n            for (let r of this.rowsCache) {\r\n                if ((<any>r).index > maxIndex)\r\n                    maxIndex = (<any>r).index;\r\n            }\r\n\r\n            (<any>role).index = maxIndex + 1;\r\n\r\n            this.rowsCache.splice(0, 0, role);\r\n            this.rows.splice(0, 0, role);\r\n            this.rows = [...this.rows];\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        this.accountService.getRolesAndPermissions()\r\n            .subscribe(results => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                let roles = results[0];\r\n                let permissions = results[1];\r\n\r\n                roles.forEach((role, index, roles) => {\r\n                    (<any>role).index = index + 1;\r\n                });\r\n\r\n\r\n                this.rowsCache = [...roles];\r\n                this.rows = roles;\r\n\r\n                this.allPermissions = permissions;\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showStickyMessage(\"Load Error\", `Unable to retrieve roles from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                    MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n    onSearchChanged(value: string) {\r\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description));\r\n    }\r\n\r\n\r\n    onEditorModalHidden() {\r\n        this.editingRoleName = null;\r\n        this.roleEditor.resetForm(true);\r\n    }\r\n\r\n\r\n    newRole() {\r\n        this.editingRoleName = null;\r\n        this.sourceRole = null;\r\n        this.editedRole = this.roleEditor.newRole(this.allPermissions);\r\n        this.editorModal.show();\r\n    }\r\n\r\n\r\n    editRole(row: Role) {\r\n        this.editingRoleName = { name: row.name };\r\n        this.sourceRole = row;\r\n        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);\r\n        this.editorModal.show();\r\n    }\r\n\r\n    deleteRole(row: Role) {\r\n        this.alertService.showDialog('Are you sure you want to delete the \\\"' + row.name + '\\\" role?', DialogType.confirm, () => this.deleteRoleHelper(row));\r\n    }\r\n\r\n\r\n    deleteRoleHelper(row: Role) {\r\n\r\n        this.alertService.startLoadingMessage(\"Deleting...\");\r\n        this.loadingIndicator = true;\r\n\r\n        this.accountService.deleteRole(row)\r\n            .subscribe(results => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.rowsCache = this.rowsCache.filter(item => item !== row)\r\n                this.rows = this.rows.filter(item => item !== row)\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showStickyMessage(\"Delete Error\", `An error occured whilst deleting the role.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                    MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n    get canManageRoles() {\r\n        return this.accountService.userHasPermission(Permission.manageRolesPermission)\r\n    }\r\n\r\n}\r\n","module.exports = \"\\r\\n.search-icon {\\r\\n    pointer-events: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"icon-addon addon-sm\\\">\\r\\n    <label for=\\\"searchInput\\\" title=\\\"Search\\\"><i class=\\\"fa fa-search left-icon search-icon\\\"></i></label>\\r\\n    <input id=\\\"searchInput\\\" #searchInput type=\\\"search\\\" ngModel=\\\"\\\" (ngModelChange)=\\\"onValueChange($event)\\\" [attr.placeholder]=\\\"placeholder\\\" class=\\\"form-control left-icon right-icon\\\">\\r\\n    <a *ngIf=\\\"searchInput.value\\\" href=\\\"javascript:;\\\" title=\\\"Clear\\\" (click)=\\\"clear()\\\" class=\\\"fa fa-times-circle clear-input right-icon\\\"></a>\\r\\n</div>\\r\\n\"","import { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'search-box',\r\n    templateUrl: './search-box.component.html',\r\n    styleUrls: ['./search-box.component.css']\r\n})\r\nexport class SearchBoxComponent {\r\n\r\n    @Input()\r\n    placeholder: string = \"Search...\";\r\n\r\n    @Output()\r\n    searchChange = new EventEmitter<string>();\r\n\r\n    @ViewChild(\"searchInput\")\r\n    searchInput: ElementRef;\r\n\r\n\r\n    onValueChange(value: string) {\r\n        setTimeout(() => this.searchChange.emit(value));\r\n    }\r\n\r\n\r\n    clear() {\r\n        this.searchInput.nativeElement.value = '';\r\n        this.onValueChange(this.searchInput.nativeElement.value);\r\n    }\r\n}\r\n","module.exports = \"\\r\\n.chart-container {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n\\r\\n.refresh-btn {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.chart-type-container {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\nli.active2 {\\r\\n    background-color: #e8e8e8;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"chart-container\\\">\\r\\n            <canvas baseChart width=\\\"600\\\" height=\\\"250\\\"\\r\\n                    [datasets]=\\\"chartData\\\"\\r\\n                    [labels]=\\\"chartLabels\\\"\\r\\n                    [options]=\\\"chartOptions\\\"\\r\\n                    [colors]=\\\"chartColors\\\"\\r\\n                    [legend]=\\\"chartLegend\\\"\\r\\n                    [chartType]=\\\"chartType\\\"\\r\\n                    (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                    (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 table-container\\\">\\r\\n        <table class=\\\"table table-responsive table-condensed\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th *ngFor=\\\"let label of chartLabels\\\">{{label}}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let d of chartData\\\">\\r\\n                    <th>{{d && d.label.split(' ').pop()}}</th>\\r\\n                    <td *ngFor=\\\"let label of chartLabels; let j=index\\\">{{d && d.data[j]}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <button class=\\\"refresh-btn\\\" (click)=\\\"randomize();showMessage('Manual refresh!');\\\">REFSH</button>\\r\\n        <div class=\\\"chart-type-container\\\" dropdown>\\r\\n            <button id=\\\"chartType\\\" type=\\\"button\\\" class=\\\"dropdown-toggle\\\" dropdownToggle>\\r\\n                <i class=\\\"fa fa-bar-chart\\\"></i> <span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul *dropdownMenu role=\\\"menu\\\" aria-labelledby=\\\"chartType\\\" class=\\\"dropdown-menu\\\">\\r\\n                <li [class.active2]=\\\"chartType == 'bar'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('bar')\\\" href=\\\"javascript:;\\\">Bar Chart</a></li>\\r\\n                <li [class.active2]=\\\"chartType == 'pie'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('pie')\\\" href=\\\"javascript:;\\\">Pie Chart</a></li>\\r\\n                <li [class.active2]=\\\"chartType == 'doughnut'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('doughnut')\\\" href=\\\"javascript:;\\\">Doughnut Chart</a></li>\\r\\n                <li [class.active2]=\\\"chartType == 'polarArea'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('polarArea')\\\" href=\\\"javascript:;\\\">Polar Area Chart</a></li>\\r\\n                <li [class.active2]=\\\"chartType == 'radar'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('radar')\\\" href=\\\"javascript:;\\\">Radar Chart</a></li>\\r\\n                <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n                <li [class.active2]=\\\"chartType == 'line'\\\" role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"changeChartType('line')\\\" href=\\\"javascript:;\\\">Line Chart</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <button class=\\\"p1ull-right\\\" (click)=\\\"showMessage('You\\\\'ve clicked on the menu')\\\"><i class=\\\"fa fa-bars\\\"></i></button>\\r\\n        <button class=\\\"p1ull-right\\\" (click)=\\\"showDialog('Enter some value to do serious configuration...')\\\"><i class=\\\"fa fa-cogs\\\"></i></button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AlertService, DialogType, AlertMessage, MessageSeverity } from '../../services/alert.service';\r\nrequire('chart.js');\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'statistics-demo',\r\n    templateUrl: './statistics-demo.component.html',\r\n    styleUrls: ['./statistics-demo.component.css']\r\n})\r\nexport class StatisticsDemoComponent implements OnInit, OnDestroy {\r\n\r\n    chartData: Array<any> = [\r\n        { data: [65, 59, 80, 81, 56, 55], label: 'Series A' },\r\n        { data: [28, 48, 40, 19, 86, 27], label: 'Series B' },\r\n        { data: [18, 48, 77, 9, 100, 27], label: 'Series C' }\r\n    ];\r\n    chartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June'];\r\n    chartOptions: any = {\r\n        responsive: true,\r\n        title: {\r\n            display: false,\r\n            fontSize: 16,\r\n            text: 'Important Stuff'\r\n        }\r\n    };\r\n    chartColors: Array<any> = [\r\n        { // grey\r\n            backgroundColor: 'rgba(148,159,177,0.2)',\r\n            borderColor: 'rgba(148,159,177,1)',\r\n            pointBackgroundColor: 'rgba(148,159,177,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n        },\r\n        { // dark grey\r\n            backgroundColor: 'rgba(77,83,96,0.2)',\r\n            borderColor: 'rgba(77,83,96,1)',\r\n            pointBackgroundColor: 'rgba(77,83,96,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n        },\r\n        { // something else\r\n            backgroundColor: 'rgba(128,128,128,0.2)',\r\n            borderColor: 'rgba(128,128,128,1)',\r\n            pointBackgroundColor: 'rgba(128,128,128,1)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgba(128,128,128,0.8)'\r\n        }\r\n    ];\r\n    chartLegend: boolean = true;\r\n    chartType: string = 'line';\r\n\r\n    timerReference: any;\r\n\r\n\r\n\r\n    constructor(private alertService: AlertService) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.timerReference = setInterval(() => this.randomize(), 5000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.timerReference);\r\n    }\r\n\r\n\r\n\r\n    randomize(): void {\r\n        let _chartData: Array<any> = new Array(this.chartData.length);\r\n        for (let i = 0; i < this.chartData.length; i++) {\r\n            _chartData[i] = { data: new Array(this.chartData[i].data.length), label: this.chartData[i].label };\r\n\r\n            for (let j = 0; j < this.chartData[i].data.length; j++) {\r\n                _chartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\r\n            }\r\n        }\r\n\r\n        this.chartData = _chartData;\r\n    }\r\n\r\n\r\n    changeChartType(type: string) {\r\n        this.chartType = type;\r\n    }\r\n\r\n    showMessage(msg: string): void {\r\n        this.alertService.showMessage(\"Demo\", msg, MessageSeverity.info);\r\n    }\r\n\r\n    showDialog(msg: string): void {\r\n        this.alertService.showDialog(msg, DialogType.prompt, (val) => this.configure(true, val), () => this.configure(false));\r\n    }\r\n\r\n    configure(response: boolean, value?: string) {\r\n\r\n        if (response) {\r\n\r\n            this.alertService.showStickyMessage(\"Simulating...\", \"\", MessageSeverity.wait);\r\n\r\n            setTimeout(() => {\r\n\r\n                this.alertService.resetStickyMessage();\r\n                this.alertService.showMessage(\"Demo\", `Your settings was successfully configured to \\\"${value}\\\"`, MessageSeverity.success);\r\n            }, 2000);\r\n        }\r\n        else {\r\n            this.alertService.showMessage(\"Demo\", \"Operation cancelled by user\", MessageSeverity.default);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // events\r\n    chartClicked(e: any): void {\r\n        console.log(e);\r\n    }\r\n\r\n    chartHovered(e: any): void {\r\n        console.log(e);\r\n    }\r\n}\r\n","module.exports = \"\\r\\n.navbar .nav > li.toolbaritem > a {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ninput.form-control {\\r\\n    border-left-width: 5px;\\r\\n}\\r\\n\\r\\n.control-box {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.search-box {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.action-box {\\r\\n    margin: 0 15px 0 0;\\r\\n    min-height: 0;\\r\\n}\\r\\n\\r\\n.action-box .toolbaritem a {\\r\\n        padding-top: 5px;\\r\\n        padding-bottom: 5px;\\r\\n        min-width: 100px;\\r\\n    }\\r\\n\\r\\n.completed {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n\\r\\n.checkbox {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.inline-label {\\r\\n    width: 100%;\\r\\n    min-height: 1rem;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.inline-editor {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.description-form-group {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.actionBtn-form-group {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.edit-last-separator-hr {\\r\\n    margin: 10px 0;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n    .action-box {\\r\\n        margin: 0 14px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n    <div class=\\\"row control-box\\\">\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <div class=\\\"form-group search-box\\\">\\r\\n                <search-box (searchChange)=\\\"onSearchChanged($event)\\\" placeholder=\\\"{{'todoDemo.management.Search' | translate}}\\\"></search-box>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"navbar action-box\\\">\\r\\n                <ul class=\\\"nav navbar-nav\\\">\\r\\n                    <li [class.active]=\\\"hideCompletedTasks\\\" class=\\\"toolbaritem\\\"><a href=\\\"javascript:;\\\" (click)=\\\"hideCompletedTasks = !hideCompletedTasks\\\"><i class=\\\"fa fa-eye-slash\\\"></i> {{'todoDemo.management.HideCompleted' | translate}}</a></li>\\r\\n                    <li class=\\\"toolbaritem\\\"><a href=\\\"javascript:;\\\" (click)=\\\"addTask()\\\"><i class=\\\"fa fa-plus\\\"></i> {{'todoDemo.management.AddTask' | translate}}</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ngx-datatable class=\\\"material colored-header sm table-hover\\\"\\r\\n                   [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n                   [rows]=\\\"rows\\\"\\r\\n                   [rowHeight]=\\\"35\\\"\\r\\n                   [headerHeight]=\\\"35\\\"\\r\\n                   [footerHeight]=\\\"35\\\"\\r\\n                   [columns]=\\\"columns\\\"\\r\\n                   [scrollbarV]=\\\"verticalScrollbar\\\"\\r\\n                   [columnMode]=\\\"'force'\\\">\\r\\n    </ngx-datatable>\\r\\n\\r\\n    <ng-template #statusHeaderTemplate>\\r\\n        <i class=\\\"fa fa-check-square-o\\\"></i>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #statusTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <div class=\\\"checkbox\\\">\\r\\n            <label>\\r\\n                <input attr.name=\\\"checkboxes-{{value}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"row.completed\\\">\\r\\n            </label>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #nameTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span *ngIf=\\\"!editing[row.$$index + '-name']\\\" class=\\\"inline-label\\\" [class.completed]=\\\"row.completed\\\" attr.title=\\\"Double click to edit - {{value}}\\\" (dblclick)=\\\"editing[row.$$index + '-name'] = true\\\">\\r\\n            {{value}}\\r\\n        </span>\\r\\n        <input *ngIf=\\\"editing[row.$$index + '-name']\\\" class=\\\"inline-editor\\\" autofocus (blur)=\\\"updateValue($event, 'name', value, row)\\\" type=\\\"text\\\" [value]=\\\"value\\\" />\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #descriptionTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span *ngIf=\\\"!editing[row.$$index + '-description']\\\" class=\\\"inline-label\\\" [class.completed]=\\\"row.completed\\\" attr.title=\\\"Double click to edit - {{value}}\\\" (dblclick)=\\\"editing[row.$$index + '-description'] = true\\\">\\r\\n            {{value}}\\r\\n        </span>\\r\\n        <input *ngIf=\\\"editing[row.$$index + '-description']\\\" class=\\\"inline-editor\\\" autofocus (blur)=\\\"updateValue($event, 'description', value, row)\\\" type=\\\"text\\\" [value]=\\\"value\\\" />\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <ng-template #actionsTemplate let-row=\\\"row\\\">\\r\\n        <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" tooltip=\\\"{{'todoDemo.management.Delete' | translate}}\\\" container=\\\"body\\\" (click)=\\\"delete(row)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n        <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" tooltip=\\\"{{'todoDemo.management.Important' | translate}}\\\" container=\\\"body\\\" (click)=\\\"row.important = !row.important\\\" (mouseover)=\\\"row.isMouseOver=true\\\" (mouseout)=\\\"row.isMouseOver=false\\\">\\r\\n            <i *ngIf=\\\"row.important || row.isMouseOver\\\" class=\\\"fa fa-bookmark\\\"></i>\\r\\n            <i *ngIf=\\\"!row.important && !row.isMouseOver\\\" class=\\\"fa fa-bookmark-o\\\"></i>\\r\\n        </a>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"modal fade\\\" bsModal #editorModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\">\\r\\n        <div class=\\\"modal-dialog\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title pull-left\\\"><i class=\\\"fa fa-tasks\\\"></i> {{'todoDemo.editor.NewTask' | translate}}</h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close pull-right\\\" title=\\\"Close\\\" (click)=\\\"editorModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <form *ngIf=\\\"formResetToggle\\\" class=\\\"form-horizontal\\\" name=\\\"taskEditorForm\\\" #f=\\\"ngForm\\\" novalidate\\r\\n                          (ngSubmit)=\\\"f.form.valid ? save() :\\r\\n                      (!taskName.valid && showErrorAlert('Task name is required', 'Please enter a name for the task'));\\\">\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group has-feedback\\\">\\r\\n                            <label class=\\\"control-label col-md-2\\\" for=\\\"taskName\\\">{{'todoDemo.editor.Name' | translate}}:</label>\\r\\n                            <div class=\\\"col-md-10\\\" [ngClass]=\\\"{'has-success': f.submitted && taskName.valid, 'has-error' : f.submitted && !taskName.valid}\\\">\\r\\n                                <input autofocus type=\\\"text\\\" id=\\\"taskName\\\" name=\\\"taskName\\\" placeholder=\\\"Enter task name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"taskEdit.name\\\" #taskName=\\\"ngModel\\\" required />\\r\\n                                <span *ngIf=\\\"f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ':taskName.valid, 'glyphicon-remove' : !taskName.valid}\\\"></span>\\r\\n                                <span *ngIf=\\\"f.submitted && !taskName.valid\\\" class=\\\"errorMessage\\\">\\r\\n                                    {{'todoDemo.editor.TaskNameRequired' | translate}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group description-form-group\\\">\\r\\n                            <label class=\\\"control-label col-md-2\\\" for=\\\"taskDescription\\\">{{'todoDemo.editor.Description' | translate}}:</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <input type=\\\"text\\\" id=\\\"taskDescription\\\" name=\\\"taskDescription\\\" placeholder=\\\"Enter task description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"taskEdit.description\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <label class=\\\"control-label col-md-2\\\"> </label>\\r\\n                        <div class=\\\"col-md-7\\\">\\r\\n                            <div class=\\\"checkbox\\\">\\r\\n                                <label>\\r\\n                                    <input name=\\\"isImportant\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"taskEdit.important\\\">\\r\\n                                    {{'todoDemo.editor.Important' | translate}}\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <hr class=\\\"edit-last-separator-hr\\\" />\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group actionBtn-form-group\\\">\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{'todoDemo.editor.AddTask' | translate}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"clearfix\\\"></div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, Input, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AlertService, MessageSeverity, DialogType } from '../../services/alert.service';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { LocalStoreManager } from '../../services/local-store-manager.service';\r\nimport { Utilities } from \"../../services/utilities\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'todo-demo',\r\n  templateUrl: './todo-demo.component.html',\r\n  styleUrls: ['./todo-demo.component.css']\r\n})\r\nexport class TodoDemoComponent implements OnInit, OnDestroy {\r\n  public static readonly DBKeyTodoDemo = \"todo-demo.todo_list\";\r\n\r\n  rows = [];\r\n  rowsCache = [];\r\n  columns = [];\r\n  editing = {};\r\n  taskEdit = {};\r\n  isDataLoaded: boolean = false;\r\n  loadingIndicator: boolean = true;\r\n  formResetToggle: boolean = true;\r\n  _currentUserId: string;\r\n  _hideCompletedTasks: boolean = false;\r\n\r\n\r\n  get currentUserId() {\r\n    if (this.authService.currentUser)\r\n      this._currentUserId = this.authService.currentUser.id;\r\n\r\n    return this._currentUserId;\r\n  }\r\n\r\n\r\n  set hideCompletedTasks(value: boolean) {\r\n\r\n    if (value) {\r\n      this.rows = this.rowsCache.filter(r => !r.completed);\r\n    }\r\n    else {\r\n      this.rows = [...this.rowsCache];\r\n    }\r\n\r\n\r\n    this._hideCompletedTasks = value;\r\n  }\r\n\r\n  get hideCompletedTasks() {\r\n    return this._hideCompletedTasks;\r\n  }\r\n\r\n\r\n  @Input()\r\n  verticalScrollbar: boolean = false;\r\n\r\n\r\n  @ViewChild('statusHeaderTemplate')\r\n  statusHeaderTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('statusTemplate')\r\n  statusTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('nameTemplate')\r\n  nameTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('descriptionTemplate')\r\n  descriptionTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('actionsTemplate')\r\n  actionsTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('editorModal')\r\n  editorModal: ModalDirective;\r\n\r\n\r\n  constructor(private alertService: AlertService, private translationService: AppTranslationService, private localStorage: LocalStoreManager, private authService: AuthService) {\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadingIndicator = true;\r\n\r\n    this.fetch((data) => {\r\n      this.refreshDataIndexes(data);\r\n      this.rows = data;\r\n      this.rowsCache = [...data];\r\n      this.isDataLoaded = true;\r\n\r\n      setTimeout(() => { this.loadingIndicator = false; }, 1500);\r\n    });\r\n\r\n\r\n    let gT = (key: string) => this.translationService.getTranslation(key);\r\n\r\n    this.columns = [\r\n      { prop: \"completed\", name: '', width: 30, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\r\n      { prop: 'name', name: gT('todoDemo.management.Task'), cellTemplate: this.nameTemplate, width: 200 },\r\n      { prop: 'description', name: gT('todoDemo.management.Description'), cellTemplate: this.descriptionTemplate, width: 500 },\r\n      { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.saveToDisk();\r\n  }\r\n\r\n\r\n\r\n  fetch(cb) {\r\n    let data = this.getFromDisk()\r\n\r\n    if (data == null) {\r\n      setTimeout(() => {\r\n\r\n        data = this.getFromDisk();\r\n\r\n        if (data == null) {\r\n          data = [\r\n            {\r\n              \"completed\": true,\r\n              \"important\": true,\r\n              \"name\": \"Smile\",\r\n              \"description\": \"Always be pleasant\"\r\n            },\r\n            {\r\n              \"completed\": false,\r\n              \"important\": true,\r\n              \"name\": \"Say Hello\",\r\n              \"description\": \"Always be friendly\"\r\n            },\r\n            {\r\n              \"completed\": false,\r\n              \"important\": false,\r\n              \"name\": \"Work Hard\",\r\n              \"description\": \"\"\r\n            },\r\n          ];\r\n        }\r\n\r\n        cb(data);\r\n      }, 1000);\r\n    }\r\n    else {\r\n      cb(data);\r\n    }\r\n  }\r\n\r\n\r\n  refreshDataIndexes(data) {\r\n    let index = 0;\r\n\r\n    for (let i of data) {\r\n      i.$$index = index++;\r\n    }\r\n  }\r\n\r\n\r\n  onSearchChanged(value: string) {\r\n    this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description) || value == 'important' && r.important || value == 'not important' && !r.important);\r\n  }\r\n\r\n\r\n  showErrorAlert(caption: string, message: string) {\r\n    this.alertService.showMessage(caption, message, MessageSeverity.error);\r\n  }\r\n\r\n\r\n  addTask() {\r\n    this.formResetToggle = false;\r\n\r\n    setTimeout(() => {\r\n      this.formResetToggle = true;\r\n\r\n      this.taskEdit = {};\r\n      this.editorModal.show();\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.rowsCache.splice(0, 0, this.taskEdit);\r\n    this.rows.splice(0, 0, this.taskEdit);\r\n    this.refreshDataIndexes(this.rowsCache);\r\n    this.rows = [...this.rows];\r\n\r\n    this.saveToDisk();\r\n    this.editorModal.hide();\r\n  }\r\n\r\n\r\n  updateValue(event, cell, cellValue, row) {\r\n    this.editing[row.$$index + '-' + cell] = false;\r\n    this.rows[row.$$index][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n\r\n    this.saveToDisk();\r\n  }\r\n\r\n\r\n  delete(row) {\r\n    this.alertService.showDialog('Are you sure you want to delete the task?', DialogType.confirm, () => this.deleteHelper(row));\r\n  }\r\n\r\n\r\n  deleteHelper(row) {\r\n    this.rowsCache = this.rowsCache.filter(item => item !== row)\r\n    this.rows = this.rows.filter(item => item !== row)\r\n\r\n    this.saveToDisk();\r\n  }\r\n\r\n  getFromDisk() {\r\n    return this.localStorage.getDataObject(`${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\r\n  }\r\n\r\n  saveToDisk() {\r\n    if (this.isDataLoaded)\r\n      this.localStorage.saveSyncedSessionData(this.rowsCache, `${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\r\n  }\r\n}\r\n","module.exports = \".row:not(:last-child) {\\r\\n    /*border-bottom: 1px solid #ccc;*/\\r\\n}\\r\\n\\r\\n.separator-hr {\\r\\n    margin: 0 5px;\\r\\n    border-top-style: dashed;\\r\\n}\\r\\n\\r\\n.edit-separator-hr {\\r\\n    margin: 10px 5px;\\r\\n    border-top-style: dashed;\\r\\n}\\r\\n\\r\\n.last-separator-hr {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.edit-last-separator-hr {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.password-separator-hr {\\r\\n    margin: 5px;\\r\\n    border-style: none;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\ninput.form-control {\\r\\n    border-left-width: 5px;\\r\\n}\\r\\n\\r\\n.password-well {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.hint-sm {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.checkbox.user-enabled {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.unblock-user {\\r\\n    margin-left: 34px;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) {\\r\\n    .user-enabled {\\r\\n        margin-left: 40px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <form *ngIf=\\\"formResetToggle\\\" [attr.autocomplete]=\\\"isGeneralEditor ? NaN : null\\\" class=\\\"form-horizontal\\\" name=\\\"userInfoForm\\\" #f=\\\"ngForm\\\" novalidate\\r\\n        (ngSubmit)=\\\"f.form.valid ? save() :\\r\\n\\r\\n          (!userName.valid && showErrorAlert('User name is required', 'Please enter a user name (minimum of 2 and maximum of 200 characters)'));\\r\\n\\r\\n          (userPassword && !userPassword.valid && showErrorAlert('Password is required', 'Please enter the current password'));\\r\\n\\r\\n          (email.errors?.required && showErrorAlert('Email is required', 'Please enter an email address (maximum of 200 characters)'));\\r\\n          (email.errors?.pattern && showErrorAlert('Invalid Email', 'Please enter a valid email address'));\\r\\n\\r\\n          (isChangePassword && isEditingSelf && !currentPassword.valid && showErrorAlert('Current password is required', 'Please enter the current password'));\\r\\n\\r\\n          ((isChangePassword || isNewUser) && !newPassword.valid && showErrorAlert('New password is required', 'Please enter the new password (minimum of 6 characters)'));\\r\\n\\r\\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.required && showErrorAlert('Confirmation password is required', 'Please enter the confirmation password'));\\r\\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.validateEqual && showErrorAlert('Password mismatch', 'New password and confirmation password do not match'));\\r\\n\\r\\n          (canAssignRoles && !roles.valid && showErrorAlert('Roles is required', 'Please select a minimum of 1 role'));\\\">\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"userName-{{uniqueId}}\\\">{{'users.editor.UserName' | translate}}</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{user.userName}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\" [ngClass]=\\\"{'has-success': f.submitted && userName.valid, 'has-error' : f.submitted && !userName.valid}\\\">\\r\\n        <input type=\\\"text\\\" attr.id=\\\"userName-{{uniqueId}}\\\" name=\\\"userName\\\" [attr.autocomplete]=\\\"isGeneralEditor ? new-password : null\\\" placeholder=\\\"Enter user name\\\"\\r\\n               class=\\\"form-control\\\" [(ngModel)]=\\\"userEdit.userName\\\" #userName=\\\"ngModel\\\" required minlength=\\\"2\\\" maxlength=\\\"200\\\" />\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': userName.valid, 'glyphicon-remove' : !userName.valid}\\\"></span>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted && !userName.valid\\\" class=\\\"errorMessage\\\">\\r\\n          {{'users.editor.UserNameRequired' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"password-separator-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\\\" class=\\\"form-group has-feedback\\\">\\r\\n      <label class=\\\"control-label col-md-2\\\" for=\\\"userPassword-{{uniqueId}}\\\">{{'users.editor.Password' | translate}}</label>\\r\\n      <div class=\\\"col-md-10\\\" [ngClass]=\\\"{'has-success': f.submitted && userPassword.valid, 'has-error' : f.submitted && !userPassword.valid}\\\">\\r\\n        <input type=\\\"password\\\"\\r\\n               attr.id=\\\"userPassword-{{uniqueId}}\\\"\\r\\n               name=\\\"userPassword\\\"\\r\\n               [attr.autocomplete]=\\\"isGeneralEditor ? new-password : null\\\"\\r\\n               placeholder=\\\"Enter password\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               #userPassword=\\\"ngModel\\\"\\r\\n               [(ngModel)]=\\\"userEdit.currentPassword\\\"\\r\\n               required />\\r\\n        <small class=\\\"hint-sm\\\">{{'users.editor.PasswordHint' | translate}}</small>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': userPassword.valid, 'glyphicon-remove' : !userPassword.valid}\\\"></span>\\r\\n        <span class=\\\"errorMessage\\\" *ngIf=\\\"showValidationErrors && f.submitted && !userPassword.valid\\\">\\r\\n          {{'users.editor.CurrentPasswordRequired' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"email-{{uniqueId}}\\\">{{'users.editor.Email' | translate}}</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{user.email}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\" [ngClass]=\\\"{'has-success': f.submitted && email.valid, 'has-error' : f.submitted && !email.valid}\\\">\\r\\n        <input type=\\\"text\\\" attr.id=\\\"email-{{uniqueId}}\\\" name=\\\"email\\\" placeholder=\\\"Enter email address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userEdit.email\\\" #email=\\\"ngModel\\\"\\r\\n               required\\r\\n               minlength=\\\"8\\\"\\r\\n               maxlength=\\\"200\\\"\\r\\n               pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$\\\" />\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': email.valid, 'glyphicon-remove' : !email.valid}\\\"></span>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted && email.errors?.required\\\" class=\\\"errorMessage\\\">\\r\\n          {{'users.editor.EmailRequired' | translate}}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted && email.errors?.pattern\\\" class=\\\"errorMessage\\\">\\r\\n          {{'users.editor.InvalidEmail' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isEditMode\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isEditMode\\\" class=\\\"form-group\\\">\\r\\n      <label for=\\\"newPassword-{{uniqueId}}\\\" class=\\\"control-label col-md-2\\\">{{'users.editor.Password' | translate}}</label>\\r\\n      <div *ngIf=\\\"!isChangePassword && !isNewUser\\\" class=\\\"col-md-10\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"changePassword()\\\" class=\\\"btn btn-link\\\">{{'users.editor.ChangePassword' | translate}}</button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isChangePassword || isNewUser\\\" class=\\\"col-md-10\\\">\\r\\n        <div class=\\\"password-well well well-sm\\\">\\r\\n          <div *ngIf=\\\"isEditingSelf\\\" class=\\\"form-group has-feedback\\\">\\r\\n            <label class=\\\"control-label col-md-3\\\" for=\\\"currentPassword-{{uniqueId}}\\\">{{'users.editor.CurrentPassword' | translate}}</label>\\r\\n            <div class=\\\"col-md-9\\\" [ngClass]=\\\"{'has-success': f.submitted && currentPassword.valid, 'has-error' : f.submitted && !currentPassword.valid}\\\">\\r\\n              <input type=\\\"password\\\"\\r\\n                     attr.id=\\\"currentPassword-{{uniqueId}}\\\"\\r\\n                     name=\\\"currentPassword\\\"\\r\\n                     [attr.autocomplete]=\\\"isGeneralEditor ? new-password : null\\\"\\r\\n                     placeholder=\\\"Enter current password\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n                     [(ngModel)]=\\\"userEdit.currentPassword\\\"\\r\\n                     #currentPassword=\\\"ngModel\\\"\\r\\n                     required\\r\\n                     minlength=\\\"8\\\"\\r\\n                     pattern=\\\"^(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*\\\\d)(?=[a-zA-Z0-9]*[^a-zA-Z0-9]).+\\\"\\r\\n                     />\\r\\n              <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': currentPassword.valid, 'glyphicon-remove' : !currentPassword.valid}\\\"></span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(currentPassword.dirty && currentPassword.errors?.required)\\\">\\r\\n                {{'users.editor.CurrentPasswordRequired' | translate}}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(currentPassword.dirty && currentPassword.errors?.minlength)\\\">\\r\\n                {{ 'Password must be at least 8 characters' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(currentPassword.dirty && !currentPassword.errors?.minlength && currentPassword.errors?.pattern)\\\">\\r\\n                {{ 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special charater' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!isNewUser\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <hr class=\\\"password-separator-hr\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group has-feedback\\\">\\r\\n            <label class=\\\"control-label col-md-3\\\" for=\\\"newPassword-{{uniqueId}}\\\">{{'users.editor.NewPassword' | translate}}</label>\\r\\n            <div class=\\\"col-md-9\\\" [ngClass]=\\\"{'has-success': f.submitted && newPassword.valid, 'has-error' : f.submitted && !newPassword.valid}\\\">\\r\\n              <input type=\\\"password\\\"\\r\\n                     attr.id=\\\"newPassword-{{uniqueId}}\\\"\\r\\n                     name=\\\"newPassword\\\"\\r\\n                     [attr.autocomplete]=\\\"isGeneralEditor ? new-password : null\\\"\\r\\n                     placeholder=\\\"Enter new password\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n                     [(ngModel)]=\\\"userEdit.newPassword\\\"\\r\\n                     #newPassword=\\\"ngModel\\\"\\r\\n                     required\\r\\n                     minlength=\\\"8\\\"\\r\\n                     pattern=\\\"^(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*\\\\d)(?=[a-zA-Z0-9]*[^a-zA-Z0-9]).+\\\"\\r\\n                     validateEqual=\\\"confirmPassword\\\" reverse=\\\"true\\\"\\r\\n                     />\\r\\n              <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': newPassword.valid, 'glyphicon-remove' : !newPassword.valid}\\\"></span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && newPassword.errors?.required)\\\">\\r\\n                {{'users.editor.NewPasswordRequired' | translate}}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && newPassword.errors?.minlength)\\\">\\r\\n                {{ 'Password must be at least 8 characters' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && !newPassword.errors?.minlength && newPassword.errors?.pattern)\\\">\\r\\n                {{ 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special charater' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && confirmPassword.dirty) || !(newPassword.dirty && newPassword.errors?.validateEqual)\\\">\\r\\n                {{ 'Password does not match confirmation' | translate }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <hr class=\\\"password-separator-hr\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group has-feedback\\\">\\r\\n            <label class=\\\"control-label col-md-3\\\" for=\\\"confirmPassword-{{uniqueId}}\\\">{{'users.editor.ConfirmPassword' | translate}}</label>\\r\\n            <div class=\\\"col-md-9\\\" [ngClass]=\\\"{ 'has-error' : (newPassword.dirty || confirmPassword.dirty) && (newPassword.valid && !confirmPassword.valid) }\\\">\\r\\n              <input type=\\\"password\\\"\\r\\n                     attr.id=\\\"confirmPassword-{{uniqueId}}\\\"\\r\\n                     name=\\\"confirmPassword\\\"\\r\\n                     [attr.autocomplete]=\\\"isGeneralEditor ? new-password : null\\\"\\r\\n                     placeholder=\\\"Confirm new password\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n                     [(ngModel)]=\\\"userEdit.confirmPassword\\\"\\r\\n                     #confirmPassword=\\\"ngModel\\\"\\r\\n                     required\\r\\n                     validateEqual=\\\"newPassword\\\" />\\r\\n              <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': confirmPassword.valid, 'glyphicon-remove' : !confirmPassword.valid}\\\"></span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && confirmPassword.dirty) || !(confirmPassword.dirty && confirmPassword.errors?.validateEqual)\\\">\\r\\n                {{ 'users.editor.ConfirmationPasswordRequired' | translate }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div *ngIf=\\\"!isEditMode || canAssignRoles\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isEditMode || canAssignRoles\\\" class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"roles-user-info\\\">{{'users.editor.Roles' | translate}}</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p ngPreserveWhitespaces class=\\\"form-control-static\\\">\\r\\n          <span *ngFor=\\\"let role of user.roles\\\">\\r\\n            <span title='{{getRoleByName(role)?.description}}' class=\\\"badge\\\">{{role}}</span>\\r\\n          </span>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode && canAssignRoles\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\" [ngClass]=\\\"{'has-success': f.submitted && roles.valid, 'has-error' : f.submitted && !roles.valid}\\\">\\r\\n        <select id=\\\"roles-user-info\\\" name=\\\"roles\\\" [(ngModel)]=\\\"userEdit.roles\\\" #roles=\\\"ngModel\\\" #rolesSelector=\\\"bootstrap-select\\\" class=\\\"selectpicker form-control\\\" bootstrapSelect required multiple\\r\\n                data-live-search=\\\"true\\\" data-actions-box=\\\"false\\\" data-live-search-placeholder=\\\"Search...\\\" title=\\\"Select Roles\\\">\\r\\n          <option *ngFor=\\\"let role of allRoles\\\" attr.data-content=\\\"<span title='{{role.description}}' class='badge'>{{role.name}}</span>\\\" attr.value=\\\"{{role.name}}\\\">\\r\\n            {{role.name}}\\r\\n          </option>\\r\\n        </select>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': roles.valid, 'glyphicon-remove' : !roles.valid}\\\"></span>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted && !roles.valid\\\" class=\\\"errorMessage\\\">\\r\\n          {{'users.editor.RoleRequired' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"phoneNumber-{{uniqueId}}\\\">{{'users.editor.PhoneNumber' | translate}}</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{user.phoneNumber}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <input type=\\\"text\\\" attr.id=\\\"phoneNumber-{{uniqueId}}\\\" name=\\\"phoneNumber\\\" placeholder=\\\"Enter phone number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userEdit.phoneNumber\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"question01\\\">{{'users.editor.Question01' | translate}}:</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{getQuestionText(user.question01)}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\" [ngClass]=\\\"{'has-success': !(question01.dirty && (!question01.valid || question01.errors || question01.selectedIndex == 0)), 'has-error' : (question01.dirty && (!question01.valid || question01.errors || question01.selectedIndex == 0))}\\\">\\r\\n        <select id=\\\"question01\\\" name=\\\"question01\\\" #question01=\\\"ngModel\\\" [(ngModel)]=\\\"userEdit.question01\\\" class=\\\"form-control\\\" required>\\r\\n          <option *ngFor=\\\"let s of securityQuestions01\\\" [ngValue]=\\\"s.referenceEnglishId\\\" [selected]=\\\"question01 == s.referenceEnglishId\\\">{{ s.question | translate }}</option>\\r\\n        </select>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': !(question01.dirty && (!question01.valid || question01.errors || question01.selectedIndex == 0)), 'glyphicon-remove' : (question01.dirty && (!question01.valid || question01.errors || question01.selectedIndex == 0))}\\\"></span>\\r\\n        <span *ngIf=\\\"showValidationErrors && (question01.dirty && (!question01.valid || question01.errors || question01.selectedIndex == 0))\\\" class=\\\"errorMessage\\\">\\r\\n          {{'Question is required' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"answer01\\\">{{'users.editor.Answer01' | translate}}:</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{user.answer01}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <input type=\\\"text\\\" id=\\\"answer01\\\" name=\\\"answer01\\\" placeholder=\\\"Enter Answer to Q1\\\" class=\\\"form-control\\\" #answer01=\\\"ngModel\\\" [(ngModel)]=\\\"userEdit.answer01\\\" />\\r\\n        <span *ngIf=\\\"showValidationErrors && ((answer01.dirty || false) && (!answer01.valid || answer01.errors))\\\" class=\\\"errorMessage\\\">\\r\\n          {{'Answer is required' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isViewOnly\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.last-separator-hr]=\\\"!isEditMode\\\" [class.edit-last-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"question02\\\">{{'users.editor.Question02' | translate}}:</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{getQuestionText(user.question02)}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\" [ngClass]=\\\"{'has-success': !(question02.dirty && (!question02.valid || question02.errors || question02.selectedIndex == 0)), 'has-error' : (question02.dirty && (!question02.valid || question02.errors || question02.selectedIndex == 0))}\\\">\\r\\n        <select id=\\\"question02\\\" name=\\\"question02\\\" #question02=\\\"ngModel\\\" [(ngModel)]=\\\"userEdit.question02\\\" class=\\\"form-control\\\" required>\\r\\n          <option *ngFor=\\\"let s of securityQuestions02\\\" [ngValue]=\\\"s.referenceEnglishId\\\" [selected]=\\\"question02 == s.referenceEnglishId\\\">{{ s.question | translate }}</option>\\r\\n        </select>\\r\\n        <span *ngIf=\\\"showValidationErrors && f.submitted\\\" class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok ': !(question02.dirty && (!question02.valid || question02.errors || question02.selectedIndex == 0)), 'glyphicon-remove' : (question02.dirty && (!question02.valid || question02.errors || question02.selectedIndex == 0))}\\\"></span>\\r\\n        <span *ngIf=\\\"showValidationErrors && (question02.dirty && (!question02.valid || question02.errors || question02.selectedIndex == 0))\\\" class=\\\"errorMessage\\\">\\r\\n          {{'Question is required' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group has-feedback\\\">\\r\\n      <label [class.col-md-3]=\\\"isViewOnly\\\" [class.col-md-2]=\\\"!isViewOnly\\\" class=\\\"control-label\\\" for=\\\"answer02\\\">{{'users.editor.Answer02' | translate}}:</label>\\r\\n      <div *ngIf=\\\"!isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <p class=\\\"form-control-static\\\">{{user.answer02}}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isEditMode\\\" [class.col-md-9]=\\\"isViewOnly\\\" [class.col-md-10]=\\\"!isViewOnly\\\">\\r\\n        <input type=\\\"text\\\" id=\\\"answer02\\\" name=\\\"answer02\\\" placeholder=\\\"Enter Answer to Q2\\\" class=\\\"form-control\\\" #answer02=\\\"ngModel\\\" [(ngModel)]=\\\"userEdit.answer02\\\" />\\r\\n        <span *ngIf=\\\"showValidationErrors && ((answer02.dirty || false) && (!answer02.valid || answer02.errors))\\\" class=\\\"errorMessage\\\">\\r\\n          {{'Answer is required' | translate}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--******************************************************************************************************-->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr [class.separator-hr]=\\\"!isEditMode\\\" [class.edit-separator-hr]=\\\"isEditMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isViewOnly\\\" class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-sm-5\\\">\\r\\n        <div *ngIf=\\\"isGeneralEditor && isEditMode\\\" class=\\\"pull-left\\\">\\r\\n          <div class=\\\"checkbox user-enabled\\\">\\r\\n            <label>\\r\\n              <input type=\\\"checkbox\\\" name=\\\"isEnabled\\\" [(ngModel)]=\\\"userEdit.isEnabled\\\">\\r\\n              {{'users.editor.Enabled' | translate}}\\r\\n            </label>\\r\\n          </div>\\r\\n          <button *ngIf=\\\"userEdit.isLockedOut\\\" type=\\\"button\\\" (click)=\\\"unlockUser()\\\" class=\\\"btn btn-warning unblock-user\\\" [disabled]=\\\"isSaving\\\"><i class='fa fa-unlock-alt'></i> {{'users.editor.Unblock' | translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-7\\\">\\r\\n        <div ngPreserveWhitespaces class=\\\"pull-right\\\">\\r\\n          <button *ngIf=\\\"!isEditMode && isGeneralEditor\\\" type=\\\"button\\\" (click)=\\\"close()\\\" class=\\\"btn btn-default\\\"><i class='fa fa-close'></i> {{'users.editor.Close' | translate}}</button>\\r\\n          <button *ngIf=\\\"!isEditMode && !isGeneralEditor\\\" type=\\\"button\\\" (click)=\\\"edit()\\\" class=\\\"btn btn-default\\\"><i class='fa fa-edit'></i> {{'users.editor.Edit' | translate}}</button>\\r\\n          <button *ngIf=\\\"isEditMode\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"isSaving\\\"><i class='fa fa-times'></i> {{'users.editor.Cancel' | translate}}</button>\\r\\n          <button *ngIf=\\\"isEditMode\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"isSaving\\\">\\r\\n            <i *ngIf=\\\"!isSaving\\\" class='fa fa-save'></i>\\r\\n            <i *ngIf=\\\"isSaving\\\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('users.editor.Saving' | translate) : ('users.editor.Save' | translate)}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\n\r\nimport { AlertService, MessageSeverity } from '../../services/alert.service';\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Utilities } from '../../services/utilities';\r\nimport { User } from '../../models/user.model';\r\nimport { UserEdit } from '../../models/user-edit.model';\r\nimport { Role } from '../../models/role.model';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { Observable } from 'rxjs';\r\nimport { SecurityQuestion } from '../../models/security-questions.model';\r\nimport { LocalStoreManager } from '../../services/local-store-manager.service';\r\nimport { DBkeys } from '../../services/db-Keys';\r\nimport { LanguageObservableService } from '../../services/language-observable.service';\r\n\r\n\r\n@Component({\r\n  selector: 'user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.css'],\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\r\n  private isEditMode = false;\r\n  private isNewUser = false;\r\n  private isSaving = false;\r\n  private isChangePassword = false;\r\n  private isEditingSelf = false;\r\n  private showValidationErrors = false;\r\n  private editingUserName: string;\r\n  private uniqueId: string = Utilities.uniqueId();\r\n  private user: User = new User();\r\n  private userEdit: UserEdit = new UserEdit();\r\n  private allRoles: Role[] = [];\r\n  private isEditingEmailAddress: boolean = false;\r\n  private selectedLanguage: string;\r\n\r\n  public formResetToggle = true;\r\n\r\n  public changesSavedCallback: () => void;\r\n  public changesFailedCallback: () => void;\r\n  public changesCancelledCallback: () => void;\r\n  \r\n  @Input()\r\n  isViewOnly: boolean;\r\n\r\n  @Input()\r\n  isGeneralEditor = false;\r\n\r\n\r\n  questions: SecurityQuestion[];\r\n  securityQuestions01: SecurityQuestion[];\r\n  securityQuestions02: SecurityQuestion[];\r\n\r\n  @ViewChild('f')\r\n  private form;\r\n\r\n  //ViewChilds Required because ngIf hides template variables from global scope\r\n  @ViewChild('userName')\r\n  private userName;\r\n\r\n  @ViewChild('userPassword')\r\n  private userPassword;\r\n\r\n  @ViewChild('email')\r\n  private email;\r\n\r\n  @ViewChild('currentPassword')\r\n  private currentPassword;\r\n\r\n  @ViewChild('newPassword')\r\n  private newPassword;\r\n\r\n  @ViewChild('confirmPassword')\r\n  private confirmPassword;\r\n\r\n  @ViewChild('roles')\r\n  private roles;\r\n\r\n  @ViewChild('rolesSelector')\r\n  private rolesSelector;\r\n\r\n\r\n  constructor(private alertService: AlertService, private accountService: AccountService, private localStorage: LocalStoreManager, public userInfoService: LanguageObservableService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.questions = [];\r\n    this.securityQuestions01 = [];\r\n    this.securityQuestions02 = [];\r\n    \r\n    if (this.localStorage.exists(DBkeys.LANGUAGE)) {\r\n      this.selectedLanguage = this.localStorage.getDataObject<string>(DBkeys.LANGUAGE);\r\n    } else {\r\n      this.selectedLanguage = \"en\";\r\n    }\r\n\r\n    this.accountService.getQuestions(this.selectedLanguage).subscribe(a => a.forEach(x => {\r\n      this.questions.push(x);\r\n      this.securityQuestions01.push(x);\r\n      this.securityQuestions02.push(x);\r\n    }));\r\n\r\n\r\n    if (!this.isGeneralEditor) {\r\n      this.loadCurrentUserData();\r\n    }\r\n\r\n    this.userInfoService.languageStream$.subscribe(lang => {\r\n      if (this.selectedLanguage != lang) {\r\n        this.selectedLanguage = lang;\r\n        this.getQuestions(lang);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getQuestions(language) {\r\n    this.questions = [];\r\n    this.securityQuestions01 = [];\r\n    this.securityQuestions02 = [];\r\n    this.accountService.getQuestions(language).subscribe(a => {\r\n      if (a && a.length > 0) {\r\n        this.questions = a;\r\n        this.securityQuestions01 = a;\r\n        this.securityQuestions02 = a;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private loadCurrentUserData() {\r\n    this.alertService.startLoadingMessage();\r\n\r\n    if (this.canViewAllRoles) {\r\n      this.accountService.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));\r\n    }\r\n    else {\r\n      this.accountService.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => new Role(x))), error => this.onCurrentUserDataLoadFailed(error));\r\n    }\r\n  }\r\n\r\n\r\n  private onCurrentUserDataLoadSuccessful(user: User, roles: Role[]) {\r\n    this.alertService.stopLoadingMessage();\r\n    this.user = user;\r\n    this.allRoles = roles;\r\n  }\r\n\r\n  private onCurrentUserDataLoadFailed(error: any) {\r\n    this.alertService.stopLoadingMessage();\r\n    this.alertService.showStickyMessage(\"Load Error\", `Unable to retrieve user data from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n      MessageSeverity.error, error);\r\n\r\n    this.user = new User();\r\n  }\r\n\r\n\r\n  private getQuestionText(id: number) {\r\n    var question = this.questions.find(q => q.referenceEnglishId == id);\r\n    return (question) ? question.question : '';\r\n  }\r\n\r\n\r\n  private getRoleByName(name: string) {\r\n    return this.allRoles.find((r) => r.name == name)\r\n  }\r\n\r\n\r\n\r\n  private showErrorAlert(caption: string, message: string) {\r\n    this.alertService.showMessage(caption, message, MessageSeverity.error);\r\n  }\r\n\r\n\r\n  public deletePasswordFromUser(user: UserEdit | User) {\r\n    let userEdit = <UserEdit>user;\r\n\r\n    delete userEdit.currentPassword;\r\n    delete userEdit.newPassword;\r\n    delete userEdit.confirmPassword;\r\n  }\r\n\r\n\r\n  private edit() {\r\n    Object.assign(this.userEdit, this.user);\r\n\r\n    this.isEditingSelf = this.accountService.currentUser ? this.user.id == this.accountService.currentUser.id : false;\r\n    this.isEditMode = true;\r\n    this.showValidationErrors = true;\r\n    this.isChangePassword = false;\r\n  }\r\n\r\n\r\n  private save() {\r\n    this.isSaving = true;\r\n    this.alertService.startLoadingMessage(\"Saving changes...\");\r\n\r\n\r\n\r\n    if (this.user.email != this.userEdit.email) {\r\n      this.isEditingEmailAddress = true;\r\n    }\r\n\r\n    if (this.isNewUser) {\r\n      this.accountService.newUser(this.userEdit)\r\n        .subscribe(\r\n          response => this.saveSuccessHelper(response),\r\n          error => this.saveFailedHelper(error));\r\n    }\r\n    else {\r\n      this.accountService.updateUser(this.userEdit, this.isEditingSelf)\r\n        .subscribe(\r\n          response => this.saveSuccessHelper(response),\r\n          error => this.saveFailedHelper(error));\r\n    }\r\n  }\r\n\r\n\r\n  private saveSuccessHelper(user?: User) {\r\n    this.testIsRoleUserCountChanged(this.user, this.userEdit);\r\n\r\n    if (user)\r\n      Object.assign(this.userEdit, user);\r\n\r\n    this.isSaving = false;\r\n    this.alertService.stopLoadingMessage();\r\n    this.isChangePassword = false;\r\n    this.showValidationErrors = false;\r\n\r\n    this.deletePasswordFromUser(this.userEdit);\r\n    Object.assign(this.user, this.userEdit);\r\n    this.userEdit = new UserEdit();\r\n    this.resetForm();\r\n\r\n\r\n    if (this.isGeneralEditor) {\r\n      if (this.isNewUser)\r\n        this.alertService.showMessage(\"Success\", `User \\\"${this.user.userName}\\\" was created successfully`, MessageSeverity.success);\r\n      else if (!this.isEditingSelf)\r\n        this.alertService.showMessage(\"Success\", `Changes to user \\\"${this.user.userName}\\\" was saved successfully`, MessageSeverity.success);\r\n    }\r\n\r\n    if (this.isEditingSelf) {\r\n      this.alertService.showMessage(\"Success\", \"Changes to your User Profile was saved successfully\", MessageSeverity.success);\r\n\r\n      if (this.isEditingEmailAddress) {\r\n        this.alertService.showMessage(\"Username\", \"The email address to access your account has been updated\", MessageSeverity.success);\r\n      }\r\n      this.refreshLoggedInUser();\r\n    }\r\n\r\n    this.isEditMode = false;\r\n    this.isEditingEmailAddress = false;\r\n\r\n\r\n    if (this.changesSavedCallback)\r\n      this.changesSavedCallback();\r\n  }\r\n\r\n\r\n  private saveFailedHelper(error: any) {\r\n    this.isSaving = false;\r\n    this.isChangePassword = false;\r\n    this.isEditingEmailAddress = false;\r\n    this.showValidationErrors = true;\r\n\r\n    this.alertService.stopLoadingMessage();\r\n    this.alertService.showStickyMessage(\"Save Error\", \"The below errors occurred whilst saving your changes:\", MessageSeverity.error, error);\r\n    this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n\r\n\r\n    this.resetForm();\r\n\r\n\r\n    if (this.changesFailedCallback)\r\n      this.changesFailedCallback();\r\n  }\r\n\r\n\r\n\r\n  private testIsRoleUserCountChanged(currentUser: User, editedUser: User) {\r\n\r\n    let rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);\r\n    let rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);\r\n\r\n    let modifiedRoles = rolesAdded.concat(rolesRemoved);\r\n\r\n    if (modifiedRoles.length)\r\n      setTimeout(() => this.accountService.onRolesUserCountChanged(modifiedRoles));\r\n  }\r\n\r\n\r\n\r\n  private cancel() {\r\n    if (this.isGeneralEditor)\r\n      this.userEdit = this.user = new UserEdit();\r\n    else\r\n      this.userEdit = new UserEdit();\r\n\r\n    this.showValidationErrors = false;\r\n    this.resetForm();\r\n\r\n    this.alertService.showMessage(\"Cancelled\", \"Operation cancelled by user\", MessageSeverity.default);\r\n    this.alertService.resetStickyMessage();\r\n\r\n    if (!this.isGeneralEditor)\r\n      this.isEditMode = false;\r\n\r\n    if (this.changesCancelledCallback)\r\n      this.changesCancelledCallback();\r\n  }\r\n\r\n\r\n  private close() {\r\n    this.userEdit = this.user = new UserEdit();\r\n    this.showValidationErrors = false;\r\n    this.resetForm();\r\n    this.isEditMode = false;\r\n\r\n    if (this.changesSavedCallback)\r\n      this.changesSavedCallback();\r\n  }\r\n\r\n\r\n\r\n  private refreshLoggedInUser() {\r\n    this.accountService.refreshLoggedInUser()\r\n      .subscribe(user => {\r\n        this.loadCurrentUserData();\r\n      },\r\n        error => {\r\n          this.alertService.resetStickyMessage();\r\n          this.alertService.showStickyMessage(\"Refresh failed\", \"An error occurred whilst refreshing logged in user information from the server\", MessageSeverity.error, error);\r\n        });\r\n  }\r\n\r\n\r\n  private changePassword() {\r\n    this.isChangePassword = true;\r\n  }\r\n\r\n\r\n  private unlockUser() {\r\n    this.isSaving = true;\r\n    this.alertService.startLoadingMessage(\"Enabling User...\");\r\n\r\n\r\n    this.accountService.unblockUser(this.userEdit.id)\r\n      .subscribe(response => {\r\n        this.isSaving = false;\r\n        this.userEdit.isLockedOut = false;\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showMessage(\"Success\", \"User has been successfully enabled\", MessageSeverity.success);\r\n      },\r\n        error => {\r\n          this.isSaving = false;\r\n          this.alertService.stopLoadingMessage();\r\n          this.alertService.showStickyMessage(\"Enable User Error\", \"The below errors occurred while enabling the user:\", MessageSeverity.error, error);\r\n          this.alertService.showStickyMessage(error, null, MessageSeverity.error);\r\n        });\r\n  }\r\n\r\n\r\n  resetForm(replace = false) {\r\n    this.isChangePassword = false;\r\n\r\n    if (!replace) {\r\n      this.form.reset();\r\n    }\r\n    else {\r\n      this.formResetToggle = false;\r\n\r\n      setTimeout(() => {\r\n        this.formResetToggle = true;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  newUser(allRoles: Role[]) {\r\n    this.isGeneralEditor = true;\r\n    this.isNewUser = true;\r\n\r\n    this.allRoles = [...allRoles];\r\n    this.editingUserName = null;\r\n    this.user = this.userEdit = new UserEdit();\r\n    this.userEdit.isEnabled = true;\r\n    this.edit();\r\n\r\n    return this.userEdit;\r\n  }\r\n\r\n  editUser(user: User, allRoles: Role[]) {\r\n    if (user) {\r\n      this.isGeneralEditor = true;\r\n      this.isNewUser = false;\r\n\r\n      this.setRoles(user, allRoles);\r\n      this.editingUserName = user.userName;\r\n      this.user = new User();\r\n      this.userEdit = new UserEdit();\r\n      Object.assign(this.user, user);\r\n      Object.assign(this.userEdit, user);\r\n      this.edit();\r\n\r\n      return this.userEdit;\r\n    }\r\n    else {\r\n      return this.newUser(allRoles);\r\n    }\r\n  }\r\n\r\n\r\n  displayUser(user: User, allRoles?: Role[]) {\r\n\r\n    this.user = new User();\r\n    Object.assign(this.user, user);\r\n    this.deletePasswordFromUser(this.user);\r\n    this.setRoles(user, allRoles);\r\n\r\n    this.isEditMode = false;\r\n  }\r\n\r\n  private setRoles(user: User, allRoles?: Role[]) {\r\n\r\n    this.allRoles = allRoles ? [...allRoles] : [];\r\n\r\n    if (user.roles) {\r\n      for (let ur of user.roles) {\r\n        if (!this.allRoles.some(r => r.name == ur))\r\n          this.allRoles.unshift(new Role(ur));\r\n      }\r\n    }\r\n\r\n    if (allRoles == null || this.allRoles.length != allRoles.length)\r\n      setTimeout(() => this.rolesSelector.refresh());\r\n  }\r\n\r\n\r\n\r\n  get canViewAllRoles() {\r\n    return this.accountService.userHasPermission(Permission.viewRolesPermission);\r\n  }\r\n\r\n  get canAssignRoles() {\r\n    return this.accountService.userHasPermission(Permission.assignRolesPermission);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.separator-hr {\\r\\n    margin: 7px 5px;\\r\\n    border-top-style: dashed;\\r\\n}\\r\\n\\r\\n.subseparator-hr {\\r\\n    margin: 7px 5px;\\r\\n    border-top-style: none;\\r\\n}\\r\\n\\r\\n.last-separator-hr {\\r\\n    margin-top: 7px;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.form-control-static {\\r\\n    min-height: 0;\\r\\n}\\r\\n\\r\\n.form-horizontal .checkbox {\\r\\n    padding-top: 0;\\r\\n}\\r\\n\\r\\n.col-reset-default {\\r\\n    padding-right: 0;\\r\\n}\\r\\n\\r\\n.col-set-default {\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .form-horizontal .control-label {\\r\\n        padding-top: 5px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"form-horizontal\\\">\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"language\\\" class=\\\"col-sm-3 control-label\\\">{{'preferences.Language' | translate}} </label>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <!--<select id=\\\"language\\\" [(ngModel)]=\\\"configurations.language\\\" #languageSelector=\\\"bootstrap-select\\\" bootstrapSelect class=\\\"selectpicker form-control\\\">\\r\\n        <option data-subtext=\\\"(Default)\\\" value=\\\"en\\\">{{'preferences.English' | translate}}</option>\\r\\n        <option value=\\\"fr\\\">{{'preferences.French' | translate}}</option>\\r\\n        <option value=\\\"sp\\\">{{'preferences.Spanish' | translate}}</option>\\r\\n        <option value=\\\"de\\\">{{'preferences.Dutch' | translate}}</option>\\r\\n      </select>-->\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n      <p class=\\\"form-control-static text-muted small\\\">{{'preferences.LanguageHint' | translate}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <hr class=\\\"separator-hr\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <hr class=\\\"last-separator-hr\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      <div class=\\\"row pull-left\\\">\\r\\n        <div class=\\\"col-sm-6 col-reset-default\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"resetDefault()\\\" class=\\\"btn btn-success\\\">\\r\\n            <i class='fa fa-circle-o-notch'></i> {{'preferences.ResetDefault' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6 col-set-default\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"setAsDefault()\\\" class=\\\"btn btn-primary\\\">\\r\\n            <i class='fa fa-hdd-o'></i> {{'preferences.SetDefault' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\n\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { BootstrapSelectDirective } from \"../../directives/bootstrap-select.directive\";\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { Permission } from '../../models/permission.model';\r\n\r\n\r\n@Component({\r\n  selector: 'user-preferences',\r\n  templateUrl: './user-preferences.component.html',\r\n  styleUrls: ['./user-preferences.component.css']\r\n})\r\nexport class UserPreferencesComponent implements OnInit, OnDestroy {\r\n\r\n  themeSelectorToggle = true;\r\n\r\n  languageChangedSubscription: any;\r\n\r\n  @ViewChild(\"languageSelector\")\r\n  languageSelector: BootstrapSelectDirective;\r\n\r\n  @ViewChild(\"homePageSelector\")\r\n  homePageSelector: BootstrapSelectDirective;\r\n\r\n  constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, public configurations: ConfigurationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {\r\n      this.themeSelectorToggle = false;\r\n\r\n      setTimeout(() => {\r\n        this.languageSelector.refresh();\r\n\r\n\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languageChangedSubscription.unsubscribe();\r\n  }\r\n\r\n\r\n\r\n  reloadFromServer() {\r\n    this.alertService.startLoadingMessage();\r\n\r\n    this.accountService.getUserPreferences()\r\n      .subscribe(results => {\r\n        this.alertService.stopLoadingMessage();\r\n\r\n        this.configurations.import(results);\r\n\r\n        this.alertService.showMessage(\"Defaults loaded!\", \"\", MessageSeverity.info);\r\n\r\n      },\r\n        error => {\r\n          this.alertService.stopLoadingMessage();\r\n          this.alertService.showStickyMessage(\"Load Error\", `Unable to retrieve user preferences from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n            MessageSeverity.error, error);\r\n        });\r\n  }\r\n\r\n  setAsDefault() {\r\n    this.alertService.showDialog(\"Are you sure you want to set the current configuration as your new defaults?\", DialogType.confirm,\r\n      () => this.setAsDefaultHelper(),\r\n      () => this.alertService.showMessage(\"Operation Cancelled!\", \"\", MessageSeverity.default));\r\n  }\r\n\r\n  setAsDefaultHelper() {\r\n    this.alertService.startLoadingMessage(\"\", \"Saving new defaults\");\r\n\r\n    this.accountService.updateUserPreferences(this.configurations.export())\r\n      .subscribe(response => {\r\n        this.alertService.stopLoadingMessage();\r\n        this.alertService.showMessage(\"New Defaults\", \"Account defaults updated successfully\", MessageSeverity.success)\r\n\r\n      },\r\n        error => {\r\n          this.alertService.stopLoadingMessage();\r\n          this.alertService.showStickyMessage(\"Save Error\", `An error occured whilst saving configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n            MessageSeverity.error, error);\r\n        });\r\n  }\r\n\r\n\r\n\r\n  resetDefault() {\r\n    this.alertService.showDialog(\"Are you sure you want to reset your defaults?\", DialogType.confirm,\r\n      () => this.resetDefaultHelper(),\r\n      () => this.alertService.showMessage(\"Operation Cancelled!\", \"\", MessageSeverity.default));\r\n  }\r\n\r\n  resetDefaultHelper() {\r\n    this.alertService.startLoadingMessage(\"\", \"Resetting defaults\");\r\n\r\n    this.accountService.updateUserPreferences(null)\r\n      .subscribe(response => {\r\n        this.alertService.stopLoadingMessage();\r\n        this.configurations.import(null);\r\n        this.alertService.showMessage(\"Defaults Reset\", \"Account defaults reset completed successfully\", MessageSeverity.success)\r\n\r\n      },\r\n        error => {\r\n          this.alertService.stopLoadingMessage();\r\n          this.alertService.showStickyMessage(\"Save Error\", `An error occured whilst resetting configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n            MessageSeverity.error, error);\r\n        });\r\n  }\r\n\r\n\r\n\r\n\r\n  get canViewCustomers() {\r\n    return this.accountService.userHasPermission(Permission.viewUsersPermission); //eg. viewCustomersPermission\r\n  }\r\n\r\n  get canViewProducts() {\r\n    return this.accountService.userHasPermission(Permission.viewUsersPermission); //eg. viewProductsPermission\r\n  }\r\n\r\n  get canViewOrders() {\r\n    return true; //eg. viewOrdersPermission\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.user-role {\\r\\n    font-size: 0.8em !important;\\r\\n    margin-right: 1px;\\r\\n}\\r\\n\\r\\n.control-box {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.search-box {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.action-box {\\r\\n    margin: 0 50px 0 0;\\r\\n    min-height: 0;\\r\\n}\\r\\n\\r\\n.action-box .toolbaritem a {\\r\\n        padding-top: 5px;\\r\\n        padding-bottom: 5px;\\r\\n        min-width: 100px;\\r\\n    }\\r\\n\\r\\n.user-disabled {\\r\\n    color: #777;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n.locked-out {\\r\\n    background-color: orangered;\\r\\n    color: whitesmoke;\\r\\n    width: 100%;\\r\\n    display: inline-block;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n    .action-box {\\r\\n        margin: 0 14px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n    <div class=\\\"row control-box\\\">\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <div class=\\\"form-group search-box\\\">\\r\\n                <search-box (searchChange)=\\\"onSearchChanged($event)\\\" placeholder=\\\"{{'users.management.Search' | translate}}\\\">></search-box>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"navbar action-box\\\">\\r\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                    <li *ngIf=\\\"canManageUsers && canAssignRoles\\\" class=\\\"toolbaritem\\\">\\r\\n                        <a href=\\\"javascript:;\\\" (click)=\\\"newUser(row)\\\">\\r\\n                            <i class=\\\"fa fa-plus-circle\\\"></i> {{'users.management.NewUser' | translate}}\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ngx-datatable class=\\\"material colored-header sm table table-striped table-hover\\\"\\r\\n                   [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n                   [rows]=\\\"rows\\\"\\r\\n                   [rowHeight]=\\\"35\\\"\\r\\n                   [headerHeight]=\\\"35\\\"\\r\\n                   [footerHeight]=\\\"35\\\"\\r\\n                   [columns]=\\\"columns\\\"\\r\\n                   [scrollbarV]=\\\"true\\\"\\r\\n                   [columnMode]=\\\"'force'\\\">\\r\\n    </ngx-datatable>\\r\\n\\r\\n    <ng-template #indexTemplate let-value=\\\"value\\\">\\r\\n        <strong>{{value}}</strong>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #userNameTemplate let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n        <span [class.locked-out]=\\\"row.isLockedOut\\\" [class.user-disabled]=\\\"!row.isEnabled\\\">\\r\\n            <i *ngIf=\\\"row.isLockedOut\\\" class=\\\"fa fa-exclamation-triangle\\\"> </i>\\r\\n            <i *ngIf=\\\"!row.isEnabled\\\" class=\\\"fa fa-exclamation\\\"> </i>\\r\\n            {{value}}\\r\\n        </span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #rolesTemplate let-row=\\\"row\\\" let-value=\\\"value\\\" let-i=\\\"index\\\">\\r\\n        <span class=\\\"user-role badge\\\" *ngFor=\\\"let role of value\\\">{{role}}</span>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #actionsTemplate let-row=\\\"row\\\" let-value=\\\"value\\\" let-i=\\\"index\\\">\\r\\n        <div *ngIf=\\\"canManageUsers\\\">\\r\\n            <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" (click)=\\\"editUser(row)\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> {{'users.management.Edit' | translate}}</a>\\r\\n            |\\r\\n            <a class=\\\"btn btn-link btn-xs\\\" href=\\\"javascript:;\\\" (click)=\\\"deleteUser(row)\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i> {{'users.management.Delete' | translate}}</a>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <div class=\\\"modal fade\\\" bsModal #editorModal=\\\"bs-modal\\\" (onHidden)=\\\"onEditorModalHidden()\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title pull-left\\\"><i class=\\\"fa fa-user-circle-o\\\"></i> {{editingUserName ? ('users.management.EditUser' | translate:editingUserName) : ('users.management.NewUser' | translate)}}</h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close pull-right\\\" title=\\\"Close\\\" (click)=\\\"editorModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <user-info #userEditor [isGeneralEditor]=\\\"true\\\"></user-info>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\nimport { AlertService, DialogType, MessageSeverity } from '../../services/alert.service';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Utilities } from \"../../services/utilities\";\r\nimport { User } from '../../models/user.model';\r\nimport { Role } from '../../models/role.model';\r\nimport { Permission } from '../../models/permission.model';\r\nimport { UserEdit } from '../../models/user-edit.model';\r\nimport { UserInfoComponent } from \"./user-info.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'users-management',\r\n    templateUrl: './users-management.component.html',\r\n    styleUrls: ['./users-management.component.css']\r\n})\r\nexport class UsersManagementComponent implements OnInit, AfterViewInit {\r\n    columns: any[] = [];\r\n    rows: User[] = [];\r\n    rowsCache: User[] = [];\r\n    editedUser: UserEdit;\r\n    sourceUser: UserEdit;\r\n    editingUserName: { name: string };\r\n    loadingIndicator: boolean;\r\n\r\n    allRoles: Role[] = [];\r\n\r\n\r\n    @ViewChild('indexTemplate')\r\n    indexTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('userNameTemplate')\r\n    userNameTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('rolesTemplate')\r\n    rolesTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('actionsTemplate')\r\n    actionsTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('editorModal')\r\n    editorModal: ModalDirective;\r\n\r\n    @ViewChild('userEditor')\r\n    userEditor: UserInfoComponent;\r\n\r\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        let gT = (key: string) => this.translationService.getTranslation(key);\r\n\r\n        this.columns = [\r\n            { prop: \"index\", name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },\r\n            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },\r\n            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },\r\n            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },\r\n            { prop: 'email', name: gT('users.management.Email'), width: 140 },\r\n            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },\r\n            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 },\r\n            { prop: 'Answer 01', name: gT('users.management.Answer01'), width: 100 },\r\n            { prop: 'Answer 02', name: gT('users.management.Answer02'), width: 100 }     \r\n        ];\r\n\r\n        if (this.canManageUsers)\r\n            this.columns.push({ name: '', width: 130, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });\r\n\r\n        this.loadData();\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n\r\n        this.userEditor.changesSavedCallback = () => {\r\n            this.addNewUserToList();\r\n            this.editorModal.hide();\r\n        };\r\n\r\n        this.userEditor.changesCancelledCallback = () => {\r\n            this.editedUser = null;\r\n            this.sourceUser = null;\r\n            this.editorModal.hide();\r\n        };\r\n    }\r\n\r\n\r\n    addNewUserToList() {\r\n        if (this.sourceUser) {\r\n            Object.assign(this.sourceUser, this.editedUser);\r\n\r\n            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);\r\n            if (sourceIndex > -1)\r\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\r\n\r\n            sourceIndex = this.rows.indexOf(this.sourceUser, 0);\r\n            if (sourceIndex > -1)\r\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\r\n\r\n            this.editedUser = null;\r\n            this.sourceUser = null;\r\n        }\r\n        else {\r\n            let user = new User();\r\n            Object.assign(user, this.editedUser);\r\n            this.editedUser = null;\r\n\r\n            let maxIndex = 0;\r\n            for (let u of this.rowsCache) {\r\n                if ((<any>u).index > maxIndex)\r\n                    maxIndex = (<any>u).index;\r\n            }\r\n\r\n            (<any>user).index = maxIndex + 1;\r\n\r\n            this.rowsCache.splice(0, 0, user);\r\n            this.rows.splice(0, 0, user);\r\n            this.rows = [...this.rows];\r\n        }\r\n    }\r\n\r\n\r\n    loadData() {\r\n        this.alertService.startLoadingMessage();\r\n        this.loadingIndicator = true;\r\n\r\n        if (this.canViewRoles) {\r\n            this.accountService.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));\r\n        }\r\n        else {\r\n            this.accountService.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountService.currentUser.roles.map(x => new Role(x))), error => this.onDataLoadFailed(error));\r\n        }\r\n    }\r\n\r\n\r\n    onDataLoadSuccessful(users: User[], roles: Role[]) {\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        users.forEach((user, index, users) => {\r\n            (<any>user).index = index + 1;\r\n        });\r\n\r\n        this.rowsCache = [...users];\r\n        this.rows = users;\r\n\r\n        this.allRoles = roles;\r\n    }\r\n\r\n\r\n    onDataLoadFailed(error: any) {\r\n        this.alertService.stopLoadingMessage();\r\n        this.loadingIndicator = false;\r\n\r\n        this.alertService.showStickyMessage(\"Load Error\", `Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n            MessageSeverity.error, error);\r\n    }\r\n\r\n\r\n    onSearchChanged(value: string) {\r\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.userName, r.lastName, r.email, r.phoneNumber, r.roles));\r\n    }\r\n\r\n    onEditorModalHidden() {\r\n        this.editingUserName = null;\r\n        this.userEditor.resetForm(true);\r\n    }\r\n\r\n\r\n    newUser() {\r\n        this.editingUserName = null;\r\n        this.sourceUser = null;\r\n        this.editedUser = this.userEditor.newUser(this.allRoles);\r\n        this.editorModal.show();\r\n    }\r\n\r\n\r\n    editUser(row: UserEdit) {\r\n        this.editingUserName = { name: row.userName };\r\n        this.sourceUser = row;\r\n        this.editedUser = this.userEditor.editUser(row, this.allRoles);\r\n        this.editorModal.show();\r\n    }\r\n\r\n\r\n    deleteUser(row: UserEdit) {\r\n        this.alertService.showDialog('Are you sure you want to delete \\\"' + row.userName + '\\\"?', DialogType.confirm, () => this.deleteUserHelper(row));\r\n    }\r\n\r\n\r\n    deleteUserHelper(row: UserEdit) {\r\n\r\n        this.alertService.startLoadingMessage(\"Deleting...\");\r\n        this.loadingIndicator = true;\r\n\r\n        this.accountService.deleteUser(row)\r\n            .subscribe(results => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.rowsCache = this.rowsCache.filter(item => item !== row)\r\n                this.rows = this.rows.filter(item => item !== row)\r\n            },\r\n            error => {\r\n                this.alertService.stopLoadingMessage();\r\n                this.loadingIndicator = false;\r\n\r\n                this.alertService.showStickyMessage(\"Delete Error\", `An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                    MessageSeverity.error, error);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    get canAssignRoles() {\r\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\r\n    }\r\n\r\n    get canViewRoles() {\r\n        return this.accountService.userHasPermission(Permission.viewRolesPermission)\r\n    }\r\n\r\n    get canManageUsers() {\r\n        return this.accountService.userHasPermission(Permission.manageUsersPermission);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ForgotPasswordConfirmation.Header' | translate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        {{'ContactUs.AMERICAS' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.France' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Spain' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Switzerland' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Netherlands' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.UK' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.AllCountries' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.APAC' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <a routerLink=\\\"/login\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'ForgotPasswordConfirmation.ReturnToLogin' | translate }}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'forgot-password-confirmation',\r\n  templateUrl: './forgot-password-confirmation.component.html',\r\n  styleUrls: ['./forgot-password-confirmation.component.css']\r\n})\r\nexport class ForgotPasswordConfirmationComponent implements OnInit {\r\n    id: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.id = id;\r\n\r\n\r\n    //this.accountService.confirmForgotPassword(id)\r\n    //change password\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ForgotPassword.ForgotPassword' | translate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n        <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      {{'ForgotPassword.HeaderLabel' | translate}}\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form class=\\\"form\\\"\\r\\n        name=\\\"forgotPasswordForm\\\"\\r\\n        #f=\\\"ngForm\\\"\\r\\n        novalidate\\r\\n        (ngSubmit)=\\\"formSubmit();\\\">\\r\\n\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"user-name\\\"> {{'ForgotPassword.UserName' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div [ngClass]=\\\"{'has-error' : userName.dirty && !userName.valid}\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"user-name\\\"\\r\\n                 name=\\\"userName\\\"\\r\\n                 #userName=\\\"ngModel\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"formModel.userName\\\" />\\r\\n        </div>\\r\\n        <span class=\\\"errorMessage\\\" *ngIf=\\\"userName.dirty && !userName.valid\\\"> {{'ForgotPassword.InvalidUserName' | translate}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"isLoading || !f.valid\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{'ForgotPassword.SendEmailBtn' | translate}}</button>\\r\\n        <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"cancel()\\\">{{'ForgotPassword.CancelBtn' | translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { UserForgotPassword } from '../../models/user-forgot-password.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Utilities } from '../../services/utilities';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  formModel: UserForgotPassword;\r\n  isLoading = false;\r\n  formResetToggle = true;\r\n\r\n  errors: string[];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private accountService: AccountService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.formModel = new UserForgotPassword();\r\n    this.formModel.userName = '';\r\n\r\n    this.errors = [];\r\n  }\r\n\r\n  formSubmit() {\r\n    this.isLoading = true;\r\n\r\n    this.accountService.forgotPassword(this.formModel.userName)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(),\r\n        err => this.handleSubmitError(err)\r\n      );\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n\r\n  private handleSubmitSuccess() {\r\n    this.isLoading = false;\r\n    this.router.navigate(['/forgot/password/confirmation']);\r\n  }\r\n\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    this.isLoading = false;\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ForgotUserNameConfirmation.Header' | translate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        {{'ContactUs.AMERICAS' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.France' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Spain' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Switzerland' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.Netherlands' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.UK' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.AllCountries' | translate}}\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        {{'ContactUs.APAC' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <a routerLink=\\\"/login\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'ForgotUserNameConfirmation.ReturnToLogin' | translate }}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'forgot-username-confirmation',\r\n  templateUrl: './forgot-username-confirmation.component.html',\r\n  styleUrls: ['./forgot-username-confirmation.component.css']\r\n})\r\nexport class ForgotUserNameConfirmationComponent implements OnInit {\r\n    id: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.id = id;\r\n\r\n    //this.accountService.confirmForgotUsername(id)\r\n    //show username\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'ForgotUsername.ForgotUsername' | translate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      {{'ForgotUsername.HeaderLabel' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form class=\\\"form\\\"\\r\\n        name=\\\"f\\\"\\r\\n        #f=\\\"ngForm\\\"\\r\\n        novalidate\\r\\n        (ngSubmit)=\\\"formSubmit();\\\">\\r\\n\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"account-number\\\"> {{'ForgotUsername.CustomerIdNumber' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleAcctNoPopover($event)\\\" (mouseleave)=\\\"toggleAcctNoPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAcctNoPopoverVisible\\\" id=\\\"AcctNoPopover\\\">{{'ForgotUsername.AccountPopOver' | translate}}</span>\\r\\n        </span>\\r\\n\\r\\n        <div [ngClass]=\\\"{'has-error' :f.submitted && !accountNumber?.valid}\\\">\\r\\n          <input type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"account-number\\\"\\r\\n                 name=\\\"accountNumber\\\"\\r\\n                 #accountNumber=\\\"ngModel\\\"\\r\\n                 required\\r\\n                 [(ngModel)]=\\\"formModel.accountNumber\\\" />\\r\\n        </div>\\r\\n        <span class=\\\"errorMessage\\\" *ngIf=\\\"f.submitted && !accountNumber?.valid\\\"> >{{'ForgotUsername.InvalidAccountNumber' | translate}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"email-address\\\">{{'ForgotUsername.EmailAddress' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleEmailPopover($event)\\\" (mouseleave)=\\\"toggleEmailPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isEmailPopoverVisible\\\" id=\\\"EmailPopover\\\">{{'ForgotUsername.EmailAddressPopOver' | translate}}</span>\\r\\n        </span>\\r\\n\\r\\n        <div [ngClass]=\\\"{'has-error' :f.submitted && !emailAddress?.valid}\\\">\\r\\n          <input type=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 id=\\\"emailAddress\\\"\\r\\n                 name=\\\"emailAddress\\\"\\r\\n                 #emailAddress=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"formModel.emailAddress\\\"\\r\\n                 required email minlength=\\\"5\\\" />\\r\\n\\r\\n        </div>\\r\\n        <span class=\\\"errorMessage\\\" [hidden]=\\\"!(emailAddress.dirty && (!emailAddress.valid || emailAddress.errors))\\\">{{ 'ForgotUsername.EmailAddressValidation' | translate }}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"isLoading || !f.valid\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'ForgotUsername.SendEmailBtn' | translate }}</button>\\r\\n        <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"cancel()\\\">{{ 'ForgotUsername.CancelBtn' | translate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { UserForgotUserName } from '../../models/user-forgot-username.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-username',\r\n  templateUrl: './forgot-username.component.html',\r\n  styleUrls: ['./forgot-username.component.css']\r\n})\r\nexport class ForgotUserNameComponent implements OnInit {\r\n\r\n  formModel: UserForgotUserName;\r\n  isEmailPopoverVisible: boolean;\r\n  isAcctNoPopoverVisible: boolean;\r\n  isLoading: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private routerService: Router,\r\n    private location: Location,\r\n    private accountService: AccountService)\r\n  {\r\n\r\n    this.formModel = new UserForgotUserName();\r\n    \r\n\r\n    this.formModel.accountNumber = '';\r\n    this.formModel.emailAddress = '';\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  formSubmit() {\r\n    this.isLoading = true;\r\n    console.log(this.formModel);\r\n\r\n    this.accountService.forgotUserName(this.formModel).subscribe(data => this.handleSubmitSuccess(),\r\n      err => this.handleSubmitError()\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.routerService.navigate(['/']);\r\n  }\r\n\r\n\r\n  private handleSubmitSuccess() {\r\n    this.isLoading = false;\r\n\r\n    this.routerService.navigate(['/forgot/username/confirmation']);\r\n\r\n  }\r\n\r\n  private handleSubmitError() {\r\n    this.isLoading = false;\r\n\r\n    this.routerService.navigate(['/forgot/username/confirmation']);\r\n\r\n  }\r\n\r\n  toggleAcctNoPopover(e) {\r\n    this.isAcctNoPopoverVisible = !this.isAcctNoPopoverVisible;\r\n    return this.isAcctNoPopoverVisible;\r\n  }\r\n\r\n  toggleEmailPopover(e) {\r\n    this.isEmailPopoverVisible = !this.isEmailPopoverVisible;\r\n    return this.isEmailPopoverVisible;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"min-height: 500px; margin-top: 35px;\\\">\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <span class=\\\"sa-heading-text\\\">\\r\\n        {{ 'InvoiceHistory.INVOICEHISTORY' | translate }}\\r\\n      </span>\\r\\n      <span style=\\\"font-size: x-large; margin-left: 20px;\\\">\\r\\n        <button class=\\\"btn-primary btn sa-btn-header-color\\\" routerLink=\\\"/secure\\\">{{ 'InvoiceHistory.OPENINVOICES' | translate }}</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <p>\\r\\n        {{ 'InvoiceHistory.InvoiceNote' | translate }}\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background-color: #D3D3D3;\\\">\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'InvoiceHistory.Invoice#' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'InvoiceHistory.Status' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'InvoiceHistory.InvoiceDate' | translate }}\\r\\n            </th>\\r\\n            <!--<th style=\\\"text-align: center;\\\">\\r\\n              Date Paid\\r\\n            </th>-->\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'InvoiceHistory.InvoiceAmount' | translate }}\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngFor=\\\"let invoice of invoices, index as i\\\">\\r\\n            <tr>\\r\\n              <td align=\\\"center\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\" (click)=\\\"getInvoicePdf(invoice.invoiceNumber)\\\" class=\\\"sa-hover-text\\\">\\r\\n                  {{invoice.invoiceNumber}}\\r\\n                </div>\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\">\\r\\n                  {{getInvoiceStatus(invoice) | translate}}\\r\\n                </div>\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                {{getFormatedDate(invoice.date)}}\\r\\n              </td>\\r\\n              <!--<td align=\\\"center\\\">\\r\\n                  {{getFormatedDate(invoice.dateDue)}}\\r\\n              </td>-->\\r\\n              <td align=\\\"right\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\">\\r\\n                  {{getInvoiceAmountF(invoice)}} {{invoice.currency}}\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { Invoice } from '../../models/invoice.model';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\nimport { isNumber } from 'util';\r\nimport { Event } from '@angular/router';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'invoices-closed',\r\n  templateUrl: './invoices-closed.component.html',\r\n  styleUrls: ['./invoices-closed.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class InvoiceClosedComponent implements OnInit {\r\n\r\n  isLoading: boolean;\r\n  invoices: Invoice[];\r\n  invoiceCurrency: string = 'USD';\r\n  \r\n  constructor(\r\n    public configurations: ConfigurationService,\r\n    private invoiceService: InvoiceService) {\r\n\r\n    this.getClosedInvoices();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n  getClosedInvoices() {\r\n\r\n    this.isLoading = true;\r\n\r\n    this.invoiceService.getClosedInvoices()\r\n      .subscribe(\r\n        request => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n            this.invoices = request;\r\n          }, 500);\r\n        },\r\n        error => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n  }\r\n\r\n  getInvoiceStatus(invoice: Invoice) {\r\n    if (invoice.status == \"\") { return 'InvoiceHistory..Cancelled'; }\r\n    if (invoice.status == \"Due\") { return 'InvoiceHistory.Open'; }\r\n    if (invoice.status == \"PaidInPart\") { return 'InvoiceHistory.PartiallyPaid'; }\r\n    if (invoice.status == \"PaidInFull\") { return 'InvoiceHistory.PaidInFull'; }\r\n    //return invoice.status;\r\n    return 'Processing';\r\n  }\r\n  \r\n  getInvoiceAmountF(invoice: Invoice) {\r\n    \r\n    if (isNaN(invoice.totalAmountPaid)) {\r\n      return (0).toFixed(2);\r\n    }\r\n    return invoice.totalAmountPaid.toFixed(2);\r\n  }\r\n\r\n  getFormatedDate(d: string) {\r\n    if (d == null) { return null; }\r\n    var dt = new Date(d);\r\n    var formattedDate = formatDate(dt, \"dd-MMM-yyyy\", \"en-US\");\r\n    // return (dt.getMonth() + 1) + '/' + dt.getDate() + '/' + dt.getFullYear()\r\n    return formattedDate;\r\n  }\r\n\r\n\r\n  getInvoicePdf(invoiceNumber: string) {\r\n    this.invoiceService.getInvoicePDF(invoiceNumber).subscribe(\r\n      response => {\r\n        setTimeout(() => {\r\n          window.open('/api/invoice/download?id=' + response.id, 'target=\"_blank\"');\r\n        }, 500);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"min-height: 500px; margin-top: 35px;\\\">\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        {{ 'AccountSummary.ACCOUNTSUMMARY' | translate }}\\r\\n        <span style=\\\"font-size: x-large; margin-left: 20px;\\\">\\r\\n          <button class=\\\"btn-primary btn sa-btn-header-color\\\" routerLink=\\\"/secure/invoices\\\"> {{ 'AccountSummary.INVOICEHISTORY' | translate }}</button>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      {{ 'AccountSummary.AccountSummaryDescription' | translate }}\\r\\n      <br /><br />\\r\\n    </div>\\r\\n    <div class=\\\"col-md-12 text-left\\\" style=\\\"color: red; font-style: italic;\\\">\\r\\n      {{ 'AccountSummary.AvailableInUSnCANNote' | translate }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div *ngIf=\\\"isBalanceDue\\\" style=\\\"font-style: italic; font-weight: bold; margin-bottom: 4px;\\\">\\r\\n        {{ 'AccountSummary.InvoicePayTitle' | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background-color: #D3D3D3;\\\">\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.Pay' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.Invoice#' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.Status' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.PaymentTerms' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.InvoiceDate' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.InvoiceDue' | translate }}\\r\\n            </th>\\r\\n\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'AccountSummary.BalanceDue' | translate }}\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngFor=\\\"let invoice of getInvoices(), index as i\\\">\\r\\n            <tr>\\r\\n              <td align=\\\"center\\\" valign=\\\"middle\\\">\\r\\n                <input type=\\\"radio\\\" *ngIf=\\\"canPayOnSite && !restrictPaymentTerms(invoice)\\\" style=\\\"width: 20px; height: 20px\\\" value=\\\"row_{{i}}\\\" name=\\\"paymentRow_{{i}}\\\" [checked]=\\\"getSelectedValue(i)\\\" (click)=\\\"setSelectedvalue(i, invoice.balance)\\\" />\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\" (click)=\\\"getInvoicePdf(invoice.invoiceNumber)\\\" class=\\\"sa-hover-text\\\">\\r\\n                  {{invoice.invoiceNumber}}\\r\\n                </div>\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\" *ngIf=\\\"!getInvoiceStatus(invoice)\\\">\\r\\n                  {{ 'AccountSummary.PASTDUE' | translate }}\\r\\n                </div>\\r\\n                <div style=\\\"margin-top: 5px;\\\" *ngIf=\\\"getInvoiceStatus(invoice)\\\">\\r\\n                  {{ 'AccountSummary.DUENOW' | translate }}\\r\\n                </div>\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                {{ invoice.paymentTerms}}\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                {{getFormatedDate(invoice.date)}}\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\">\\r\\n                  {{getFormatedDate(invoice.dateDue)}}\\r\\n                </div>\\r\\n              </td>\\r\\n              <td align=\\\"right\\\">\\r\\n                <div style=\\\"margin-top: 5px;\\\">\\r\\n                  {{getBalanceDueF(invoice)}} {{invoice.currency}}\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 text-right\\\">\\r\\n      <span style=\\\"font-size: x-large;\\\">\\r\\n        {{ 'AccountSummary.TotalBalanceDue' | translate }} {{ getTotalDueF() }} {{ getCustomerCurrency() }}\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isBalanceDue\\\">\\r\\n    <div class=\\\"col-md-12 text-right\\\">\\r\\n      <span style=\\\"font-size: x-large;\\\">\\r\\n        {{ 'AccountSummary.TotalPaymentAmount' | translate }} {{ getSelectedPaymentAmountF() }} {{ getCustomerCurrency() }}\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <div *ngIf=\\\"isBalanceDue\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 text-right\\\">\\r\\n        <!--<a routerLink=\\\"/secure/payment/paynow\\\" id=\\\"buttonPayNow\\\" title=\\\"{{ 'Register' | translate }}\\\" class=\\\"btn btn-lg btn-primary sa-btn-green-color sa-btn-x-large\\\">{{ 'PAY NOW' | translate }}</a>-->\\r\\n        <button *ngIf=\\\"canPayOnSite\\\" (click)=\\\"paynow();\\\"\\r\\n                class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">\\r\\n          {{ 'AccountSummary.PAYNOW' | translate }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 text-right\\\" style=\\\"color: red; font-style: italic;\\\">\\r\\n        {{ 'AccountSummary.PaymentNote' | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { Invoice } from '../../models/invoice.model';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\nimport { Account } from '../../models/account.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { isNumber } from 'util';\r\nimport { Router, Event } from '@angular/router';\r\nimport { PdfResponse } from \"../../models/pdf-response.model\";\r\nimport { AppTranslationService } from '../../services/app-translation.service';\r\nimport { formatDate } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  isLoading: boolean;\r\n\r\n  invoiceCurrency: string = 'USD';\r\n  totalBalanceDue: number = 0;\r\n  isBalanceDue: boolean = false;\r\n  canPayOnSite: boolean = true;\r\n\r\n  selectedPaymentAmount: number;\r\n\r\n  radioButtonSelected: number = 0;\r\n  radioButtonNotSelected: number = 1;\r\n  selectedRows: number[] = new Array();\r\n\r\n  constructor(private translationService: AppTranslationService,public configurations: ConfigurationService, private invoiceService: InvoiceService, private accountService: AccountService, private routerService: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  \r\n    this.getOpenInvoices();\r\n\r\n    this.getSiteAccount();\r\n    \r\n  }\r\n\r\n  getSiteAccount() {\r\n    this.accountService.getAccount().subscribe(account => this.saveSuccessHelper(account), error => this.saveFailedHelper(error));\r\n\r\n  }\r\n\r\n  saveSuccessHelper(res: Account) {\r\n    if (res.currency != 'USD' && res.currency != 'CAD')\r\n      this.canPayOnSite = false;\r\n\r\n\r\n  }\r\n\r\n  saveFailedHelper(res: Account) {\r\n    this.canPayOnSite = true;\r\n  }\r\n\r\n\r\n  setSelectedvalue(index: number, balance: number) {\r\n    if (this.selectedRows != null && this.selectedRows.length >= index) {\r\n      if (this.selectedRows[index] == this.radioButtonNotSelected) {\r\n        this.selectedRows[index] = this.radioButtonSelected;\r\n        this.selectedPaymentAmount += balance;\r\n        this.invoiceService.getUserInvoices()[index].userPaymentAmount = balance;\r\n        return;\r\n      }\r\n      this.selectedRows[index] = this.radioButtonNotSelected;\r\n      if (this.selectedPaymentAmount > 0) {\r\n        this.selectedPaymentAmount -= balance;\r\n      }\r\n      this.invoiceService.getUserInvoices()[index].userPaymentAmount = 0;\r\n    }\r\n  }\r\n\r\n  paynow() {\r\n\r\n    this.routerService.navigate(['secure/payment/paynow']);\r\n  }\r\n\r\n  getSelectedValue(index: number) {\r\n    if (this.selectedRows != null && this.selectedRows.length >= index) {\r\n      if (this.selectedRows[index] == this.radioButtonSelected) { return true; }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getOpenInvoices() {\r\n\r\n    this.selectedPaymentAmount = 0;\r\n\r\n\r\n    // keep invoice list until user logs off. Caching in the service\r\n    if (this.invoiceService.getUserInvoices() != null && this.invoiceService.getUserInvoices().length > 0) {\r\n\r\n      this.invoiceCurrency = this.invoiceService.getUserInvoices()[0].currency;\r\n\r\n      for (let i = 0; i < this.invoiceService.getUserInvoices().length; i++) {\r\n        if (isNumber(this.invoiceService.getUserInvoices()[i].totalAmountPaid) && isNumber(this.invoiceService.getUserInvoices()[i].totalAmount)) {\r\n          this.totalBalanceDue += (this.invoiceService.getUserInvoices()[i].balance);\r\n        }\r\n        if (this.invoiceService.getUserInvoices()[i].userPaymentAmount > 0) {\r\n          this.selectedPaymentAmount += this.invoiceService.getUserInvoices()[i].userPaymentAmount;\r\n\r\n          if (!this.restrictPaymentTerms(this.invoiceService.getUserInvoices()[i])) {\r\n            this.selectedRows.push(this.radioButtonSelected);\r\n          } else {\r\n            this.selectedRows.push(this.radioButtonNotSelected);\r\n          }\r\n\r\n        } else {\r\n          this.selectedRows.push(this.radioButtonNotSelected);\r\n        }\r\n\r\n        this.isBalanceDue = (this.totalBalanceDue > 0);\r\n\r\n      }\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    this.isLoading = true;\r\n\r\n    this.invoiceService.getOpenInvoices()\r\n      .subscribe(\r\n        request => {\r\n          setTimeout(() => {\r\n\r\n            this.isLoading = false;\r\n            this.invoiceService.setUserInvoices(request);\r\n\r\n            let tempSelectedPaymentAmount: number = 0.0;\r\n\r\n            if (this.invoiceService.getUserInvoices() != null && this.invoiceService.getUserInvoices().length > 0) {\r\n\r\n              this.invoiceCurrency = this.invoiceService.getUserInvoices()[0].currency;\r\n\r\n              for (let i = 0; i < this.invoiceService.getUserInvoices().length; i++) {\r\n                if (isNumber(this.invoiceService.getUserInvoices()[i].totalAmountPaid) && isNumber(this.invoiceService.getUserInvoices()[i].totalAmount)) {\r\n                  this.totalBalanceDue += (this.invoiceService.getUserInvoices()[i].balance);\r\n                 \r\n                  if (!this.restrictPaymentTerms(this.invoiceService.getUserInvoices()[i])) {\r\n                    tempSelectedPaymentAmount += (this.invoiceService.getUserInvoices()[i].balance);\r\n                    this.invoiceService.getUserInvoices()[i].userPaymentAmount = this.invoiceService.getUserInvoices()[i].balance;\r\n                  } else {\r\n                    this.invoiceService.getUserInvoices()[i].userPaymentAmount = 0;\r\n                  }\r\n\r\n                }\r\n                //this.selectedRows.push(this.radioButtonSelected);\r\n\r\n                if (!this.restrictPaymentTerms(this.invoiceService.getUserInvoices()[i])) {\r\n                  this.selectedRows.push(this.radioButtonSelected);\r\n                } else {\r\n                  this.selectedRows.push(this.radioButtonNotSelected);\r\n                }\r\n\r\n              }\r\n\r\n              this.isBalanceDue = (this.totalBalanceDue > 0);\r\n              this.selectedPaymentAmount = tempSelectedPaymentAmount;\r\n\r\n\r\n            }\r\n\r\n\r\n          }, 500);\r\n        },\r\n        error => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n  }\r\n\r\n\r\n  getInvoices() {\r\n    return this.invoiceService.getUserInvoices()\r\n  }\r\n\r\n  getCustomerCurrency() {\r\n    return this.invoiceCurrency;\r\n  }\r\n\r\n  getTotalDueF() {\r\n    return this.totalBalanceDue.toFixed(2);\r\n  }\r\n\r\n  getInvoicePdf(invoiceNumber: string) {\r\n    this.invoiceService.getInvoicePDF(invoiceNumber).subscribe(\r\n      response => {\r\n        setTimeout(() => {\r\n          window.open('/api/invoice/download?id=' + response.id, 'target=\"_blank\"','',false);\r\n        }, 500);\r\n      });\r\n  }\r\n\r\n\r\n  restrictPaymentTerms(invoice: Invoice) {\r\n    // Do not allow Customers with a Payment Term of: DUE1st  or NET30CC to pay invoices in Account Center\r\n    var paymentTerm = invoice.paymentTerms;\r\n    //Due on 1st ,Net 30 CC\r\n    if (paymentTerm === \"Due on 1st\" || paymentTerm === \"Net 30 CC\") {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getInvoiceStatus(invoice: Invoice) {\r\n    var dueDate = new Date(invoice.dateDue);\r\n    var currentDate = new Date(Date.now()) ;\r\n\r\n    \r\n    \r\n    if (dueDate < currentDate) {\r\n      return false; //\"PAST DUE\"\r\n    }\r\n    return true //\"DUE NOW\"\r\n\r\n    //if (invoice.status.indexOf('Overd') > 0) { return 'OVERDUE'; }\r\n    //if (invoice.status.indexOf('Due') >0) { return 'DUENOW'; }\r\n    //if (invoice.status == \"PaidInPart\") { return 'Partially Paid'; }\r\n    //if (invoice.status == \"PaidInFull\") { return 'Paid In Full'; }\r\n    //return invoice.status;\r\n  }\r\n\r\n  getInvoiceAmountF(invoice: Invoice) {\r\n    if (isNaN(invoice.totalAmount)) {\r\n      return (0).toFixed(2);\r\n    }\r\n    return invoice.totalAmount.toFixed(2);\r\n  }\r\n\r\n  getBalanceDueF(invoice: Invoice) {\r\n    if (isNaN(invoice.balance)) {\r\n      return (0).toFixed(2);\r\n    }\r\n    return (invoice.balance).toFixed(2);\r\n  }\r\n\r\n  getSelectedPaymentAmountF() {\r\n    if (isNaN(this.selectedPaymentAmount)) {\r\n      return (0).toFixed(2);\r\n    }\r\n    return (this.selectedPaymentAmount).toFixed(2);\r\n  }\r\n\r\n  getFormatedDate(d: string) {\r\n    if (d == null) { return null; }\r\n    var dt = new Date(d);\r\n    var formattedDate = formatDate(dt, \"dd-MMM-yyyy\", \"en-US\");\r\n    // return (dt.getMonth() + 1) + '/' + dt.getDate() + '/' + dt.getFullYear()\r\n    return formattedDate;\r\n  }\r\n\r\n}\r\n","module.exports = \".boxshadow {\\r\\n    position: relative;\\r\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\r\\n    padding: 10px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n\\r\\n    .boxshadow::after {\\r\\n        content: '';\\r\\n        position: absolute;\\r\\n        z-index: -1; /* hide shadow behind image */\\r\\n        box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3);\\r\\n        width: 70%;\\r\\n        left: 15%; /* one half of the remaining 30% */\\r\\n        height: 100px;\\r\\n        bottom: 0;\\r\\n    }\\r\\n\\r\\n\\r\\n    .cardshadow {\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n\\r\\n    .separator-hr {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n\\r\\n    .last-control-group {\\r\\n    margin-bottom: -25px;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div>\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <span class=\\\"sa-heading-text\\\">{{ 'Login.CustomerLogin' | translate }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n          <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div style=\\\"margin: 0px 20px 20px 20px;\\\">\\r\\n            <form *ngIf=\\\"formResetToggle\\\" class=\\\"form-horizontal login\\\" #f=\\\"ngForm\\\" name=\\\"f\\\" id=\\\"f\\\" (ngSubmit)=\\\"login()\\\">\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div>\\r\\n                  <label class=\\\"control-label\\\" for=\\\"userName\\\">{{ 'Login.UserName' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n                </div>\\r\\n                <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : isError || userName.dirty && (!userName.valid || userName.errors) }\\\">\\r\\n                  <input type=\\\"text\\\" id=\\\"userName\\\" name=\\\"userName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" #userName=\\\"ngModel\\\" required minlength=\\\"3\\\" />\\r\\n                  <span class=\\\"errorMessage\\\" *ngIf=\\\"userName.dirty && (!userName.valid || userName.errors)\\\">{{ 'Login.UserNameRequired' | translate }}</span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <div>\\r\\n                  <label class=\\\"control-label\\\" for=\\\"password\\\">{{ 'Login.Password' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n                </div>\\r\\n                <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : isError ||userName.dirty && (!password.valid || password.errors) }\\\">\\r\\n                  <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required minlength=\\\"8\\\" />\\r\\n                  <span class=\\\"errorMessage\\\" *ngIf=\\\"password.dirty && (!password.valid || password.errors)\\\">{{ 'Login.PasswordRequired' | translate }}</span>\\r\\n                </div>\\r\\n                <div class=\\\"text-right\\\">\\r\\n                  <a routerLink=\\\"/forgot/username\\\" title=\\\"{{ 'Login.ForgotUserName' | translate }}\\\" class=\\\"btn btn-link sa-link\\\">{{ 'Login.ForgotUserName' | translate }}</a>\\r\\n                  <span class=\\\"sa-pipe-divider\\\">|</span>\\r\\n                  <a routerLink=\\\"/forgot/password\\\" title=\\\"{{ 'Login.ForgotPassword' | translate }}\\\" class=\\\"btn btn-link sa-link\\\">{{ 'Login.ForgotPassword' | translate }}</a>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!--<div class=\\\"form-group\\\">\\r\\n                <div style=\\\"color:#FC4242;font-style:italic;font-size:12px;font-weight:600;\\\">\\r\\n                  <p>\\\"By failing to prepare, you are preparing to fail.\\\" - Benjamin Franklin</p>\\r\\n                  <p>We want to make sure we’re prepared to serve you, so the ScentAir Account Center will be down for scheduled maintenance beginning Wednesday, February 20 at 8 PM EST.  Maintenance will be completed by Thursday, February 21 at 3 AM EST or sooner.</p>\\r\\n                </div>\\r\\n              </div>-->\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary sa-btn-header-color\\\" [disabled]=\\\"(!f.valid && !isError) || isLoading\\\">\\r\\n                    <i *ngIf=\\\"isLoading\\\" class='fa fa-circle-o-notch fa-spin'></i> {{ isLoading ? ('Login.SigningIn'  | translate) : ('Login.SignIn' | translate) }}\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div>\\r\\n                  <a routerLink=\\\"/register\\\" title=\\\"{{ 'Login.RegisterNow'  | translate }}\\\" class=\\\"btn btn-lg btn-block btn-primary\\\">{{ 'Login.RegisterNow'  | translate }}</a>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h2 class=\\\"sa-blue-text sa-no-margin\\\">\\r\\n            {{ 'Login.QuickandEasyAccess'  | translate }}\\r\\n          </h2>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h3></h3>\\r\\n          <p>\\r\\n            {{ 'Login.QuickandEasyAccessDescription'  | translate }}\\r\\n          </p>\\r\\n          <p>\\r\\n            <b>{{ 'Login.WhyRegister'  | translate }}</b> {{ 'Login.RegisterDescription'  | translate }}\\r\\n          </p>\\r\\n\\r\\n          <ul>\\r\\n            <li>\\r\\n              {{ 'Login.RegisterBulletPoint1'  | translate }}\\r\\n            </li>\\r\\n            <li>\\r\\n              {{ 'Login.RegisterBulletPoint2'  | translate }}\\r\\n            </li>\\r\\n            <li>\\r\\n              {{ 'Login.RegisterBulletPoint3'  | translate }}\\r\\n            </li>\\r\\n            <li *ngIf=\\\"!IsSelectedLanguageFrench()\\\">\\r\\n              {{ 'Login.RegisterBulletPoint4'  | translate }}\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n          <p style=\\\"font-size:small;color:red\\\">\\r\\n            {{ 'Login.RegisterNote'  | translate }}\\r\\n          </p>\\r\\n\\r\\n          <p>\\r\\n            {{ 'Login.Quetions'  | translate }}&nbsp; <a style=\\\"font-size:large;\\\" routerLink=\\\"/contactus\\\" title=\\\"{{ 'Login.ContactUs'  | translate }}\\\" class=\\\"btn btn-link sa-link\\\">{{ 'Login.ContactUs'  | translate }}</a>\\r\\n          </p>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <img src=\\\"/assets/images/credit-card.png\\\" style=\\\"width: 100%; border-radius: 8px;\\\" />\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy, EventEmitter, Input, Output, NgModuleFactoryLoader } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\n\r\nimport { UserLogin } from '../../models/user-login.model';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { modelState } from '../../models/ctp.interface';\r\nimport { element } from 'protractor';\r\nimport { Account } from '../../models/account.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  model: UserLogin;\r\n  @Input() data: UserLogin;\r\n  @Output() submit = new EventEmitter();\r\n  loginSubscription: Subscription;\r\n  loginStatusSubscription: any;\r\n  errors: string[];\r\n\r\n\r\n  isLoading = false;\r\n  isEdit = false;\r\n  isError = false;\r\n  @Input() isModal = false;\r\n\r\n  formResetToggle = true;\r\n  modalClosedCallback: () => void;\r\n\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n    private router: Router,\r\n    private configurationService: ConfigurationService,\r\n    private invoiceService: InvoiceService,\r\n    private accountService: AccountService) {\r\n\r\n    this.invoiceService.setUserInvoices(null);\r\n\r\n    this.errors = [];\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.isEdit = false;\r\n    this.setForm();\r\n\r\n    if (this.getShouldRedirect()) {\r\n      this.authService.redirectLoginUser();\r\n    } else {\r\n      this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\r\n        if (this.getShouldRedirect()) {\r\n          this.authService.redirectLoginUser();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.loginStatusSubscription) {\r\n      this.loginStatusSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private setForm() {\r\n    if (!this.isEdit) {\r\n      this.model = new UserLogin('', '', this.authService.rememberMe);\r\n    } else {\r\n      this.model = new UserLogin(\r\n        this.data.userName,\r\n        this.data.password,\r\n        this.data.rememberMe || this.authService.rememberMe\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  reset() {\r\n    this.formResetToggle = false;\r\n    this.errors = [];\r\n\r\n\r\n    setTimeout(() => {\r\n      this.formResetToggle = true;\r\n    });\r\n  }\r\n  getShouldRedirect() {\r\n    return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\r\n  }\r\n  closeModal() {\r\n    if (this.modalClosedCallback) {\r\n      this.modalClosedCallback();\r\n    }\r\n  }\r\n\r\n\r\n  private handleSubmitSuccess(res) {\r\n    const eventObj = {\r\n      isEdit: this.isEdit,\r\n      data: res\r\n    };\r\n\r\n\r\n    this.errors = [];\r\n    this.isError = false;\r\n    this.isLoading = false;\r\n    this.submit.emit(eventObj);\r\n\r\n    //setTimeout(() => {\r\n    //  this.accountService.getAccount().subscribe(\r\n    //    account => {\r\n    //      this.accountService.setCurrentAccount(account);\r\n    //      this.routerService.navigateByUrl('/Landing');\r\n    //    });\r\n    //}, 500);\r\n  }\r\n  private handleSubmitError(err) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    const eventObj = {\r\n      isEdit: this.isEdit,\r\n      error: this.errors\r\n    };\r\n\r\n\r\n    this.isLoading = false;\r\n    this.isError = true;\r\n    this.submit.emit(eventObj);\r\n  }\r\n\r\n\r\n  login() {\r\n    this.isLoading = true;\r\n    this.errors = [];\r\n\r\n    //if (!this.isEdit) {\r\n    this.loginSubscription = this.authService.login(this.model.userName, this.model.password, this.model.rememberMe)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        err => this.handleSubmitError(err)\r\n      );\r\n  }\r\n\r\n  IsSelectedLanguageFrench() {\r\n    if (this.configurationService.language == \"fr\") {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \".vertical-center-flex {\\r\\n    min-height: 60vh;\\r\\n}\\r\\n\\r\\n.icon-container {\\r\\n    font-size: 5em;\\r\\n}\\r\\n\\r\\n.error-description {\\r\\n    font-size: 1.5em;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <header class=\\\"pageHeader\\\">\\r\\n        <h3><i class=\\\"fa fa-exclamation-circle fa-lg page-caption\\\" aria-hidden=\\\"true\\\"></i> {{'pageHeader.NotFound' | translate}}</h3>\\r\\n    </header>\\r\\n\\r\\n    <div [@fadeInOut] class=\\\"vertical-center-flex\\\">\\r\\n        <div class=\\\"center-block\\\">\\r\\n            <div class=\\\"icon-container\\\"><i class='fa fa-exclamation-circle'></i> {{'notFound.404' | translate}}</div>\\r\\n            <div class=\\\"text-muted error-description\\\">{{'notFound.pageNotFound' | translate}}</div>\\r\\n            <div><a class=\\\"btn btn-primary\\\" routerLink=\\\"/\\\"><i class='fa fa-home'></i> {{'notFound.backToHome' | translate}}</a></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\n\r\n@Component({\r\n    selector: 'not-found',\r\n    templateUrl: './not-found.component.html',\r\n    styleUrls: ['./not-found.component.css'],\r\n    animations: [fadeInOut]\r\n})\r\nexport class NotFoundComponent {\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin-loggedin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{'PaymentAutoPay.ManageAutoPay' | translate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"color: red; font-style: italic;\\\">\\r\\n      {{'PaymentAutoPay.AccountOptionDesc' | translate}}\\r\\n    </div>\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h4>\\r\\n          {{'PaymentAutoPay.AutoPayDesc' | translate}}\\r\\n        </h4>\\r\\n        <br />\\r\\n        <h4>\\r\\n          {{'PaymentAutoPay.PaymentTermsNote' | translate}}\\r\\n        </h4>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n  <br />\\r\\n\\r\\n  <ng-container *ngFor=\\\"let paymentMethod of paymentMethods, index as i\\\">\\r\\n    <div *ngIf=\\\"i > 0\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"sa-blue-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-9\\\" style=\\\"font-size: large;\\\">\\r\\n        <a routerLink=\\\"/secure/payment/{{paymentMethod.id}}\\\" class=\\\"sa-pipe-divider\\\">\\r\\n          {{ paymentMethod.name }} <span style=\\\"font-style: italic\\\">({{paymentMethod.paymentType}} {{'PaymentAutoPay.EndingWith' | translate}} {{paymentMethod.accountNumber.substring(paymentMethod.accountNumber.length - 4, paymentMethod.accountNumber.length)}})</span>\\r\\n        </a>\\r\\n        <span *ngIf=\\\"paymentMethod.currentAutoPayMethod && !isEnrolling\\\" class=\\\"sa-auto-pay-text\\\">\\r\\n          {{ \\\"Current AutoPay Payment Method\\\" | translate }}\\r\\n          <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"togglePopover($event)\\\" (mouseleave)=\\\"togglePopover($event)\\\">\\r\\n            <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAutoEnrollPopoverVisible\\\" id=\\\"autpPayPopover\\\">{{'PaymentAutoPay.PaymentMethodChargesDesc' | translate}}</span>\\r\\n          </span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <div class=\\\"sa-inline-field\\\"\\r\\n             [ngClass]=\\\"{'has-error' : !isAutoPayEnabled }\\\"\\r\\n             *ngIf=\\\"!paymentMethod.currentAutoPayMethod || isEnrolling\\\">\\r\\n          <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-pipe-divider\\\">{{'PaymentAutoPay.AUTOPAY' | translate}}</label>\\r\\n          <input type=\\\"radio\\\" class=\\\"form-control sa-radio-button\\\" style=\\\"width: 20px; height: 20px\\\"\\r\\n                 (click)=\\\"changeAutoPay(i);\\\" name=\\\"paymentRowRadio\\\"\\r\\n                 [disabled]=\\\"(!isAutoPayEnabled || isUnenrolling)\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback glyphicon-remove\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"!isAutoPayEnabled\\\"></span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n\\r\\n  <br />\\r\\n  <br />\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isTermsVisible\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"text-align:center;\\\"><span style=\\\"font-size:large;font-weight:bold;\\\">{{'PaymentAutoPay.ScentAirTermsConditionDesc' | translate}}</span></div>\\r\\n    <br />\\r\\n    <span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.BYCHECKING' | translate}}</span>{{'PaymentAutoPay.AuthorizedAgent' | translate}}<span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.certifies' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc1' | translate}} <span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.AuthorizedCertifiesDesc2' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc3' | translate}} <span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.Authorization' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc4' | translate}}\\r\\n    <br />\\r\\n    <span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.certifies' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc6' | translate}}  <span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.AuthorizedCertifiesDesc7' | translate}}</span> {{'PaymentAutoPay.AuthorizedCertifiesDesc8' | translate}}\\r\\n    <br /><br /> <div class=\\\"row\\\" style=\\\"text-align:center;\\\"> <span style=\\\"text-align:center;font-size:large;font-style:italic;\\\">{{'PaymentAutoPay.AuthorizedCertifiesDesc9' | translate}}</span><br /><br /></div>\\r\\n    <span style=\\\"font-weight:bold;color:red;\\\">{{'PaymentAutoPay.GeneralTerms' | translate}}</span> {{'PaymentAutoPay.AuthorizedCertifiesDesc10' | translate}}<span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.InvoiceAmounts' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc11' | translate}}<span style=\\\"font-weight:bold;\\\">{{'PaymentAutoPay.EnrollmentScreens' | translate}}</span>{{'PaymentAutoPay.AuthorizedCertifiesDesc12' | translate}}<a href=\\\"mailto:customercare@scentair.com\\\">{{'PaymentAutoPay.CustomerCare' | translate}}</a>{{'PaymentAutoPay.AuthorizedCertifiesDesc13' | translate}}\\r\\n    <br /><br />\\r\\n    {{'PaymentAutoPay.SubscriberFurtherAgrees' | translate}}\\r\\n    <br /><br />\\r\\n    <span style=\\\"font-weight:bold;color:red;\\\">{{'PaymentAutoPay.ACHAuthorization' | translate}} </span>{{'PaymentAutoPay.ACHAuthorizationDesc1' | translate}}\\r\\n    <br /><br /><span style=\\\"font-weight:bold;color:red;\\\">{{'PaymentAutoPay.CreditCardAuthorization' | translate}} </span> {{'PaymentAutoPay.PaymentTypeDesc' | translate}}\\r\\n    {{'PaymentAutoPay.PaymentTypeDesc1' | translate}}\\r\\n\\r\\n    <br /><br /><span style=\\\"font-weight:bold;color:red;\\\"> {{'PaymentAutoPay.Privacy' | translate}}</span>{{'PaymentAutoPay.PrivacySubscriberDesc' | translate}}\\r\\n    <br />\\r\\n\\r\\n    <a href=\\\"../../../assets/images/TermsandConditions.png\\\" target=\\\"_blank\\\">{{'PaymentAutoPay.PrintTermsConditions' | translate}}</a>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"canPayOnSite\\\">\\r\\n      <a routerLink=\\\"/secure/payment\\\" *ngIf=\\\"!isTermsVisible\\\" fragment=\\\"auto\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">{{'PaymentAutoPay.ADDNEWPAYMENTMETHOD' | translate}}</a>\\r\\n      <button (click)=\\\"unenrollAutoPay();\\\" *ngIf=\\\"!isTermsVisible\\\" [disabled]=\\\"(!isAutoPayEnabled || isUnenrolling || !isAutoPayActive)\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"margin-left: 10px\\\">{{'PaymentAutoPay.UNENROLLINAUTOPAY' | translate}}</button>\\r\\n      <button (click)=\\\"saveAutoPay();\\\" *ngIf=\\\"!isTermsVisible\\\" [disabled]=\\\"(!isAutoPayEnabled || isUnenrolling || !isAutoPayActive || !isEnrolling)\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"float: right;\\\">{{'PaymentAutoPay.SAVE' | translate}}</button>\\r\\n\\r\\n      <button (click)=\\\"saveAutoPay();\\\" *ngIf=\\\"isTermsVisible\\\" [disabled]=\\\"(isLoading)\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"float: right;\\\"> {{'PaymentAutoPay.ACCEPT' | translate}} &amp; {{'PaymentAutoPay.SUBMIT' | translate}}</button>&nbsp;&nbsp;\\r\\n      <button (click)=\\\"cancel()\\\" *ngIf=\\\"isTermsVisible\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"float: right;\\\">{{'PaymentAutoPay.CANCEL' | translate}}</button>&nbsp;&nbsp;&nbsp;\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div>\\r\\n    {{'PaymentAutoPay.ChargesDesc' | translate}}\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!isAutoPayEnabled\\\">\\r\\n    <div class=\\\"col-md-12 errorMessage\\\">\\r\\n      {{'PaymentAutoPay.OpenInvoicesDesc' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"(isUnenrolling)\\\">\\r\\n    <div style=\\\"color: red;font-size:large;\\\" class=\\\"col-md-12 errorMessage\\\">\\r\\n      {{'PaymentAutoPay.AUTOPAYUnenrollmentRequestDesc' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { Location } from '@angular/common';\r\nimport { Account } from '../../models/account.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { PaymentMethod } from '../../models/payment-method.model';\r\nimport { PaymentService } from '../../services/payment.service';\r\n//import { transformAll } from '@angular/compiler/src/render3/r3_ast';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { InvoiceService } from '../../services/invoice.service';\r\n\r\n@Component({\r\n  selector: 'payment-autopay',\r\n  templateUrl: './payment-autopay.component.html',\r\n  styleUrls: ['./payment-autopay.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class PaymentAutopayComponent implements OnInit {\r\n\r\n  isAutoEnrollPopoverVisible: boolean;\r\n  isLoading: boolean;\r\n  errors: string[] = [];\r\n  isTermsReviewed: boolean = false;\r\n  isTermsVisible: boolean = false;\r\n  isUnenrolling: boolean = false;\r\n  canPayOnSite: boolean = true;\r\n  isAutoPayActive: boolean = false;\r\n  isEnrolling: boolean = false;\r\n\r\n  paymentMethods: PaymentMethod[];\r\n  currentAutoPaymentMethod: PaymentMethod;\r\n  isAutoPayEnabled: boolean;\r\n\r\n  constructor(\r\n    public configurations: ConfigurationService,\r\n    private location: Location,\r\n    private paymentService: PaymentService,\r\n    private invoiceService: InvoiceService,\r\n    private accountService: AccountService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPaymentMethods();\r\n\r\n    this.invoiceService.getInvoicesToPay();\r\n    this.isAutoPayEnabled = this.invoiceService.getOpenInvoicesTotal() <= 0;\r\n\r\n    this.getSiteAccount();\r\n  }\r\n  getSiteAccount() {\r\n    this.accountService.getAccount().subscribe(account => this.saveSuccessHelper(account), error => this.saveFailedHelper(error));\r\n\r\n  }\r\n\r\n  saveSuccessHelper(res: Account) {\r\n    if (res.currency != 'USD' && res.currency != 'CAD')\r\n      this.canPayOnSite = false;\r\n  }\r\n\r\n  saveFailedHelper(res: Account) {\r\n    this.canPayOnSite = true;\r\n  }\r\n\r\n\r\n\r\n  getPaymentMethods() {\r\n\r\n    this.isLoading = true;\r\n\r\n    this.paymentService.getPaymentMethods()\r\n      .subscribe(\r\n        data => this.handleGetMethodsSuccess(data),\r\n        err => this.handleSubmitError(err));\r\n  }\r\n\r\n\r\n  changeAutoPay(index: number) {\r\n    if (!this.isAutoPayEnabled)\r\n      return;\r\n\r\n    this.paymentMethods.forEach((pm, i) => {\r\n      pm.currentAutoPayMethod = i == index;\r\n    });\r\n\r\n    this.isAutoPayActive = true;\r\n    this.isEnrolling = true;\r\n  }\r\n\r\n\r\n  private handleSubmitSuccess(res: PaymentMethod) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    this.getPaymentMethods();\r\n\r\n    alert(\"You have successfully enrolled in Autopay\");\r\n    \r\n    //this.location.back();\r\n  }\r\n\r\n  private handleAutopaySubmitSuccess(res: PaymentMethod) {\r\n\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    this.getPaymentMethods();\r\n\r\n    alert(\"AUTOPAY unenrollment requested - Please allow up to 72 hours to for AUTOPAY unenrollment to take affect. \");\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  private handleGetMethodsSuccess(res: PaymentMethod[]) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n     \r\n    this.paymentMethods = res;\r\n    this.currentAutoPaymentMethod = res.find(pm => pm.currentAutoPayMethod);\r\n    \r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    if (this.currentAutoPaymentMethod != null) {\r\n      if (this.currentAutoPaymentMethod.isDefault) {\r\n        this.isUnenrolling = true;\r\n      }\r\n      this.isAutoPayActive = true;\r\n      this.isEnrolling = false;\r\n    }\r\n\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    this.isLoading = false;\r\n\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n  }\r\n\r\n\r\n  saveAutoPay() {\r\n    if (!this.isAutoPayEnabled)\r\n      return;\r\n\r\n    if (!this.isTermsReviewed) {\r\n      this.isTermsReviewed = true;\r\n      this.isTermsVisible = true;\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n\r\n\r\n    var method = this.paymentMethods.find(pm => pm.currentAutoPayMethod);\r\n    if (method == null) {\r\n      method = this.currentAutoPaymentMethod;\r\n      method.currentAutoPayMethod = false;\r\n    }\r\n\r\n\r\n    this.paymentService.savePaymentMethod(method).subscribe(\r\n      data => this.handleSubmitSuccess(data),\r\n      error => this.handleSubmitError(error));\r\n  }\r\n\r\n\r\n  togglePopover(e) {\r\n    this.isAutoEnrollPopoverVisible = !this.isAutoEnrollPopoverVisible;\r\n    return this.isAutoEnrollPopoverVisible;\r\n  }\r\n\r\n  unenrollAutoPay(): void {\r\n    //if (!this.isAutoPayEnabled)\r\n    //  return;\r\n\r\n    //this.paymentMethods.forEach(pm => pm.currentAutoPayMethod = false);\r\n    this.currentAutoPaymentMethod.isDefault = true;\r\n\r\n    this.paymentService.savePaymentMethod(this.currentAutoPaymentMethod).subscribe(\r\n      data => this.handleAutopaySubmitSuccess(data),\r\n      error => this.handleSubmitError(error));\r\n\r\n  }\r\n\r\n  cancel() {\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    this.getPaymentMethods();\r\n\r\n    this.invoiceService.getInvoicesToPay();\r\n    this.isAutoPayEnabled = this.invoiceService.getOpenInvoicesTotal() <= 0;\r\n\r\n    this.getSiteAccount();\r\n  }\r\n\r\n  refresh(): void {\r\n    this.getPaymentMethods();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin-loggedin\\\">\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        {{'PaymentProfile.PAYMENTPROFILE' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n      <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <form class=\\\"form-horizontal\\\"\\r\\n        name=\\\"editpaymenform\\\"\\r\\n        #f=\\\"ngForm\\\"\\r\\n        novalidate>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"paymentName\\\">  {{'PaymentProfile.FriendlyName' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': paymentName.dirty && paymentName.valid, 'has-error' : paymentName.dirty && !paymentName.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"paymentName\\\"\\r\\n                 name=\\\"paymentName\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #paymentName=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.name\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': paymentName.valid, 'glyphicon-remove' : !paymentName.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"paymentName.dirty && !paymentName.valid\\\">{{'PaymentProfile.InvalidProfilePaymentName' | translate}} {{paymentName?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"paymentType\\\">{{'PaymentProfile.PaymentType' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': paymentType.dirty && paymentType.valid, 'has-error' : paymentType.dirty && !paymentType.valid}\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div style=\\\"margin-top: 6px;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\" style=\\\"width: 100px; float: left;\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"paymentType\\\"\\r\\n                   name=\\\"paymentType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Credit\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #paymentType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.paymentType\\\"\\r\\n                   (click)=\\\"changePaymentType('Credit')\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.Credit' | translate}}</label>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"sa-inline-field\\\" style=\\\"width: 100px; float: left;\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"paymentType\\\"\\r\\n                   name=\\\"paymentType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"ECP\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #paymentType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.paymentType\\\"\\r\\n                   (click)=\\\"changePaymentType('ECP')\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.ACHandECP' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n              [ngClass]=\\\"{'glyphicon-ok ': paymentType.valid, 'glyphicon-remove' : !paymentType.valid}\\\"\\r\\n              *ngIf=\\\"f.submitted\\\"\\r\\n              aria-hidden=\\\"true\\\"></span>\\r\\n        <span class=\\\"errorMessage\\\" *ngIf=\\\"paymentType.dirty && !paymentType.valid\\\">{{'PaymentProfile.InvalidPin' | translate}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"achAccountType\\\">{{'PaymentProfile.AccountType' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': achAccountType.dirty && achAccountType.valid, 'has-error' : achAccountType.dirty && !achAccountType.valid}\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div style=\\\"margin-top: 6px; width: 100px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"achAccountType\\\"\\r\\n                   name=\\\"achAccountType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"BusinessChecking\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #achAccountType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.achAccountType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.BusinessChecking' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 100px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"achAccountType\\\"\\r\\n                   name=\\\"achAccountType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Checking\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #achAccountType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.achAccountType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.PersonalChecking' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"achAccountType\\\"\\r\\n                   name=\\\"achAccountType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Savings\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #achAccountType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.achAccountType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.Savings' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"achAccountNumber\\\">{{'PaymentProfile.AccountNumber' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleAchAcctNoPopover($event)\\\" (mouseleave)=\\\"toggleAchAcctNoPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAchAcctNoPopoverVisible\\\" id=\\\"AchAcctNoPopover\\\"><img src=\\\"../../../assets/images/AcctNoImg.png\\\" /></span>\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': achAccountNumber.dirty && achAccountNumber.valid, 'has-error' : achAccountNumber.dirty && !achAccountNumber.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"achAccountNumber\\\"\\r\\n                 name=\\\"achAccountNumber\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #achAccountNumber=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.achAccountNumber\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': achAccountNumber.valid, 'glyphicon-remove' : !achAccountNumber.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"achAccountNumber.dirty && !achAccountNumber.valid\\\">{{'PaymentProfile.InvalidAccountNumber' | translate}} {{achAccountNumber?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"achRoutingNumber\\\">{{'PaymentProfile.RoutingNumber' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleRoutingNoPopover($event)\\\" (mouseleave)=\\\"toggleRoutingNoPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isRoutingNoPopoverVisible\\\" id=\\\"RoutingNoPopover\\\"><img src=\\\"../../../assets/images/RoutingImg.png\\\" /></span>\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': achRoutingNumber.dirty && achRoutingNumber.valid, 'has-error' : achRoutingNumber.dirty && !achRoutingNumber.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"achRoutingNumber\\\"\\r\\n                 name=\\\"achRoutingNumber\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #achRoutingNumber=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.achRoutingNumber\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': achRoutingNumber.valid, 'glyphicon-remove' : !achRoutingNumber.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"achRoutingNumber.dirty && !achRoutingNumber.valid\\\">{{'PaymentProfile.InvalidRoutingNumber' | translate}} {{achRoutingNumber?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"bank\\\">{{'PaymentProfile.BankName' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': bank.dirty && bank.valid, 'has-error' : bank.dirty && !bank.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"bank\\\"\\r\\n                 name=\\\"bank\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #bank=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.bank\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': bank.valid, 'glyphicon-remove' : !bank.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"bank.dirty && !bank.valid\\\">{{'PaymentProfile.InvalidBankName' | translate}} {{bank?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"cardType\\\">{{'PaymentProfile.CardType' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': cardType.valid, 'has-error' : !cardType.valid}\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n        <div style=\\\"margin-top: 6px; width: 100px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Visa\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.Visa' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"MasterCard\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.MC' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Discover\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.Discover' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"AmericanExpress\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.AMEX' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"JCB\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.JCB' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\\"margin-top: 6px; width: 150px; float: left;\\\">\\r\\n          <div class=\\\"sa-inline-field\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   id=\\\"cardType\\\"\\r\\n                   name=\\\"cardType\\\"\\r\\n                   type=\\\"radio\\\"\\r\\n                   value=\\\"Diners\\\"\\r\\n                   style=\\\"width: 20px; height: 20px;\\\"\\r\\n                   #cardType=\\\"ngModel\\\"\\r\\n                   [(ngModel)]=\\\"paymentProfile.cardType\\\"\\r\\n                   [disabled]=\\\"isEdit\\\"\\r\\n                   required />\\r\\n            <label style=\\\"margin-left: 8px; font-weight: normal;\\\" class=\\\"sa-gray-text\\\">{{'PaymentProfile.DinersClub' | translate}}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"cardNumber\\\">{{'PaymentProfile.CreditCardNumber' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': cardNumber.dirty && cardNumber.valid, 'has-error' : cardNumber.dirty && !cardNumber.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"cardNumber\\\"\\r\\n                 name=\\\"cardNumber\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #cardNumber=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.cardNumber\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required\\r\\n                 pattern=\\\"((\\\\d{4}[\\\\s\\\\-]?){3}\\\\d{4})|(\\\\d{4}[\\\\s\\\\-]?\\\\d{6}[\\\\s\\\\-]?\\\\d{5})\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': cardNumber.valid, 'glyphicon-remove' : !cardNumber.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"cardNumber.dirty && !cardNumber.valid\\\">{{'PaymentProfile.InvalidCreditCardNumber' | translate}} {{cardNumber?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"cardExpirationMonth\\\">{{'PaymentProfile.ExpirationDate' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': (cardExpirationMonth.dirty && cardExpirationYear.dirty && (cardExpirationYear.value > thisYear || (cardExpirationYear.value == thisYear && cardExpirationMonth.value >= thisMonth))), 'has-error' : (cardExpirationMonth.dirty && cardExpirationMonth.value == 0) ||  (cardExpirationYear.dirty && cardExpirationYear.value == 0) || (cardExpirationMonth.dirty && cardExpirationYear.dirty && !(cardExpirationYear.value > thisYear || (cardExpirationYear.value == thisYear && cardExpirationMonth.value >= thisMonth)))}\\\">\\r\\n\\r\\n          <select class=\\\"form-control bootstrap-select\\\"\\r\\n                  style=\\\"width: 50px; float: left; margin-top: 3px; margin-bottom: 3px; padding-top:10px; padding-bottom:10px\\\"\\r\\n                  id=\\\"cardExpirationMonth\\\"\\r\\n                  name=\\\"cardExpirationMonth\\\"\\r\\n                  required\\r\\n                  #cardExpirationMonth=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"paymentProfile.cardExpirationMonth\\\">\\r\\n            <option value=\\\"0\\\"></option>\\r\\n            <option value=\\\"1\\\">Jan</option>\\r\\n            <option value=\\\"2\\\">Feb</option>\\r\\n            <option value=\\\"3\\\">Mar</option>\\r\\n            <option value=\\\"4\\\">Apr</option>\\r\\n            <option value=\\\"5\\\">May</option>\\r\\n            <option value=\\\"6\\\">Jun</option>\\r\\n            <option value=\\\"7\\\">Jul</option>\\r\\n            <option value=\\\"8\\\">Aug</option>\\r\\n            <option value=\\\"9\\\">Sep</option>\\r\\n            <option value=\\\"10\\\">Oct</option>\\r\\n            <option value=\\\"11\\\">Nov</option>\\r\\n            <option value=\\\"12\\\">Dec</option>\\r\\n          </select>\\r\\n\\r\\n          <span style=\\\"width: 10px;\\\">&nbsp;</span>\\r\\n\\r\\n          <select class=\\\"form-control bootstrap-select\\\"\\r\\n                  style=\\\"width: 75px; margin-top: 3px; margin-bottom: 3px; padding-top:10px; padding-bottom:10px\\\"\\r\\n                  id=\\\"cardExpirationYear\\\"\\r\\n                  name=\\\"cardExpirationYear\\\"\\r\\n                  required\\r\\n                  #cardExpirationYear=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"paymentProfile.cardExpirationYear\\\">\\r\\n            <option value=\\\"0\\\"></option>\\r\\n            <option value=\\\"2018\\\">2018</option>\\r\\n            <option value=\\\"2019\\\">2019</option>\\r\\n            <option value=\\\"2020\\\">2020</option>\\r\\n            <option value=\\\"2021\\\">2021</option>\\r\\n            <option value=\\\"2022\\\">2022</option>\\r\\n            <option value=\\\"2023\\\">2023</option>\\r\\n            <option value=\\\"2024\\\">2024</option>\\r\\n            <option value=\\\"2025\\\">2025</option>\\r\\n            <option value=\\\"2026\\\">2026</option>\\r\\n            <option value=\\\"2027\\\">2027</option>\\r\\n            <option value=\\\"2028\\\">2028</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"cardCCV\\\">{{'PaymentProfile.CVV' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': cardCCV.dirty && cardCCV.valid, 'has-error' : cardCCV.dirty && !cardCCV.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"cardCCV\\\"\\r\\n                 name=\\\"cardCCV\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #cardCCV=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.cardCCV\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required\\r\\n                 pattern=\\\"\\\\d{3,5}\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': cardCCV.valid, 'glyphicon-remove' : !cardCCV.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"cardCCV.dirty && !cardCCV.valid\\\">{{'PaymentProfile.InvalidCVV' | translate}} {{cardCCV?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"billToName\\\">{{'PaymentProfile.NameOnAccount' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': billToName.dirty && billToName.valid, 'has-error' : billToName.dirty && !billToName.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"billToName\\\"\\r\\n                 name=\\\"billToName\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #billToName=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.paymentBillToName\\\"\\r\\n                 [disabled]=\\\"isEdit\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': billToName.valid, 'glyphicon-remove' : !billToName.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"billToName.dirty && !billToName.valid\\\">{{'PaymentProfile.InvalidName' | translate}} {{name?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_line1\\\">{{'PaymentProfile.Address' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_line1.dirty && address_line1.valid, 'has-error' : address_line1.dirty && !address_line1.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"address_line1\\\"\\r\\n                 name=\\\"address_line1\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #address_line1=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.address.line1\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_line1.valid, 'glyphicon-remove' : !address_line1.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_line1.dirty && !address_line1.valid\\\">{{'PaymentProfile.InvalidAddress' | translate}} {{address_line1?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_line2\\\">{{'PaymentProfile.Address2' | translate}}<span class=\\\"sa-required-text\\\"></span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"address_line2\\\"\\r\\n                 name=\\\"address_line2\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #address_line2=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.address.line2\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_line2.valid, 'glyphicon-remove' : !address_line2.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_line2.dirty && !address_line2.valid\\\">{{'PaymentProfile.InvalidAddress' | translate}} {{address_line2?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_line3\\\">{{'PaymentProfile.Address3' | translate}}<span class=\\\"sa-required-text\\\"></span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"address_line3\\\"\\r\\n                 name=\\\"address_line3\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #address_line3=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.address.line3\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_line3.valid, 'glyphicon-remove' : !address_line3.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_line3.dirty && !address_line3.valid\\\">{{'PaymentProfile.InvalidAddress' | translate}} {{address_line3?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_city\\\">{{'PaymentProfile.City' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_city.dirty && address_city.valid, 'has-error' : address_city.dirty && !address_city.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"address_city\\\"\\r\\n                 name=\\\"address_city\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #address_city=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.address.municipality\\\"\\r\\n                 required />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_city.valid, 'glyphicon-remove' : !address_city.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_city.dirty && !address_city.valid\\\">{{'PaymentProfile.InvalidCity' | translate}} {{address_city?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isUS\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_state\\\">{{'PaymentProfile.StateOrProvince' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_state.dirty && address_state.valid, 'has-error' : address_state.dirty && !address_state.valid}\\\">\\r\\n          <select class=\\\"form-control bootstrap-select\\\"\\r\\n                  style=\\\"width: 150px; float: left; margin-top: 3px; margin-bottom: 3px; padding-top:10px; padding-bottom:10px\\\"\\r\\n                  id=\\\"address_state\\\"\\r\\n                  name=\\\"address_state\\\"\\r\\n                  required\\r\\n                  #address_state=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"paymentProfile.address.stateOrProvince\\\">\\r\\n            <option value=\\\"AL\\\">Alabama</option>\\r\\n            <option value=\\\"AK\\\">Alaska</option>\\r\\n            <option value=\\\"AZ\\\">Arizona</option>\\r\\n            <option value=\\\"AR\\\">Arkansas</option>\\r\\n            <option value=\\\"CA\\\">California</option>\\r\\n            <option value=\\\"CO\\\">Colorado</option>\\r\\n            <option value=\\\"CT\\\">Connecticut</option>\\r\\n            <option value=\\\"DE\\\">Delaware</option>\\r\\n            <option value=\\\"DC\\\">District Of Columbia</option>\\r\\n            <option value=\\\"FL\\\">Florida</option>\\r\\n            <option value=\\\"GA\\\">Georgia</option>\\r\\n            <option value=\\\"HI\\\">Hawaii</option>\\r\\n            <option value=\\\"ID\\\">Idaho</option>\\r\\n            <option value=\\\"IL\\\">Illinois</option>\\r\\n            <option value=\\\"IN\\\">Indiana</option>\\r\\n            <option value=\\\"IA\\\">Iowa</option>\\r\\n            <option value=\\\"KS\\\">Kansas</option>\\r\\n            <option value=\\\"KY\\\">Kentucky</option>\\r\\n            <option value=\\\"LA\\\">Louisiana</option>\\r\\n            <option value=\\\"ME\\\">Maine</option>\\r\\n            <option value=\\\"MD\\\">Maryland</option>\\r\\n            <option value=\\\"MA\\\">Massachusetts</option>\\r\\n            <option value=\\\"MI\\\">Michigan</option>\\r\\n            <option value=\\\"MN\\\">Minnesota</option>\\r\\n            <option value=\\\"MS\\\">Mississippi</option>\\r\\n            <option value=\\\"MO\\\">Missouri</option>\\r\\n            <option value=\\\"MT\\\">Montana</option>\\r\\n            <option value=\\\"NE\\\">Nebraska</option>\\r\\n            <option value=\\\"NV\\\">Nevada</option>\\r\\n            <option value=\\\"NH\\\">New Hampshire</option>\\r\\n            <option value=\\\"NJ\\\">New Jersey</option>\\r\\n            <option value=\\\"NM\\\">New Mexico</option>\\r\\n            <option value=\\\"NY\\\">New York</option>\\r\\n            <option value=\\\"NC\\\">North Carolina</option>\\r\\n            <option value=\\\"ND\\\">North Dakota</option>\\r\\n            <option value=\\\"OH\\\">Ohio</option>\\r\\n            <option value=\\\"OK\\\">Oklahoma</option>\\r\\n            <option value=\\\"OR\\\">Oregon</option>\\r\\n            <option value=\\\"PA\\\">Pennsylvania</option>\\r\\n            <option value=\\\"RI\\\">Rhode Island</option>\\r\\n            <option value=\\\"SC\\\">South Carolina</option>\\r\\n            <option value=\\\"SD\\\">South Dakota</option>\\r\\n            <option value=\\\"TN\\\">Tennessee</option>\\r\\n            <option value=\\\"TX\\\">Texas</option>\\r\\n            <option value=\\\"UT\\\">Utah</option>\\r\\n            <option value=\\\"VT\\\">Vermont</option>\\r\\n            <option value=\\\"VA\\\">Virginia</option>\\r\\n            <option value=\\\"WA\\\">Washington</option>\\r\\n            <option value=\\\"WV\\\">West Virginia</option>\\r\\n            <option value=\\\"WI\\\">Wisconsin</option>\\r\\n            <option value=\\\"WY\\\">Wyoming</option>\\r\\n\\r\\n          </select>\\r\\n\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_state.valid, 'glyphicon-remove' : !address_state.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_state.dirty && !address_state.valid\\\">{{'PaymentProfile.InvalidState' | translate}} {{address_state?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isUS\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_state\\\">{{'PaymentProfile.StateOrProvince' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_state.dirty && address_state.valid, 'has-error' : address_state.dirty && !address_state.valid}\\\">\\r\\n          <select class=\\\"form-control bootstrap-select\\\"\\r\\n                  style=\\\"width: 150px; float: left; margin-top: 3px; margin-bottom: 3px; padding-top:10px; padding-bottom:10px\\\"\\r\\n                  id=\\\"address_state\\\"\\r\\n                  name=\\\"address_state\\\"\\r\\n                  required\\r\\n                  #address_state=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"paymentProfile.address.stateOrProvince\\\">\\r\\n            <option value=\\\"AB\\\">Alberta</option>\\r\\n            <option value=\\\"BC\\\">British Columbia</option>\\r\\n            <option value=\\\"MB\\\">Manitoba</option>\\r\\n            <option value=\\\"NB\\\">New Brunswick</option>\\r\\n            <option value=\\\"NL\\\">Newfoundland and Labrador</option>\\r\\n            <option value=\\\"NS\\\">Nova Scotia</option>\\r\\n            <option value=\\\"ON\\\">Ontario</option>\\r\\n            <option value=\\\"PE\\\">Prince Edward Island</option>\\r\\n            <option value=\\\"QC\\\">Quebec</option>\\r\\n            <option value=\\\"SK\\\">Saskatchewan</option>\\r\\n            <option value=\\\"NT\\\">Northwest Territories</option>\\r\\n            <option value=\\\"NU\\\">Nunavut</option>\\r\\n\\r\\n          </select>\\r\\n\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_state.valid, 'glyphicon-remove' : !address_state.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_state.dirty && !address_state.valid\\\">{{'PaymentProfile.InvalidState' | translate}} {{address_state?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_zip\\\">{{'PaymentProfile.PostalCode' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_zip.dirty && address_zip.valid, 'has-error' : address_zip.dirty && !address_zip.valid}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"address_zip\\\"\\r\\n                 name=\\\"address_zip\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 #address_zip=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.address.postalCode\\\"\\r\\n                 required\\r\\n                 minlength=\\\"5\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_zip.valid, 'glyphicon-remove' : !address_zip.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_zip.dirty && !address_zip.valid\\\">{{'PaymentProfile.InvalidPostalCode' | translate}} {{address_zip?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"address_country\\\">{{'PaymentProfile.Country' | translate}}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': address_country.dirty && address_country.valid, 'has-error' : address_country.dirty && !address_country.valid}\\\">\\r\\n          <select class=\\\"form-control bootstrap-select\\\"\\r\\n                  style=\\\"width: 150px; float: left; margin-top: 3px; margin-bottom: 3px; padding-top:10px; padding-bottom:10px\\\"\\r\\n                  id=\\\"address_country\\\"\\r\\n                  name=\\\"address_country\\\"\\r\\n                  required\\r\\n                  (change)=\\\"changeCountry($event.target.value)\\\"\\r\\n                  #address_country=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"paymentProfile.address.country\\\">\\r\\n            <option value=\\\"CA\\\">Canada</option>\\r\\n            <option value=\\\"US\\\" selected>United States</option>\\r\\n          </select>\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': address_country.valid, 'glyphicon-remove' : !address_country.valid}\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.submitted\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"address_country.dirty && !address_country.valid\\\">{{'PaymentProfile.InvalidCountry' | translate}} {{address_country?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isAutoEnabled\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"currentAutoPayMethod\\\">{{'PaymentProfile.AutoPay' | translate}}</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"has-feedback\\\"\\r\\n             [ngClass]=\\\"{'has-success': isAutoEnabled, 'has-error' : !isAutoEnabled}\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"currentAutoPayMethod\\\"\\r\\n                 name=\\\"currentAutoPayMethod\\\"\\r\\n                 type=\\\"checkbox\\\"\\r\\n                 value=\\\"true\\\"\\r\\n                 [disabled]=\\\"!isAutoEnabled\\\"\\r\\n                 #currentAutoPayMethod=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"paymentProfile.currentAutoPayMethod\\\" />\\r\\n          <span class=\\\"glyphicon form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'glyphicon-ok ': isAutoEnabled, 'glyphicon-remove' : (!isAutoEnabled && currentAutoPayMethod) }\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                *ngIf=\\\"f.dirty\\\"></span>\\r\\n          <span class=\\\"errorMessage\\\" *ngIf=\\\"!isAutoEnabled\\\">{{'PaymentProfile.AutoPayDisabledDesc' | translate}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isEdit\\\">\\r\\n      <div class=\\\"col-md-3 text-right\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <ngx-recaptcha2 #captchaElem\\r\\n                        [siteKey]=\\\"siteKey\\\"\\r\\n                        (reset)=\\\"captchaHandleReset()\\\"\\r\\n                        (expire)=\\\"captchaHandleExpire()\\\"\\r\\n                        (load)=\\\"captchaHandleLoad()\\\"\\r\\n                        (success)=\\\"CaptchaHandleSuccess($event)\\\"\\r\\n                        [useGlobalDomain]=\\\"useGlobalDomain\\\"\\r\\n                        [size]=\\\"size\\\"\\r\\n                        [hl]=\\\"selectedLanguage\\\"\\r\\n                        [theme]=\\\"theme\\\"\\r\\n                        [type]=\\\"type\\\" [(ngModel)]=\\\"paymentProfile.captcha\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </ngx-recaptcha2>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" *ngIf=\\\"!isEdit\\\"\\r\\n                [disabled]=\\\"(isLoading || !f.dirty || (f.dirty && !f.valid) || !captchaSuccess)\\\"\\r\\n                (click)=\\\"savePayment();\\\">\\r\\n          {{'PaymentProfile.SAVE' | translate}}\\r\\n        </button>&nbsp;\\r\\n\\r\\n        <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" *ngIf=\\\"isEdit\\\"\\r\\n                [disabled]=\\\"(isLoading || !f.dirty || (f.dirty && !f.valid))\\\"\\r\\n                (click)=\\\"savePayment();\\\">\\r\\n          {{'PaymentProfile.SAVE' | translate}}\\r\\n        </button>&nbsp;\\r\\n\\r\\n        <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\"\\r\\n                [disabled]=\\\"(isLoading || !isEdit || paymentProfile.currentAutoPayMethod)\\\"\\r\\n                (click)=\\\"deletePayment();\\\">\\r\\n          {{'PaymentProfile.DELETE' | translate}}\\r\\n        </button>&nbsp;\\r\\n        <button (click)=\\\"cancel()\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">{{'PaymentProfile.CANCEL' | translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, Input, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { PaymentService } from \"../../services/payment.service\";\r\nimport { PaymentProfile } from '../../models/payment-profile.model';\r\nimport { Location } from '@angular/common';\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Account } from '../../models/account.model';\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Utilities } from \"../../services/utilities\";\r\nimport { switchMap } from 'rxjs/operators';\r\n//import { element } from \"@angular/core/src/render3/instructions\";\r\nimport { InvoiceService } from \"../../services/invoice.service\";\r\nimport { ReCaptcha2Component } from \"../../../../GoogleCaptcha/ngx-captcha-lib/src/lib\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { LanguageObservableService } from \"../../services/language-observable.service\";\r\n \r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'payment-edit',\r\n  templateUrl: './payment-edit.component.html',\r\n  styleUrls: ['./payment-edit.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class PaymentEditComponent implements OnInit {\r\n\r\n  paymentProfile: PaymentProfile;\r\n\r\n  errors: string[] = [];\r\n  isLoading: boolean;\r\n  isEdit: boolean;\r\n\r\n  id: string;\r\n  now: Date;\r\n  thisMonth: number;\r\n  thisYear: number;\r\n  isAccount: boolean;\r\n  isAutoPayChecked: boolean;\r\n  isAutoEnabled: boolean;\r\n  isAchAcctNoPopoverVisible: boolean;\r\n  isRoutingNoPopoverVisible: boolean;\r\n  isUS: boolean = true;\r\n  currency: string = \"USD\";\r\n  public selectedLanguage: string =\"en\";\r\n\r\n\r\n  public captchaIsLoaded = false;\r\n  public captchaSuccess = false;\r\n  public captchaIsExpired = false;\r\n  public captchaResponse?: string;\r\n  public siteKey:string = '';\r\n  public useGlobalDomain: boolean = false;\r\n  public aFormGroup: FormGroup;\r\n  @ViewChild('captchaElem') captchaElem: ReCaptcha2Component;\r\n\r\n\r\n  constructor(\r\n    public location: Location,\r\n    private paymentService: PaymentService,\r\n    private invoiceService: InvoiceService,\r\n    private configurations: ConfigurationService,\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public userInfoService: LanguageObservableService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n     \r\n    //Prod\r\n    this.siteKey = '6LforZoUAAAAAJPt4NAqNpmu5rvY_zsfzNigCAsn';\r\n\r\n    //Stage\r\n   // this.siteKey = '6LdSmZgUAAAAAA-RJe4UxWSoYMx9_lrHsah1P8xT';\r\n\r\n    //Local\r\n  //  this.siteKey = '6LdNz5cUAAAAAIO1jk77YhsJdZspLzqxC4U8kLSH';\r\n\r\n    this.isAccount = false;\r\n    this.isLoading = false;\r\n    this.isEdit = false;\r\n\r\n    this.invoiceService.getInvoicesToPay()\r\n    this.isAutoEnabled = false;\r\n\r\n    this.getSiteAccount();\r\n\r\n\r\n\r\n    let autoPay = this.route.snapshot.fragment != null && this.route.snapshot.fragment.toLowerCase() == 'auto';\r\n    this.isAutoPayChecked = autoPay\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.id = id;\r\n    \r\n    this.paymentProfile = new PaymentProfile()\r\n    this.paymentProfile.paymentType = \"Credit\";\r\n    //this.paymentProfile.currentAutoPayMethod = this.isAutoEnabled && this.isAutoPayChecked;\r\n\r\n    this.now = new Date(Date.now());\r\n    this.thisMonth = this.now.getMonth();\r\n    this.thisYear = this.now.getFullYear();\r\n\r\n    if (id) {\r\n      this.paymentService.getPaymentMethod(id)\r\n        .subscribe(\r\n          data => this.handleGetSuccess(data),\r\n          err => this.handleSubmitError(err)\r\n      );\r\n\r\n\r\n    }\r\n    else {\r\n      //this.accountService.getAccount().subscribe(x => {\r\n      //  this.paymentProfile.name = x.name;\r\n      //  this.paymentProfile.address = x.address;\r\n      //});\r\n    }\r\n\r\n\r\n    this.userInfoService.languageStream$.subscribe(lang => {\r\n      if (this.selectedLanguage != lang) {\r\n        this.selectedLanguage = lang;\r\n      }\r\n    });\r\n     \r\n\r\n  }\r\n\r\n  getSiteAccount() {\r\n    this.accountService.getAccount().subscribe(account => this.saveSuccessHelper(account), error => this.saveFailedHelper(error));\r\n\r\n  }\r\n\r\n  saveSuccessHelper(res: Account) {\r\n    if (res.currency != 'USD' && res.currency != 'CAD')\r\n      this.router.navigate(['secure/landing']);\r\n    else\r\n      this.currency = res.currency;\r\n  }\r\n\r\n  saveFailedHelper(res: Account) {\r\n    this.router.navigate(['secure/landing']);\r\n  }\r\n\r\n  changeCountry(currCode: string) {\r\n    if (currCode == 'US')\r\n      this.isUS = true;\r\n    else\r\n      this.isUS = false;\r\n\r\n  }\r\n\r\n  changePaymentType(paymentType: string) {\r\n    if (paymentType == 'ECP') {\r\n      this.isAccount = true;\r\n      this.paymentProfile.cardCCV = '';\r\n      this.paymentProfile.cardExpirationMonth = '';\r\n      this.paymentProfile.cardExpirationYear = '';\r\n      this.paymentProfile.cardNumber = '';\r\n      this.paymentProfile.cardType == '';\r\n    }\r\n    else {\r\n      this.isAccount = false;\r\n      this.paymentProfile.achAccountType = '';\r\n      this.paymentProfile.achAccountNumber = '';\r\n      this.paymentProfile.achRoutingNumber = '';\r\n      this.paymentProfile.bank = '';\r\n    }\r\n  }\r\n\r\n  private handleGetSuccess(res: PaymentProfile) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n    this.isEdit = true;\r\n\r\n    this.paymentProfile = res;\r\n\r\n    this.changePaymentType(res.paymentType);\r\n    this.changeCountry(res.address.country);\r\n  }\r\n  private handleSubmitSuccess(res: PaymentProfile) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n\r\n    this.location.back();\r\n  }\r\n  private handleDeleteSuccess(res: boolean) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n\r\n    this.location.back();\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    this.isLoading = false;\r\n    this.captchaReset();\r\n  }\r\n\r\n\r\n  cancel() {\r\n    this.location.back();\r\n  }\r\n\r\n  savePayment() {\r\n    this.isLoading = true;\r\n\r\n    this.paymentProfile.currency = this.currency;\r\n\r\n    this.paymentService.savePaymentProfile(this.paymentProfile)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        err => this.handleSubmitError(err)\r\n      );\r\n  }\r\n  deletePayment() {\r\n    this.isLoading = true;\r\n\r\n    this.paymentService.deletePaymentProfile(this.paymentProfile.id)\r\n      .subscribe(\r\n        data => this.handleDeleteSuccess(data),\r\n        err => this.handleSubmitError(err)\r\n      );\r\n\r\n  }\r\n  \r\n  toggleAchAcctNoPopover(e) {\r\n    this.isAchAcctNoPopoverVisible = !this.isAchAcctNoPopoverVisible;\r\n    return this.isAchAcctNoPopoverVisible;\r\n  }\r\n\r\n  toggleRoutingNoPopover(e) {\r\n    this.isRoutingNoPopoverVisible = !this.isRoutingNoPopoverVisible;\r\n    return this.isRoutingNoPopoverVisible;\r\n  }\r\n\r\n\r\n  captchaReset(): void {\r\n    this.captchaElem.resetCaptcha();\r\n  }\r\n\r\n  CaptchaHandleSuccess(captchaResponse: string): void {\r\n    this.captchaSuccess = true;\r\n    this.captchaResponse = captchaResponse;\r\n    this.captchaIsExpired = false;\r\n  }\r\n\r\n  captchaHandleLoad(): void {\r\n    this.captchaIsLoaded = true;\r\n    this.captchaIsExpired = false;\r\n  }\r\n\r\n  captchaHandleExpire(): void {\r\n    this.captchaSuccess = false;\r\n    this.captchaIsExpired = true;\r\n  }\r\n\r\n\r\n  //loadScript() {\r\n  //  //var iFrameHead = window.frames[\"secureFrame\"];\r\n  //  //var myscript = document.createElement('script');\r\n  //  //myscript.type = 'text/javascript;';\r\n  //  //myscript.src = \"/assets/js/scentair.js\";\r\n  //  //iFrameHead.appendChild(myscript);\r\n  //}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin-loggedin\\\">\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        Pay Now\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n      <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div style=\\\"font-style: italic; font-weight: bold; margin-bottom: 4px;\\\">\\r\\n        {{ 'PayNow.PaymentInvoices' | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n        <thead>\\r\\n          <tr style=\\\"background-color: #D3D3D3;\\\">\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'PayNow.InvoiceNumber' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'PayNow.DueDate' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'PayNow.InvoiceAmount' | translate }}\\r\\n            </th>\\r\\n            <th style=\\\"text-align: center;\\\">\\r\\n              {{ 'PayNow.PaymentAmount' | translate }}\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngFor=\\\"let invoice of this.invoicesToPay\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                {{invoice.invoiceNumber}}\\r\\n              </td>\\r\\n              <td align=\\\"center\\\">\\r\\n                {{formatDate(invoice.dateDue)}}\\r\\n              </td>\\r\\n              <td align=\\\"right\\\">\\r\\n                {{formatAmount(invoice.totalAmount)}} {{invoice.currency}}\\r\\n              </td>\\r\\n              <td align=\\\"right\\\">\\r\\n                {{formatAmount(invoice.userPaymentAmount)}} {{invoice.currency}}\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 text-right\\\">\\r\\n      <span style=\\\"font-size: x-large;\\\">\\r\\n        {{ 'PayNow.TotalPaymentAmount' | translate }} {{ formatAmount(selectedPaymentAmount) }} {{ invoiceCurrency }}\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div style=\\\"font-style: italic; font-weight: bold;\\\">\\r\\n        {{ 'PayNow.SelectPaymentMethod' | translate }} <a routerLink=\\\"/secure/payment\\\">{{ 'PayNow.SetupNewProfile' | translate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n  <br />\\r\\n  <ng-container *ngFor=\\\"let paymentMethod of paymentMethods, index as i\\\">\\r\\n\\r\\n    <div *ngIf=\\\"i > 0\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"sa-blue-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"formResetToggle\\\">\\r\\n      <div class=\\\"col-md-8\\\" style=\\\"font-size: large;\\\">\\r\\n        <div class=\\\"sa-inline-field\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"paymentRowRadio\\\" style=\\\"width: 20px; height: 20px;\\\" name=\\\"paymentRowRadio\\\" value=\\\"paymentMethod.id\\\" (change)=\\\"setPaymentMethod(paymentMethod.id)\\\" />\\r\\n          <label for=\\\"paymentRowRadio\\\" style=\\\"margin-left: 8px; margin-top: 8px; font-weight: normal;\\\">\\r\\n            {{paymentMethod.name}} <span style=\\\"font-style: italic\\\">({{paymentMethod.paymentType}} ending with {{paymentMethod.accountNumber.substring(paymentMethod.accountNumber.length - 4, paymentMethod.accountNumber.length)}})</span>\\r\\n\\r\\n            <span *ngIf=\\\"paymentMethod.currentAutoPayMethod\\\" class=\\\"sa-auto-pay-text\\\">\\r\\n              {{ 'paymentMethod.CurrentPaymentMethod' | translate }}\\r\\n              <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"togglePopover($event)\\\" (mouseleave)=\\\"togglePopover($event)\\\">\\r\\n                <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAutoEnrollPopoverVisible\\\" id=\\\"autpPayPopover\\\">{{ 'PayNow.selectedServiceCharge' | translate }}</span>\\r\\n              </span>\\r\\n            </span>\\r\\n          </label>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\" style=\\\"font-size: large;\\\">\\r\\n        <a routerLink=\\\"/secure/payment/{{paymentMethod.id}}\\\" class=\\\"sa-pipe-divider\\\">{{'PayNow.EDIT' | translate }}</a>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </ng-container>\\r\\n\\r\\n  <br /><br />\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"isTermsVisible\\\">\\r\\n          <div class=\\\"row\\\" style=\\\"text-align:center;\\\"><span style=\\\"font-size:large;font-weight:bold;\\\">{{ 'PayNow.ElectronicPaymentTermsAndCondition' | translate }}</span></div>\\r\\n          <br />\\r\\n          <span style=\\\"font-weight:bold;\\\">{{ 'PayNow.ByCheckingBox' | translate }}</span> {{ 'PayNow.AuthorizedAgent' | translate }} <span style=\\\"font-weight:bold;\\\">{{ 'PayNow.Certifies' | translate }}</span> {{ 'PayNow.AgentAuthority' | translate }} <span style=\\\"font-weight:bold;\\\">{{ 'PayNow.Signs' | translate }}</span> {{ 'PayNow.EnrollmentAndAuth1' | translate }}<span style=\\\"font-weight:bold;\\\">{{ 'PayNow.Authorization' | translate }}</span>{{ 'PayNow.EnrollmentAndAuth2' | translate }}\\r\\n          <br />\\r\\n          <span style=\\\"font-weight:bold;\\\">{{ 'PayNow.Certifies2' | translate }}</span> {{ 'PayNow.description1' | translate }} <span style=\\\"font-weight:bold;\\\">{{ 'PayNow.Consents' | translate }}</span>{{ 'PayNow.description2' | translate }}\\r\\n          <br /><br /> <div class=\\\"row\\\" style=\\\"text-align:center;\\\"> <span style=\\\"text-align:center;font-size:large;font-style:italic;\\\">{{ 'PayNow.description3' | translate }}</span><br /><br /></div>\\r\\n          <span style=\\\"font-weight:bold;color:red;\\\">{{ 'PayNow.GeneralTerms' | translate }}</span> {{ 'PayNow.description4' | translate }} <span style=\\\"font-weight:bold;\\\"> {{ 'PayNow.InvoiceAmounts' | translate }} </span>{{ 'PayNow.description5' | translate }}<span style=\\\"font-weight:bold;\\\">{{ 'PayNow.EnrollmentScreens' | translate }}</span>{{ 'PayNow.description6' | translate }}<a href=\\\"mailto:customercare@scentair.com\\\">customercare@scentair.com</a>{{ 'PayNow.description7' | translate }}\\r\\n          <br /><br />\\r\\n          {{ 'PayNow.SubscriberAgrees' | translate }}\\r\\n          <br /><br />\\r\\n          <span style=\\\"font-weight:bold;color:red;\\\">{{ 'PayNow.ACHAuthorization' | translate }}</span> {{ 'PayNow.description8' | translate }}\\r\\n          <br /><br /><span style=\\\"font-weight:bold;color:red;\\\">{{ 'PayNow.CreditCardAuth' | translate }} </span>{{ 'PayNow.description9' | translate }}\\r\\n          {{ 'PayNow.description10' | translate }}\\r\\n\\r\\n          <br /><br /><span style=\\\"font-weight:bold;color:red;\\\">{{ 'PayNow.Privacy' | translate }}</span>{{ 'PayNow.description11' | translate }}\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/visa.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/mastercard.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/discover.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/amex.png\\\" /></span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" *ngIf=\\\"formResetToggle\\\">\\r\\n      <button (click)=\\\"cancel()\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">{{ 'PayNow.CANCEL' | translate }}</button>&nbsp;\\r\\n      <span *ngIf=\\\"!isTermsVisible\\\">\\r\\n        <button (click)=\\\"paynow();\\\"\\r\\n                [disabled]=\\\"(isLoading)\\\"\\r\\n                class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">\\r\\n          {{ 'PayNow.SUBMIT' | translate }}\\r\\n        </button>\\r\\n      </span>\\r\\n      <span *ngIf=\\\"isTermsVisible\\\">\\r\\n        <button (click)=\\\"paynow();\\\"\\r\\n                [disabled]=\\\"(isLoading)\\\"\\r\\n                class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">\\r\\n          {{ 'PayNow.ACCEPT' | translate }} &amp; {{ 'PayNow.SUBMIT' | translate }}\\r\\n        </button>\\r\\n      </span>\\r\\n    </div>\\r\\n\\r\\n  </div><div class=\\\"row\\\" style=\\\"text-align:right;\\\" *ngIf=\\\"isLoading\\\">{{ 'PayNow.PaymentCompleteWarning' | translate }}</div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"font-style: italic;\\\">\\r\\n      {{ 'PayNow.AutopayMethodCannotDeleted' | translate }}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"font-style: italic;\\\">\\r\\n      {{ 'PayNow.PaymentAlert' | translate }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { Invoice } from '../../models/invoice.model';\r\nimport { InvoiceService } from \"../../services/invoice.service\";\r\nimport { PaymentMethod } from '../../models/payment-method.model';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Location } from '@angular/common';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { Router, Event } from '@angular/router';\r\nimport { PaymentResult } from '../../models/payment-result-model';\r\n\r\n@Component({\r\n  selector: 'payment-paynow',\r\n  templateUrl: './payment-paynow.component.html',\r\n  styleUrls: ['./payment-paynow.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\n\r\nexport class PaymentPaynowComponent implements OnInit {\r\n\r\n  isLoading: boolean;\r\n  formResetToggle: boolean = true;\r\n  isAutoEnrollPopoverVisible: boolean;\r\n  selectedPaymentAmount: number;\r\n  selectedPaymentMethod: string;\r\n  invoiceCurrency: string;\r\n  invoices: Invoice[] = [];\r\n  invoicesToPay: Invoice[] = [];\r\n  paymentMethods: PaymentMethod[] = [];\r\n    errors: string[] = [];\r\n  paymentResponse: PaymentResult;\r\n  selectedRows: number[] = new Array();\r\n  totalBalanceDue: number = 0;\r\n  isBalanceDue: boolean = false;\r\n  isTermsReviewed: boolean = false;\r\n  isTermsVisible: boolean = false;\r\n\r\n  radioButtonSelected: number = 0;\r\n  radioButtonNotSelected: number = 1;\r\n  test: string = \"testing\";\r\n\r\n  constructor(public location: Location,public configurations: ConfigurationService, private routerService: Router, private invoiceService: InvoiceService, private paymentService: PaymentService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.getInvoicesToPay();\r\n    this.getPaymentMethods();\r\n    \r\n    this.selectedPaymentAmount = this.invoiceService.getInvoicesPaymentTotal();\r\n    //this.getUserInvoices();\r\n\r\n  }\r\n\r\n\r\n  getUserInvoices() {\r\n\r\n\r\n\r\n    this.selectedPaymentAmount = 0;\r\n\r\n    this.invoiceService\r\n      .getOpenInvoices()\r\n      .subscribe(\r\n        request => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n\r\n            let invoices = request;\r\n            if (invoices !== null)\r\n              invoices.forEach(invoice => {\r\n                if (invoice !== null) {\r\n\r\n                  this.invoiceCurrency = (invoice.currency) ? invoice.currency : (invoice.balanceCurrency) ? invoice.balanceCurrency : 'USD';\r\n                  this.selectedPaymentAmount += invoice.balance;\r\n\r\n                  if (invoice.balance > 0)\r\n                    this.invoices.push(invoice);\r\n                }\r\n              });\r\n          }, 500);\r\n        },\r\n        error => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n      });\r\n    \r\n    \r\n    \r\n  }\r\n  getPaymentMethods() {\r\n\r\n    \r\n\r\n    this.isLoading = true;\r\n\r\n    this.paymentService.getPaymentMethods()\r\n      .subscribe(\r\n        request => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n            this.paymentMethods = request;\r\n\r\n            let method = this.paymentMethods.find(x => x.currentAutoPayMethod);\r\n            if (method)\r\n              this.selectedPaymentMethod = method.id;\r\n\r\n          }, 500);\r\n        },\r\n        error => {\r\n          setTimeout(() => {\r\n            this.isLoading = false;\r\n          }, 500);\r\n        });\r\n  }\r\n \r\n\r\n  setPaymentMethod(id: string) {\r\n    this.selectedPaymentMethod = id;\r\n  }\r\n\r\n  private handleSubmitSuccess(res: PaymentResult) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n\r\n    this.paymentResponse = res;\r\n\r\n\r\n\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    if (this.invoiceService.getOpenInvoicesTotal() - this.selectedPaymentAmount <= 0) {\r\n      alert(\"Payment Successful. A payment confirmation email has been sent to you. Your account is now eligible for AutoPay\");\r\n      this.routerService.navigate(['/secure/payment/autopay']);\r\n    }\r\n    else {\r\n      alert(\"Payment Successful. A payment confirmation email has been sent to you.\");\r\n      this.routerService.navigate(['/landing']);\r\n    }\r\n\r\n    this.invoiceService.userInvoices = [];\r\n    this.invoiceService.invoicesToPay = [];\r\n\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    alert(\"Declined. Please contact us. We will gladly assist you with your payment.\");\r\n\r\n    this.errors = serverError;\r\n    this.isLoading = false;\r\n\r\n    this.isTermsReviewed = false;\r\n    this.isTermsVisible = false;\r\n\r\n    this.routerService.navigate(['/landing']);\r\n  }\r\n\r\n  get canPayNow(): boolean {\r\n    if (this.selectedPaymentMethod && this.selectedPaymentMethod.length > 0)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  paynow() {\r\n    if (!this.canPayNow) {\r\n      alert(\"Select a Payment Method\");\r\n      return false;\r\n    }\r\n\r\n    if (!this.isTermsReviewed) {\r\n      this.isTermsReviewed = true;\r\n      this.isTermsVisible = true;\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    const invoices = this.invoicesToPay.map(x => x.invoiceNumber);\r\n    const amount = this.invoiceService.getInvoicesPaymentTotal();\r\n\r\n    this.paymentService.submitPayment(this.selectedPaymentMethod, invoices, amount)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        err => this.handleSubmitError(err));\r\n\r\n  }\r\n\r\n  getInvoices(): Invoice[] {\r\n    //return this.invoices;\r\n    return this.invoiceService.getUserInvoices();\r\n  }\r\n\r\n  getInvoicesToPay() {\r\n\r\n    //alert(caller);\r\n    this.invoicesToPay = this.invoiceService.getInvoicesToPay();\r\n  }\r\n\r\n  togglePopover(e) {\r\n    this.isAutoEnrollPopoverVisible = !this.isAutoEnrollPopoverVisible;\r\n    return this.isAutoEnrollPopoverVisible;\r\n  }\r\n\r\n  formatAmount(amount: number) {\r\n    if (isNaN(amount)) {\r\n      return (0).toFixed(2);\r\n    }\r\n    return (amount).toFixed(2);\r\n  }\r\n\r\n  formatDate(d: string) {\r\n    if (d == null) { return null; }\r\n    var dt = new Date(d);\r\n    return (dt.getMonth() + 1) + '/' + dt.getDate() + '/' + dt.getFullYear();\r\n  }\r\n\r\n  cancel() {\r\n    this.invoiceService.userInvoices = [];\r\n    this.invoiceService.invoicesToPay = [];\r\n\r\n    this.location.back();\r\n  }\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin-loggedin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        {{'PaymentProfile.PaymentMethods' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div style=\\\"color:slategray;font-size:large;\\\">\\r\\n        {{'PaymentProfile.PaymentMethodsDesc' | translate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div style=\\\"color: red; font-style: italic;\\\">\\r\\n    {{'PaymentProfile.USCCANOption' | translate}}\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n      <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <br />\\r\\n  <span style=\\\"color: blue;font-size:large;border-bottom: 1px solid #56B2CB;margin-top: 3px;margin-bottom: 3px; \\\">\\r\\n    {{'PaymentProfile.CurrentSavedMethod' | translate}}\\r\\n  </span>\\r\\n  <br /><br />\\r\\n\\r\\n  <ng-container *ngFor=\\\"let paymentMethod of paymentMethods, index as i\\\">\\r\\n\\r\\n    <div *ngIf=\\\"i > 0\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <hr class=\\\"sa-blue-hr\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\" style=\\\"font-size: large;\\\">\\r\\n        <div>\\r\\n\\r\\n          {{ paymentMethod.name }} <span style=\\\"font-style: italic\\\">({{paymentMethod.paymentType}}{{'PaymentProfile.EndingWith' | translate}}  {{paymentMethod.accountNumber.substring(paymentMethod.accountNumber.length - 4, paymentMethod.accountNumber.length)}})</span>\\r\\n\\r\\n                                   <span *ngIf=\\\"paymentMethod.currentAutoPayMethod\\\" class=\\\"sa-auto-pay-text\\\">\\r\\n                                     {{ 'PaymentProfile.CuurentAutoPayMethod' | translate }}\\r\\n                                     <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"togglePopover($event)\\\" (mouseleave)=\\\"togglePopover($event)\\\">\\r\\n                                       <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAutoEnrollPopoverVisible\\\" id=\\\"autpPayPopover\\\">{{'PaymentProfile.SelectedPaymentValidationMessage' | translate}}</span>\\r\\n                                     </span>\\r\\n                                   </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\" style=\\\"font-size: large;\\\">\\r\\n        <a routerLink=\\\"/secure/payment/{{paymentMethod.id}}\\\" class=\\\"sa-pipe-divider\\\">{{'PaymentProfile.EDIT' | translate}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </ng-container>\\r\\n  <br />\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"canPayOnSite\\\">\\r\\n      <a routerLink=\\\"/secure/payment\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\">{{'PaymentProfile.AddNewPaymentMethod' | translate}}</a>\\r\\n      <a routerLink=\\\"/secure/payment/autopay\\\" class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"float: right;\\\">{{'PaymentProfile.MANAGEAUTOPAYSETTINGS' | translate}}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br /><br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/visa.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/mastercard.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/discover.png\\\" /></span>\\r\\n      <span style=\\\"margin-right: 8px; width: 50px;\\\"><img src=\\\"../../../assets/images/amex.png\\\" /></span>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\" style=\\\"font-style: italic;\\\">\\r\\n      {{'PaymentProfile.SecurityReasonDesc' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      {{'PaymentProfile.PaymentReceivedTimeDesc' | translate}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from '../../models/account.model';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { PaymentMethod } from '../../models/payment-method.model';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Utilities } from '../../services/utilities';\r\n\r\n\r\n@Component({\r\n  selector: 'payment-profile',\r\n  templateUrl: './payment-profile.component.html',\r\n  styleUrls: ['./payment-profile.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class PaymentProfileComponent implements OnInit {\r\n\r\n  isLoading: boolean;\r\n  isAutoEnrollPopoverVisible: boolean;\r\n  canPayOnSite: boolean = true;\r\n  paymentMethods: PaymentMethod[];\r\n    errors: string[] = [];\r\n\r\n    constructor(public configurations: ConfigurationService, private paymentService: PaymentService, private accountService: AccountService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPaymentMethods();\r\n    this.getSiteAccount();\r\n  }\r\n\r\n  getSiteAccount() {\r\n    this.accountService.getAccount().subscribe(account => this.saveSuccessHelper(account), error => this.saveFailedHelper(error));\r\n\r\n  }\r\n\r\n  saveSuccessHelper(res: Account) {\r\n    if (res.currency != 'USD' && res.currency != 'CAD')\r\n      this.canPayOnSite = false;\r\n\r\n\r\n  }\r\n\r\n  saveFailedHelper(res: Account) {\r\n    this.canPayOnSite = true;\r\n  }\r\n\r\n  private handleSubmitSuccess(res: PaymentMethod[]) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n\r\n    this.paymentMethods = res;\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    this.isLoading = false;\r\n  }\r\n \r\n  getPaymentMethods() {\r\n\r\n    this.isLoading = true;\r\n\r\n    this.paymentService.getPaymentMethods()\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        err => this.handleSubmitError(err));\r\n  }\r\n\r\n\r\n  togglePopover(e) {\r\n    this.isAutoEnrollPopoverVisible = !this.isAutoEnrollPopoverVisible;\r\n    return this.isAutoEnrollPopoverVisible;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"min-height: 500px;\\\">\\r\\n  <div *ngIf=\\\"isLoggedIn\\\" style=\\\"margin-top: 35px;\\\">\\r\\n    &nbsp;\\r\\n  </div>\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        Privacy Policy\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h3>\\r\\n        Effective date: August 21, 2018\\r\\n      </h3>\\r\\n      <p>\\r\\n        ScentAir (“us”, “we”, or “our”) operates the portal.scentair.com website (hereinafter referred to as the “Service”).\\r\\n      </p>\\r\\n      <p>\\r\\n        This page informs you of our policies regarding the collection, use and disclosure of personal data when you use our Service and the choices you have associated with that data.\\r\\n      </p>\\r\\n      <p>\\r\\n        We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, the terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from portal.scentair.com\\r\\n      </p>\\r\\n    \\r\\n        Definitions\\r\\n        <ul>\\r\\n          <li>\\r\\n            Service is the portal.scentair.com website operated by ScentAir\\r\\n          </li>\\r\\n          <li>\\r\\n            Personal DataPersonal Data means data about a living individual who can be identified from those data (or from those and other information either in our possession or likely to come into our possession).\\r\\n          </li>\\r\\n          <li>\\r\\n            Usage DataUsage Data is data collected automatically either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).\\r\\n          </li>\\r\\n          <li>\\r\\n            CookiesCookies are small files stored on your device (computer or mobile device).\\r\\n          </li>\\r\\n          <li>\\r\\n            Data ControllerData Controller means the natural or legal person who (either alone or jointly or in common with other persons) determines the purposes for which and the manner in which any personal information are, or are to be, processed.For the purpose of this Privacy Policy, we are a Data Controller of your Personal Data.\\r\\n          </li>\\r\\n          <li>\\r\\n            Data Processors (or Service Providers)Data Processor (or Service Provider) means any natural or legal person who processes the data on behalf of the Data Controller.We may use the services of various Service Providers in order to process your data more effectively.\\r\\n          </li>\\r\\n          <li>\\r\\n            Data Subject (or User)Data Subject is any living individual who is using our Service and is the subject of Personal Data.\\r\\n          </li>\\r\\n          \\r\\n        </ul>\\r\\n    \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'privacy',\r\n  templateUrl: './privacy.component.html',\r\n  styleUrls: ['./privacy.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class PrivacyComponent implements OnInit {\r\n\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(public configurations: ConfigurationService, private authService: AuthService) {\r\n    this.isLoggedIn = authService.isLoggedIn;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md=12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">{{ 'Email Confirmation' | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n        <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </header>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isLoading\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        Confirming your email... <br /><br />\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"confirmed\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        Your email is confirmed. <br /><br />\\r\\n      </div>\\r\\n      <div>\\r\\n        <p>\\r\\n          <a routerLink=\\\"/login\\\">{{ 'Login' | translate }}</a> to view account details, make payments and add additional users.\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"confirmed\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <a routerLink=\\\"/login\\\" title=\\\"{{ 'Login' | translate }}\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'Login' | translate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!confirmed\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        Your email is not confirmed.  Please delete the email.  A new email will be sent to you.  If you did not register, please contact support.\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        AMERICAS: Toll free: <a href=\\\"tel:+8667236824\\\">+866-723-6824</a> or <a href=\\\"tel:+17045042320\\\">+1 704-504-2320</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        EMEA: <a href=\\\"tel:+330562576320\\\">+33 (0)5 62 57 63 20</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        UK: <a href=\\\"tel:+4401628601650\\\">+44 (0) 1628-601650</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        APAC: <a href=\\\"tel:+85362625256\\\">+(853) 626-25256</a> or <a href=\\\"tel:+(852) 356-35566\\\">(852) 356-35566</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <a routerLink=\\\"/login\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'RETURN TO LOGIN' | translate }}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { fadeInOut } from '../../services/animations';\r\n\r\n@Component({\r\n  selector: 'register-confirm-email',\r\n  templateUrl: './register-confirmation-email.component.html',\r\n  styleUrls: ['./register-confirmation-email.component.css']\r\n})\r\nexport class RegisterConfirmationEmailComponent implements OnInit {\r\n    errors: any[];\r\n    isLoading: boolean;\r\n    confirmed: boolean;\r\n    userId: string;\r\n    code: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    let userId = this.route.snapshot.paramMap.get('id');\r\n    let code = this.route.snapshot.paramMap.get('code');\r\n\r\n    this.errors = [];\r\n    this.confirmed = false;\r\n    this.isLoading = false;\r\n    this.userId = userId;\r\n    this.code = code;\r\n\r\n\r\n    this.accountService.confirmEmail(userId, code)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        error => this.handleSubmitError(error));\r\n \r\n  }\r\n\r\n  private handleSubmitSuccess(res: boolean) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n    this.confirmed = res;\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    this.isLoading = false;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">\\r\\n          {{ 'Register.Header' | translate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        {{ 'Register.RegistrationComplete' | translate }} <br /><br />\\r\\n      </div>\\r\\n      <div>\\r\\n        <p>\\r\\n          <a routerLink=\\\"/login\\\">{{ 'Register.Login' | translate }}</a> {{ 'Register.ToViewDetails' | translate }}\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <a routerLink=\\\"/login\\\" title=\\\"{{ 'Register.Login' | translate }}\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'Register.Login' | translate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'register-confirmation',\r\n  templateUrl: './register-confirmation.component.html',\r\n  styleUrls: ['./register-confirmation.component.css']\r\n})\r\nexport class RegisterConfirmationComponent implements OnInit {\r\n    id: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.id = id;\r\n\r\n    //confirmation of email\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-header-margin sa-container-minsize\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md=12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\" *ngIf=\\\"!isAccount\\\">{{ 'Register.Step1Registration' | translate }}</div>\\r\\n        <div class=\\\"sa-heading-text\\\" *ngIf=\\\"isAccount\\\">{{ 'Register.Step2Registration' | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n        <div class=\\\"errorMessage\\\" style=\\\"float:left\\\">{{ errorMessage | translate }} <a href=\\\"../#/login/\\\" *ngIf=\\\"here\\\">{{ 'Register.Here' | translate}}</a> </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </header>\\r\\n\\r\\n  <form class=\\\"form\\\" name=\\\"f\\\" id=\\\"f\\\" #f=\\\"ngForm\\\" *ngIf=\\\"formResetToggle\\\" (ngSubmit)=\\\"register()\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"account_number\\\">{{ 'Register.CustomerIDNumber'  | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleAcctNoPopover($event)\\\" (mouseleave)=\\\"toggleAcctNoPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isAcctNoPopoverVisible\\\" id=\\\"acctNoPopover\\\">{{ 'Register.CustomerIDNumberToolTip'  | translate }}</span>\\r\\n        </span>\\r\\n\\r\\n        <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : account_number.dirty && (!account_number.valid || account_number.errors) }\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"account_number\\\" name=\\\"account_number\\\" type=\\\"text\\\" #account_number=\\\"ngModel\\\" [(ngModel)]=\\\"model.account.number\\\" required minlength=\\\"3\\\" />\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(account_number.dirty && (!account_number.valid || account_number.errors))\\\">{{ 'Register.InvalidAccountNumber' | translate }}{{ model.account.number?.messages | translate }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"account_pin\\\">{{ 'Register.PINNumber' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"togglePinNoPopover($event)\\\" (mouseleave)=\\\"togglePinNoPopover($event)\\\">\\r\\n          <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isPinNoPopoverVisible\\\" id=\\\"PinNoPopover\\\">{{ 'Register.PINNumberToolTip' | translate }}</span>\\r\\n        </span>\\r\\n\\r\\n        <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : account_pin.dirty && (!account_pin.valid || account_pin.errors) }\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"account_pin\\\" name=\\\"account_pin\\\" type=\\\"password\\\" #account_pin=\\\"ngModel\\\" [(ngModel)]=\\\"model.account.pin\\\" required minlength=\\\"3\\\" />\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(account_pin.dirty && (!account_pin.valid || account_pin.errors))\\\">{{ 'Register.PINNumberValidation' | translate }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!isAccount\\\">\\r\\n      <div class=\\\"col-md-4\\\" style=\\\"margin-top: 10px !important;\\\">\\r\\n        <ngx-recaptcha2 #captchaElem\\r\\n                        [siteKey]=\\\"siteKey\\\"\\r\\n                        (reset)=\\\"captchaHandleReset()\\\"\\r\\n                        (expire)=\\\"captchaHandleExpire()\\\"\\r\\n                        (load)=\\\"captchaHandleLoad()\\\"\\r\\n                        (success)=\\\"CaptchaHandleSuccess($event)\\\"\\r\\n                        [useGlobalDomain]=\\\"useGlobalDomain\\\"\\r\\n                        [size]=\\\"size\\\"\\r\\n                        [hl]=\\\"selectedLanguage\\\"\\r\\n                        [theme]=\\\"theme\\\"\\r\\n                        [type]=\\\"type\\\" [(ngModel)]=\\\"model.captcha\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\r\\n        </ngx-recaptcha2>\\r\\n        <br />\\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"isAccount\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"sa-gray-text\\\" style=\\\"font-size: large;\\\">\\r\\n              <div>\\r\\n                <div style=\\\"font-size: x-large;\\\">\\r\\n                  {{ model.account.name }} ({{model.account.number}})\\r\\n                </div>\\r\\n                <div>\\r\\n                  {{ model.account.address.line1 }}<br />\\r\\n                  {{ model.account.address.municipality }},&nbsp;\\r\\n                  {{ model.account.address.stateOrProvince }}&nbsp; {{ model.account.address.postalCode }}<br />\\r\\n                  {{ model.account.address.country }}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_firstName\\\">{{ 'Register.FirstName' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : user_firstName.dirty && (!user_firstName.valid || user_firstName.errors) }\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"user_firstName\\\" name=\\\"user_firstName\\\" type=\\\"text\\\" #user_firstName=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.firstName\\\" required minlength=\\\"2\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_firstName.dirty && (!user_firstName.valid || user_firstName.errors))\\\">{{ 'Register.FirstNameValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_lastName\\\">{{ 'Register.LastName' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : user_lastName.dirty && (!user_lastName.valid || user_lastName.errors) }\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"user_lastName\\\" name=\\\"user_lastName\\\" type=\\\"text\\\" #user_lastName=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.lastName\\\" required minlength=\\\"2\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_lastName.dirty && (!user_lastName.valid || user_lastName.errors))\\\">{{ 'Register.LastNameValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_email\\\">{{ 'Register.EmailAddress' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : user_email.dirty && (!user_email.valid || user_email.errors) }\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"user_email\\\" name=\\\"user_email\\\" type=\\\"text\\\" #user_email=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.email\\\" required email minlength=\\\"5\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_email.dirty && (!user_email.valid || user_email.errors))\\\">{{ 'Register.EmailValidation'| translate }}{{ model.user.email?.messages}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_phoneNumber\\\">{{ 'Register.PhoneNumber' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\"\\r\\n                 [ngClass]=\\\"{ 'has-error' : user_phoneNumber.dirty && (!user_phoneNumber.valid || user_phoneNumber.errors) }\\\">\\r\\n              <input class=\\\"form-control\\\"\\r\\n                     id=\\\"user_phoneNumber\\\"\\r\\n                     name=\\\"user_phoneNumber\\\"\\r\\n                     type=\\\"text\\\"\\r\\n                     #user_phoneNumber=\\\"ngModel\\\"\\r\\n                     [(ngModel)]=\\\"model.user.phoneNumber\\\"\\r\\n                     required\\r\\n                     minlength=\\\"6\\\"\\r\\n                     pattern=\\\"\\\\+?\\\\s*(\\\\(?\\\\d{1,3}\\\\)?)*\\\\s*[\\\\-\\\\.\\\\,]?\\\\s*(\\\\(?\\\\d+\\\\)?)*\\\\s*[\\\\-\\\\.\\\\,]?\\\\s*(\\\\(?\\\\d+\\\\)?)*\\\\s*[\\\\-\\\\.\\\\,]?\\\\s*(\\\\(?\\\\d+\\\\)?)*\\\\s*\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_phoneNumber.dirty && (!user_phoneNumber.valid || user_phoneNumber.errors))\\\">{{ 'Register.PhoneNumberValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_userName\\\">{{ 'Register.UserName' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"toggleUsernamePopover($event)\\\" (mouseleave)=\\\"toggleUsernamePopover($event)\\\">\\r\\n              <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isUsernamePopoverVisible\\\" id=\\\"UsernamePopover\\\">{{ 'Register.UserNameToolTip' | translate }}</span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (user_userName.dirty && !user_userName.valid) }\\\">\\r\\n              <input class=\\\"form-control\\\"\\r\\n                     id=\\\"user_userName\\\"\\r\\n                     name=\\\"user_userName\\\"\\r\\n                     type=\\\"text\\\"\\r\\n                     #user_userName=\\\"ngModel\\\"\\r\\n                     [(ngModel)]=\\\"model.user.userName\\\"\\r\\n                     required\\r\\n                     minlength=\\\"7\\\"\\r\\n                     pattern=\\\"[a-zA-Z0-9]+\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_userName.dirty && user_userName.errors?.required)\\\">\\r\\n                {{ 'Register.UserNameRequired' | translate }}\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_userName.dirty && user_userName.errors?.minlength)\\\">\\r\\n                {{ 'Register.UserNameCharLength' | translate }}\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_userName.dirty && user_userName.errors?.pattern)\\\">\\r\\n                {{ 'Register.UserNameValidation' | translate }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_newPassword\\\">{{ 'Register.Password' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <span class=\\\"fa fa-question-circle sa-enroll-auto-pay-button-info-icon sa-popup\\\" (mouseenter)=\\\"togglePasswordPopover($event)\\\" (mouseleave)=\\\"togglePasswordPopover($event)\\\">\\r\\n              <span class=\\\"sa-popuptext-b\\\" [class.sa-show]=\\\"isPasswordPopoverVisible\\\" id=\\\"PasswordPopover\\\">{{ 'Register.PasswordToolTip' | translate }}</span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (user_newPassword.dirty && !user_newPassword.valid) }\\\">\\r\\n              <input class=\\\"form-control\\\"\\r\\n                     id=\\\"user_newPassword\\\"\\r\\n                     name=\\\"user_newPassword\\\"\\r\\n                     type=\\\"password\\\"\\r\\n                     #user_newPassword=\\\"ngModel\\\"\\r\\n                     [(ngModel)]=\\\"model.user.newPassword\\\"\\r\\n                     required\\r\\n                     minlength=\\\"8\\\"\\r\\n                     pattern=\\\"^(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*\\\\d)(?=[a-zA-Z0-9]*[^a-zA-Z0-9]).+\\\"\\r\\n                     validateEqual=\\\"user_confirmPassword\\\" reverse=\\\"true\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_newPassword.dirty && user_newPassword.errors?.required)\\\">\\r\\n                {{ 'Register.PasswordValidation' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_newPassword.dirty && user_newPassword.errors?.minlength)\\\">\\r\\n                {{ 'Register.PasswordCharLength' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_newPassword.dirty && !user_newPassword.errors?.minlength && user_newPassword.errors?.pattern)\\\">\\r\\n                {{ 'Register.PasswordCharLength' | translate }}\\r\\n                <br />\\r\\n              </span>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_newPassword.dirty && user_confirmPassword.dirty) || !(user_newPassword.dirty && user_newPassword.errors?.validateEqual)\\\">\\r\\n                {{ 'Register.PasswordMatchValidation' | translate }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_confirmPassword\\\">{{ 'Register.ConfirmPassword' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (user_newPassword.dirty || user_confirmPassword.dirty) && (user_newPassword.valid && !user_confirmPassword.valid) }\\\">\\r\\n              <input class=\\\"form-control\\\"\\r\\n                     id=\\\"user_confirmPassword\\\"\\r\\n                     name=\\\"user_confirmPassword\\\"\\r\\n                     type=\\\"password\\\"\\r\\n                     #user_confirmPassword=\\\"ngModel\\\"\\r\\n                     [(ngModel)]=\\\"model.user.confirmPassword\\\"\\r\\n                     validateEqual=\\\"user_newPassword\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"!(user_newPassword.dirty && user_confirmPassword.dirty) || !(user_confirmPassword.dirty && user_confirmPassword.errors?.validateEqual)\\\">\\r\\n                {{ 'Register.ConfirmPasswordRequired' | translate }}\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_question01\\\">{{ 'Register.SecurityQuestion1' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : !isUser && (user_question01.dirty && (!user_question01.valid || user_question01.errors || user_question01.selectedIndex == 0)) }\\\">\\r\\n              <select id=\\\"user_question01\\\" name=\\\"user_question01\\\" #user_question01=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.question01\\\" class=\\\"form-control\\\" required validateNotEqual=\\\"user_question02\\\" reverse=\\\"true\\\">\\r\\n                <option *ngFor=\\\"let s of securityQuestions01\\\" [ngValue]=\\\"s.referenceEnglishId\\\" [selected]=\\\"user_question01 == s.referenceEnglishId\\\">{{ s.question | translate }}</option>\\r\\n              </select>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"isUser || !((user_question01.dirty || user_answer01.dirty) && (!user_question01.valid || user_question01.errors || user_question01.selectedIndex == 0))\\\">{{ 'Register.QuetionValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_answer01\\\">{{ 'Register.Answer' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : !isUser && ((user_answer01.dirty || user_question01.dirty) && (!user_answer01.valid || user_answer01.errors)) }\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"user_answer01\\\" name=\\\"user_answer01\\\" type=\\\"text\\\" #user_answer01=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.answer01\\\" required minlength=\\\"3\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"isUser || !((user_answer01.dirty || user_question01.dirty) && (!user_answer01.valid || user_answer01.errors))\\\">{{ 'Register.AnswerValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_question02\\\">{{  'Register.SecurityQuestion2' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : !isUser && ((user_question02.dirty || user_answer02.dirty) && (!user_question02.valid || user_question02.errors || user_question02.selectedIndex == 0)) }\\\">\\r\\n              <select id=\\\"user_question02\\\" name=\\\"user_question02\\\" #user_question02=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.question02\\\" class=\\\"form-control\\\" required validateNotEqual=\\\"user_question01\\\">\\r\\n                <option *ngFor=\\\"let s of securityQuestions02\\\" [ngValue]=\\\"s.referenceEnglishId\\\" [selected]=\\\"user_question02 == s.referenceEnglishId\\\">{{ s.question | translate }}</option>\\r\\n              </select>\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"isUser || !((user_question02.dirty || user_answer02.dirty) && (!user_question02.valid || user_question02.errors || user_question02.selectedIndex == 0))\\\">{{ 'Register.QuetionValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"user_answer02\\\">{{ 'Register.Answer'  | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n            <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : !isUser && ((user_answer02.dirty || user_question02.dirty) && (!user_answer02.valid || user_answer02.errors)) }\\\">\\r\\n              <input class=\\\"form-control\\\" id=\\\"user_answer02\\\" name=\\\"user_answer02\\\" type=\\\"text\\\" #user_answer02=\\\"ngModel\\\" [(ngModel)]=\\\"model.user.answer02\\\" required minlength=\\\"3\\\" />\\r\\n              <span class=\\\"errorMessage\\\" [hidden]=\\\"isUser || !((user_answer02.dirty || user_question02.dirty) && (!user_answer02.valid || user_answer02.errors))\\\">{{ 'Register.AnswerValidation' | translate }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"sa-inline-field\\\">\\r\\n              <input type=\\\"checkbox\\\" id=\\\"user_termsAccepted\\\" name=\\\"user_termsAccepted\\\" #user_termsAccepted=\\\"ngModel\\\" class=\\\"sa-radio-button\\\" [(ngModel)]=\\\"model.user.termsAccepted\\\" required />\\r\\n              <label class=\\\"sa-radio-button-text-spacer\\\" style=\\\"padding-top: 5px;\\\" for=\\\"user_termsAccepted\\\">\\r\\n                {{ 'Register.PrivacyandTermsofUse' | translate }} <span>\\r\\n\\r\\n                  <a href=\\\"https://www.scentair.com/legal/privacy.html\\\" target=\\\"_blank\\\">{{ 'Register.Privacy' | translate }}</a>\\r\\n                </span>&nbsp;{{ 'Register.And' | translate }}&nbsp;<span>\\r\\n                  <a href=\\\"https://www.scentair.com/legal/termsofuse.html\\\" target=\\\"_blank\\\">{{ 'Register.TermsofUse'  | translate }} </a> {{ 'Register.PrivacyandTermsofUseRemaining'  | translate }}\\r\\n                </span>.<span class=\\\"sa-required-text\\\">*</span>\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"sa-button-form-spacer\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\" [disabled]=\\\"isLoading || !f.valid\\\"><i *ngIf=\\\"isLoading\\\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Registering...'  : 'Register.SaveLoginButton'  | translate}}</button>\\r\\n              <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" type=\\\"reset\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"cancel()\\\">{{ 'Register.CANCELButton' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"!isAccount\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"sa-button-form-spacer\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\" [disabled]=\\\"(isLoading  || !f.valid) || !captchaSuccess\\\">\\r\\n              <i *ngIf=\\\"isLoading\\\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Looking up account...' : 'Register.LookupAccount' | translate}}\\r\\n            </button>\\r\\n            <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"cancel()\\\">{{ 'Register.CANCEL' | translate }}</button>\\r\\n             \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy, Input, EventEmitter, Output, OnChanges, ViewChild } from \"@angular/core\";\r\nimport { FormsModule, NgForm, NgModel, ValidationErrors, FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { Router } from \"@angular/router\";\r\nimport { Location } from '@angular/common';\r\nimport { forEach } from \"@angular/router/src/utils/collection\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\n\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { ConfigurationService } from '../../services/configuration.service';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { register } from '../../models/register.model';\r\nimport { Account } from '../../models/account.model';\r\nimport { Address } from '../../models/address.model';\r\nimport { SecurityQuestion } from \"../../models/security-questions.model\";\r\nimport { User } from \"../../models/user.model\";\r\nimport { modelState } from \"../../models/ctp.interface\";\r\nimport { element } from \"protractor\";\r\nimport { LocalStoreManager } from '../../services/local-store-manager.service';\r\nimport { DBkeys } from '../../services/db-Keys';\r\nimport { AppTranslationService } from \"../../services/app-translation.service\";\r\nimport { LanguageObservableService } from \"../../services/language-observable.service\";\r\nimport { ReCaptcha2Component } from \"../../../../GoogleCaptcha/ngx-captcha-lib/src/lib\";\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  model: register;\r\n  @Input() data: register;\r\n  @Output() submit = new EventEmitter();\r\n  registerSubscription: Subscription;\r\n  isAcctNoPopoverVisible: boolean;\r\n  isPinNoPopoverVisible: boolean;\r\n  isUsernamePopoverVisible: boolean;\r\n  isPasswordPopoverVisible: boolean;\r\n  here: boolean = false;\r\n  errorMessage: string =\"\";\r\n  private selectedLanguage: string;\r\n\r\n  isLoading = false;\r\n  isEdit = false;\r\n  isError = false;\r\n  isAccount = false;\r\n  isUser = false;\r\n  @Input() isModal = false;\r\n\r\n  errors: string[];\r\n  formResetToggle = true;\r\n\r\n  modalClosedCallback: () => void;\r\n\r\n  securityQuestions01: SecurityQuestion[];\r\n  securityQuestions02: SecurityQuestion[];\r\n\r\n  public captchaIsLoaded = false;\r\n  public captchaSuccess = false;\r\n  public captchaIsExpired = false;\r\n  public captchaResponse?: string;\r\n  public siteKey: string = '';\r\n  public useGlobalDomain: boolean = false;\r\n  public aFormGroup: FormGroup;\r\n  @ViewChild('captchaElem') captchaElem: ReCaptcha2Component;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private configurations: ConfigurationService,\r\n    private router: Router,\r\n    private location: Location, private localStorage: LocalStoreManager, private translationService: AppTranslationService, public userInfoService: LanguageObservableService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n     \r\n    //Prod\r\n    this.siteKey = '6LforZoUAAAAAJPt4NAqNpmu5rvY_zsfzNigCAsn';\r\n    //Stage\r\n    // this.siteKey = '6LdSmZgUAAAAAA-RJe4UxWSoYMx9_lrHsah1P8xT';\r\n    //Local\r\n    //this.siteKey = '6LdNz5cUAAAAAIO1jk77YhsJdZspLzqxC4U8kLSH';\r\n\r\n\r\n    this.securityQuestions01 = [];\r\n    this.securityQuestions02 = [];\r\n    this.errors = [];\r\n    this.isEdit = false;\r\n    this.setForm();\r\n\r\n\r\n    //if (this.getShouldRedirect()) {\r\n    //  this.authService.redirectLoginUser();\r\n    //}\r\n    //else {\r\n    //  this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\r\n    //    if (this.getShouldRedirect()) {\r\n    //      this.authService.redirectLoginUser();\r\n    //    }\r\n    //  });\r\n    //}\r\n\r\n    if (this.localStorage.exists(DBkeys.LANGUAGE)) {\r\n      this.selectedLanguage = this.localStorage.getDataObject<string>(DBkeys.LANGUAGE);\r\n    } else {\r\n      this.selectedLanguage = 'en';\r\n    }\r\n \r\n\r\n    this.accountService.getQuestions(this.selectedLanguage).subscribe(a => a.forEach(x => {\r\n      this.securityQuestions01.push(x);\r\n      this.securityQuestions02.push(x);\r\n    }));\r\n\r\n    this.userInfoService.languageStream$.subscribe(lang => {\r\n      if (this.selectedLanguage != lang) {\r\n        this.selectedLanguage = lang;\r\n        this.getQuestions(lang);\r\n      }\r\n    });\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.registerSubscription) {\r\n      this.registerSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public getQuestions(language) {\r\n    this.securityQuestions01 = [];\r\n    this.securityQuestions02 = [];\r\n    this.accountService.getQuestions(language).subscribe(a => {\r\n      if (a && a.length > 0) {\r\n        this.securityQuestions01 = a;\r\n        this.securityQuestions02 = a;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private setForm() {\r\n    if (!this.isEdit) {\r\n      this.model = new register();\r\n    } else {\r\n      this.model = new register(\r\n        this.data.user,\r\n        this.data.account\r\n      );\r\n\r\n      this.isAccount = this.model.account &&\r\n                       this.model.account.name &&\r\n                       this.model.account.number &&\r\n                       this.model.account.name.length > 0 &&\r\n                       this.model.account.number.length > 0;\r\n      this.isUser    = this.model.user &&\r\n                       this.model.user.id &&\r\n                       this.model.user.id.length > 0;\r\n\r\n      this.isError = this.errors !== null && this.errors.length > 0;\r\n      this.isLoading = false;\r\n\r\n      setTimeout(() => {\r\n        const eventObj = {\r\n          isEdit: this.isEdit,\r\n          data: this.model,\r\n          errors: this.errors,\r\n          isAccount: this.isAccount,\r\n        };\r\n        this.submit.emit(eventObj);\r\n\r\n\r\n        if (this.isAccount && this.isUser)\r\n          this.router.navigate(['/register/confirmation']);\r\n\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  \r\n  closeModal() {\r\n    if (this.modalClosedCallback) {\r\n      this.modalClosedCallback();\r\n    }\r\n  }\r\n  offerAlternateHost() {\r\n\r\n  }\r\n  reset() {\r\n    this.formResetToggle = false;\r\n\r\n    this.errors = [];    \r\n    this.isLoading = false;\r\n\r\n    setTimeout(() => {\r\n      this.formResetToggle = true;\r\n    });\r\n  }\r\n\r\n\r\n  private handleSubmitSuccess(res: register) {\r\n    this.isLoading = false;\r\n    this.data = res;\r\n    this.isEdit = true;\r\n    this.errors = [];\r\n\r\n    this.setForm();\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n    \r\n    var error = serverError.length > 0 ? serverError[0].includes(\"already\") : false;\r\n    if (error) {\r\n      this.errorMessage = \"Register.ErrorMessage1\";\r\n      this.here = true;\r\n    }\r\n    else\r\n    {\r\n      this.errorMessage = \"Register.ErrorMessage2\";\r\n      this.here = false;\r\n    }\r\n    \r\n    this.isLoading = false;\r\n    this.setForm();\r\n    this.captchaReset();\r\n  }\r\n\r\n\r\n  register() {\r\n    this.isLoading = true;\r\n    \r\n\r\n    this.registerSubscription = this.accountService.register(this.model)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        err => this.handleSubmitError(err)\r\n      );\r\n  }\r\n\r\n  cancel() {\r\n    this.location.back();\r\n  }\r\n\r\n  toggleAcctNoPopover(e) {\r\n    this.isAcctNoPopoverVisible = !this.isAcctNoPopoverVisible;\r\n    return this.isAcctNoPopoverVisible;\r\n  }\r\n\r\n  togglePinNoPopover(e) {\r\n    this.isPinNoPopoverVisible = !this.isPinNoPopoverVisible;\r\n    return this.isPinNoPopoverVisible;\r\n  }\r\n\r\n  toggleUsernamePopover(e) {\r\n    this.isUsernamePopoverVisible = !this.isUsernamePopoverVisible;\r\n    return this.isUsernamePopoverVisible;\r\n  }\r\n\r\n  togglePasswordPopover(e) {\r\n    this.isPasswordPopoverVisible = !this.isPasswordPopoverVisible;\r\n    return this.isPasswordPopoverVisible;\r\n  }\r\n\r\n  \r\n  captchaHandleReset(): void {\r\n    this.captchaSuccess = false;\r\n    this.captchaResponse = undefined;\r\n    this.captchaIsExpired = false;\r\n     \r\n  }\r\n\r\n  captchaReset(): void {\r\n    this.captchaElem.resetCaptcha();\r\n  }\r\n\r\n  CaptchaHandleSuccess(captchaResponse: string): void {\r\n    this.captchaSuccess = true;\r\n    this.captchaResponse = captchaResponse;\r\n    this.captchaIsExpired = false;\r\n  }\r\n\r\n  captchaHandleLoad(): void {\r\n    this.captchaIsLoaded = true;\r\n    this.captchaIsExpired = false;\r\n  }\r\n\r\n  captchaHandleExpire(): void {\r\n    this.captchaSuccess = false;\r\n    this.captchaIsExpired = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container sa-container-minsize sa-header-margin\\\">\\r\\n\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md=12\\\">\\r\\n        <div class=\\\"sa-heading-text\\\">{{ 'Password Reset' | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 has-feedback has-error\\\">\\r\\n        <div *ngFor=\\\"let err of errors\\\" class=\\\"errorMessage\\\">{{ err | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </header>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!isConfirmed\\\">\\r\\n  <form class=\\\"form\\\" name=\\\"f\\\" id=\\\"f\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"resetPassword()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"userName\\\">{{ 'Username' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (userName.dirty && (!userName.valid || userName.errors)) }\\\">\\r\\n          <input class=\\\"form-control\\\" id=\\\"userName\\\" name=\\\"userName\\\" type=\\\"text\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"model.userName\\\" required minlength=\\\"6\\\" />\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(userName.dirty && (!userName.valid || userName.errors))\\\">{{ 'Username is required' | translate }}{{ model.userName?.messages}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"newPassword\\\">{{ 'New Password' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (newPassword.dirty && newPassword.valid) }\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"newPassword\\\"\\r\\n                 name=\\\"newPassword\\\"\\r\\n                 type=\\\"password\\\"\\r\\n                 #newPassword=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"model.newPassword\\\"\\r\\n                 required\\r\\n                 minlength=\\\"8\\\"\\r\\n                 pattern=\\\"^(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\\\\D*\\\\d)(?=[a-zA-Z0-9]*[^a-zA-Z0-9]).+\\\"\\r\\n                 validateEqual=\\\"confirmPassword\\\" reverse=\\\"true\\\" />\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && newPassword.errors?.required)\\\">\\r\\n            {{ 'Password is required' | translate }}\\r\\n            <br />\\r\\n          </span>\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && newPassword.errors?.minlength)\\\">\\r\\n            {{ 'Password must be at least 8 characters' | translate }}\\r\\n            <br />\\r\\n          </span>\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && !newPassword.errors?.minlength && newPassword.errors?.pattern)\\\">\\r\\n            {{ 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special charater' | translate }}\\r\\n            <br />\\r\\n          </span>\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && confirmPassword.dirty) || !(newPassword.dirty && newPassword.errors?.validateEqual)\\\">\\r\\n            {{ 'Password does not match confirmation' | translate }}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"confirmPassword\\\">{{ 'Confirm Password' | translate }}<span class=\\\"sa-required-text\\\">*</span></label>\\r\\n        <div class=\\\"has-feedback\\\" [ngClass]=\\\"{ 'has-error' : (newPassword.dirty || confirmPassword.dirty) && (newPassword.valid && !confirmPassword.valid) }\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"confirmPassword\\\"\\r\\n                 name=\\\"confirmPassword\\\"\\r\\n                 type=\\\"password\\\"\\r\\n                 #confirmPassword=\\\"ngModel\\\"\\r\\n                 [(ngModel)]=\\\"model.confirmPassword\\\"\\r\\n                 required\\r\\n                 validateEqual=\\\"newPassword\\\" />\\r\\n          <span class=\\\"errorMessage\\\" [hidden]=\\\"!(newPassword.dirty && confirmPassword.dirty) || !(confirmPassword.dirty && confirmPassword.errors?.validateEqual)\\\">\\r\\n            {{ 'Confirmation of password is required' | translate }}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"sa-button-form-spacer\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\" [disabled]=\\\"isLoading || !f.valid\\\">\\r\\n            <i *ngIf=\\\"isLoading\\\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Changing Password...' : 'Change Password'}}\\r\\n          </button>\\r\\n          <button class=\\\"btn-primary btn btn-lg sa-btn-header-color\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"cancel()\\\">{{ 'CANCEL' | translate }}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isConfirmed\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        Your password has been reset.<br /><br />\\r\\n      </div>\\r\\n      <div>\\r\\n        <p>\\r\\n          <a routerLink=\\\"/login\\\">{{ 'Login' | translate }}</a> to view account details, make payments and add additional users.\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isConfirmed\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <a routerLink=\\\"/login\\\" title=\\\"{{ 'Login' | translate }}\\\" class=\\\"btn btn-lg btn-primary sa-btn-header-color\\\">{{ 'Login' | translate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <br /><br /><br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        AMERICAS: Toll free: <a href=\\\"tel:+8667236824\\\">+866-723-6824</a> or <a href=\\\"tel:+17045042320\\\">+1 704-504-2320</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        EMEA: <a href=\\\"tel:+330562576320\\\">+33 (0)5 62 57 63 20</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        UK: <a href=\\\"tel:+4401628601650\\\">+44 (0) 1628-601650</a>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div>\\r\\n        APAC: <a href=\\\"tel:+85362625256\\\">+(853) 626-25256</a> or <a href=\\\"tel:+(852) 356-35566\\\">(852) 356-35566</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { Location } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Utilities } from '../../services/utilities';\r\nimport { UserEdit } from '../../models/user-edit.model';\r\nimport { fadeInOut } from '../../services/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  errors: any[] = [];\r\n  isLoading = false;\r\n  isConfirmed = false;\r\n\r\n  model: {\r\n    userName: string,\r\n    newPassword: string,\r\n    confirmPassword: string\r\n  };\r\n\r\n    userId: string;\r\n    code: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location)\r\n  {\r\n  }\r\n\r\n  ngOnInit() {\r\n    let userId = this.route.snapshot.paramMap.get('id');\r\n    let code = this.route.snapshot.paramMap.get('code');\r\n\r\n    this.model = {\r\n      userName: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    };\r\n\r\n    this.userId = userId;\r\n    this.code = code;\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  resetPassword() {\r\n    this.isLoading = true;\r\n\r\n    this.accountService.confirmForgotPassword(this.code, this.model.userName, this.model.newPassword)\r\n      .subscribe(\r\n        data => this.handleSubmitSuccess(data),\r\n        error => this.handleSubmitError(error));\r\n  }\r\n\r\n  private handleSubmitSuccess(res: boolean) {\r\n    this.errors = [];\r\n    this.isLoading = false;\r\n\r\n    this.isConfirmed = true;\r\n  }\r\n  private handleSubmitError(err: HttpErrorResponse) {\r\n    const serverError = Utilities.getHttpErrors(err);\r\n\r\n    this.errors = serverError;\r\n    this.isConfirmed = false;\r\n    this.isLoading = false;\r\n  }\r\n\r\n}\r\n","module.exports = \".side-menu {\\r\\n  min-width: 120px;\\r\\n}\\r\\n\\r\\n.separator-hr {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n[hidden] {\\r\\n  display: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <header class=\\\"pageHeader\\\">\\r\\n    <h3><i class=\\\"fa fa-cog fa-lg page-caption\\\" aria-hidden=\\\"true\\\"></i> {{'pageHeader.Settings' | translate}}</h3>\\r\\n  </header>\\r\\n\\r\\n  <div [@fadeInOut] class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2 side-menu\\\">\\r\\n      <ul bootstrapTab #tab=\\\"bootstrap-tab\\\" class=\\\"nav nav-tabs tabs-left\\\" (showBSTab)=\\\"onShowTab($event)\\\">\\r\\n        <li class=\\\"active\\\">\\r\\n          <a id=\\\"profileTab\\\" [routerLink]=\\\"[]\\\" fragment=\\\"profile\\\" href=\\\"#profile\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-user-circle-o fa-fw\\\" aria-hidden=\\\"true\\\"></i> {{'settings.tab.Profile' | translate}}</a>\\r\\n        </li>\\r\\n        <!--<li>\\r\\n          <a id=\\\"preferencesTab\\\" [routerLink]=\\\"[]\\\" fragment=\\\"preferences\\\" href=\\\"#preferences\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-sliders fa-fw\\\" aria-hidden=\\\"true\\\"></i> {{'settings.tab.Preferences' | translate}}</a>\\r\\n        </li>-->\\r\\n        <li [hidden]=\\\"!canViewUsers\\\">\\r\\n          <a id=\\\"usersTab\\\" [routerLink]=\\\"[]\\\" fragment=\\\"users\\\" href=\\\"#users\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-users fa-fw\\\" aria-hidden=\\\"true\\\"></i> {{'settings.tab.Users' | translate}}</a>\\r\\n        </li>\\r\\n        <li [hidden]=\\\"!canViewRoles\\\">\\r\\n          <a id=\\\"rolesTab\\\" [routerLink]=\\\"[]\\\" fragment=\\\"roles\\\" href=\\\"#roles\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-shield fa-fw\\\" aria-hidden=\\\"true\\\"></i> {{'settings.tab.Roles' | translate}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\" id=\\\"profile\\\">\\r\\n          <h4>{{'settings.header.UserProfile' | translate}}</h4>\\r\\n          <hr class=\\\"separator-hr\\\" />\\r\\n          <div [@fadeInOut] *ngIf=\\\"isProfileActivated\\\" class=\\\"content-container\\\">\\r\\n            <user-info></user-info>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"tab-pane\\\" id=\\\"preferences\\\">\\r\\n          <h4>{{'settings.header.UserPreferences' | translate}}</h4>\\r\\n          <hr class=\\\"separator-hr\\\" />\\r\\n          <div [@fadeInOut] *ngIf=\\\"isPreferencesActivated\\\" class=\\\"content-container\\\">\\r\\n            <user-preferences></user-preferences>\\r\\n          </div>\\r\\n        </div>-->\\r\\n\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"users\\\">\\r\\n          <h4>{{'settings.header.UsersManagements' | translate}}</h4>\\r\\n          <hr class=\\\"separator-hr\\\" />\\r\\n          <div [@fadeInOut] *ngIf=\\\"canViewUsers && isUsersActivated\\\" class=\\\"content-container\\\">\\r\\n            <users-management></users-management>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"roles\\\">\\r\\n          <h4>{{'settings.header.RolesManagement' | translate}}</h4>\\r\\n          <hr class=\\\"separator-hr\\\" />\\r\\n          <div [@fadeInOut] *ngIf=\\\"canViewRoles && isRolesActivated\\\" class=\\\"content-container\\\">\\r\\n            <roles-management></roles-management>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\nimport { fadeInOut } from '../../services/animations';\r\nimport { BootstrapTabDirective } from \"../../directives/bootstrap-tab.directive\";\r\nimport { AccountService } from \"../../services/account.service\";\r\nimport { Permission } from '../../models/permission.model';\r\n\r\n\r\n@Component({\r\n  selector: 'settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n\r\n  isProfileActivated = true;\r\n  isPreferencesActivated = false;\r\n  isUsersActivated = false;\r\n  isRolesActivated = false;\r\n\r\n  fragmentSubscription: any;\r\n\r\n  readonly profileTab = \"profile\";\r\n  readonly preferencesTab = \"preferences\";\r\n  readonly usersTab = \"users\";\r\n  readonly rolesTab = \"roles\";\r\n\r\n\r\n  @ViewChild(\"tab\")\r\n  tab: BootstrapTabDirective;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private accountService: AccountService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.fragmentSubscription.unsubscribe();\r\n  }\r\n\r\n  showContent(anchor: string) {\r\n    if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||\r\n      (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles))\r\n      return;\r\n\r\n    this.tab.show(`#${anchor || this.profileTab}Tab`);\r\n  }\r\n\r\n\r\n  isFragmentEquals(fragment1: string, fragment2: string) {\r\n\r\n    if (fragment1 == null)\r\n      fragment1 = \"\";\r\n\r\n    if (fragment2 == null)\r\n      fragment2 = \"\";\r\n\r\n    return fragment1.toLowerCase() == fragment2.toLowerCase();\r\n  }\r\n\r\n\r\n  onShowTab(event) {\r\n    let activeTab = event.target.attributes[\"fragment\"].value;\r\n\r\n    this.isProfileActivated = activeTab == this.profileTab;\r\n   // this.isPreferencesActivated = activeTab == this.preferencesTab;\r\n    this.isUsersActivated = activeTab == this.usersTab;\r\n    this.isRolesActivated = activeTab == this.rolesTab;\r\n  }\r\n\r\n\r\n  get canViewUsers() {\r\n    return this.accountService.userHasPermission(Permission.viewUsersPermission);\r\n  }\r\n\r\n  get canViewRoles() {\r\n    return this.accountService.userHasPermission(Permission.viewRolesPermission);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"min-height: 500px;\\\">\\r\\n  <div *ngIf=\\\"isLoggedIn\\\" style=\\\" margin-top: 35px;\\\">\\r\\n    &nbsp;\\r\\n  </div>\\r\\n  <header class=\\\"pageHeader\\\"></header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"sa-heading-text\\\">\\r\\n        Terms &amp; Conditions\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <!--<h3>\\r\\n      Effective date: August 21, 2018\\r\\n    </h3>\\r\\n    <p>\\r\\n      ScentAir (“us”, “we”, or “our”) operates the portal.scentair.com website (hereinafter referred to as the “Service”).\\r\\n    </p>\\r\\n    <p>\\r\\n      This page informs you of our policies regarding the collection, use and disclosure of personal data when you use our Service and the choices you have associated with that data.\\r\\n    </p>\\r\\n    <p>\\r\\n      We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, the terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from portal.scentair.com\\r\\n    </p>\\r\\n\\r\\n      Definitions\\r\\n      <ul>\\r\\n        <li>\\r\\n          Service is the portal.scentair.com website operated by ScentAir\\r\\n        </li>\\r\\n        <li>\\r\\n          Personal DataPersonal Data means data about a living individual who can be identified from those data (or from those and other information either in our possession or likely to come into our possession).\\r\\n        </li>\\r\\n        <li>\\r\\n          Usage DataUsage Data is data collected automatically either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).\\r\\n        </li>\\r\\n        <li>\\r\\n          CookiesCookies are small files stored on your device (computer or mobile device).\\r\\n        </li>\\r\\n        <li>\\r\\n          Data ControllerData Controller means the natural or legal person who (either alone or jointly or in common with other persons) determines the purposes for which and the manner in which any personal information are, or are to be, processed.For the purpose of this Privacy Policy, we are a Data Controller of your Personal Data.\\r\\n        </li>\\r\\n        <li>\\r\\n          Data Processors (or Service Providers)Data Processor (or Service Provider) means any natural or legal person who processes the data on behalf of the Data Controller.We may use the services of various Service Providers in order to process your data more effectively.\\r\\n        </li>\\r\\n        <li>\\r\\n          Data Subject (or User)Data Subject is any living individual who is using our Service and is the subject of Personal Data.\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n  -->\\r\\n        <div class=\\\"row\\\" style=\\\"text-align:center;\\\"><span style=\\\"font-size:large;font-weight:bold;\\\">ScentAir Electronic Payment Terms and Conditions</span></div>\\r\\n        <br />\\r\\n        <span style=\\\"font-weight:bold;\\\">BY CHECKING THE BOX,</span> Authorized Agent (“Agent”): <span style=\\\"font-weight:bold;\\\">(a) certifies</span> that Agent (i) is authorized to sign and legally bind Subscriber to contracts and to select Subscriber’s recurring Payment Type, and (ii) has corrected any errors in the above fields and will supply accurate details about Subscriber’s Payment Type in the subsequent screens that are provided by Chase Paymentech; <span style=\\\"font-weight:bold;\\\">(b) signs</span> the below “Enrollment & Authorization of Recurring Payments” (“<span style=\\\"font-weight:bold;\\\">Authorization</span>”) on behalf of Subscriber, which Authorization is incorporated herein;\\r\\n        <br />\\r\\n        <span style=\\\"font-weight:bold;\\\">(c) certifies</span> that Agent (i) has made a copy of the Authorization for Subscriber's records, and (ii) confirms Subscriber's signature and delivers the Authorization for ScentAir's acceptance (in its discretion); and <span style=\\\"font-weight:bold;\\\">(d) consents</span> to the processing of any outstanding balance on Subscriber’s account and understands that the enrolled credit card will be charged in that amount without any further authorization.\\r\\n        <br /><br /> <div class=\\\"row\\\" style=\\\"text-align:center;\\\"> <span style=\\\"text-align:center;font-size:large;font-style:italic;\\\">Enrollment & Authorization of Recurring Payments (“Authorization”)</span><br /><br /></div>\\r\\n        <span style=\\\"font-weight:bold;color:red;\\\">General Terms:</span> The Subscriber named in the “Environmental Scent Service Agreement” (“ESS”) between Subscriber and ScentAir, hereby authorizes ScentAir, for the term of the ESS, to obtain funds from the “Payment Type” selected above for purposes of paying amounts, including late charges and other fees, now or later due from Subscriber as specified in ScentAir invoices (“<span style=\\\"font-weight:bold;\\\">Invoice Amounts</span>”). Subscriber agrees that all ESS-related transactions are and will always be primarily for business purposes and that Subscriber is and will remain the owner of the bank, or credit card, account specified during enrollment (“<span style=\\\"font-weight:bold;\\\">Enrollment Screens</span>”). Subscriber agrees that this Authorization will remain in effect until subscriber cancels it by providing notice via the below “Cancellation Mechanism” at least fifteen (15) days prior to the next invoice billing date. Subscriber agrees that it will still owe the Invoice Amount(s) to the extent ScentAir is not able to obtain payment via Subscriber’s Payment Type. ScentAir reserves all rights. As used above, “Cancellation Mechanism” means notice to ScentAir either (a) at 3810 Shutterfly Road, Suite 900, Charlotte, NC 28217 by certified mail, or (b) via email at <a href=\\\"mailto:customercare@scentair.com\\\">customercare@scentair.com</a>, which notice shall state (i) the date of notice delivery and Subscriber’s Customer ID #, (ii) the effective date for cancellation of the recurring payment method, and (iii) the payment method Subscriber will use post-cancellation.\\r\\n        <br /><br />\\r\\n        Subscriber further agrees:\\r\\n        <br /><br />\\r\\n        <span style=\\\"font-weight:bold;color:red;\\\">ACH Authorization.</span> If the “Payment Type” is “ACH CCD,” Subscriber agrees to the General Terms and to the rules of the National Automated Clearinghouse (“NACHA” or “ACH”) now or later in effect. In addition, Subscriber authorizes ScentAir to debit the Invoice Amounts (which may vary in amount) on, or shortly before or after, the invoice due date from the bank account indicated in the Enrollment Screens (as updated). Subscriber agrees to: (a) timely notify ScentAir of any changes in Subscriber’s account information; and (b) reimburse ScentAir for all penalties and fees incurred as a result of any rejection of ScentAir’s request for account funds for any reason, including insufficient or unavailable funds or as a result of the account not being properly configured (such as for ACH transactions). Subscriber agrees that if an Invoice Amount is returned unpaid: (a) ScentAir may at its discretion attempt to process it as allowed by applicable NACHA rules, and (b) ScentAir may also make an ACH debit for a returned item fee of at least $4.50 or any greater amount that ScentAir is directly or indirectly obligated by NACHA rules to bear in relation to returned items.\\r\\n        <br /><br /><span style=\\\"font-weight:bold;color:red;\\\">Credit Card Authorization. </span> If the “Payment Type” is “Credit Card,” Subscriber agrees to the General Terms. Subscriber also agrees to all terms of the ACH Authorization, except that the NACHA rules will not apply and these differences will apply: (i) the account will be Subscriber’s credit card account instead of its bank account and if a charge is rejected, ScentAir will not resubmit the charge or seek a returned item fee except as allowed by applicable card brand rules; and (ii) Subscriber acknowledges ScentAir’s cancellation and refund policies regarding ScentAir products.\\r\\n        This Authorization supplements the ESS by providing the method and terms for payment by Subscriber of amounts due under the ESS.\\r\\n\\r\\n        <br /><br /><span style=\\\"font-weight:bold;color:red;\\\">Privacy.</span> Subscriber agrees to the terms contained in ScentAir’s Privacy Policy https://www.scentair.com/legal/privacy as they may be updated from time to time and agrees that it will refer to https://www.scentair.com/legal/privacy.html for all information related to ScentAir’s Privacy Policy and any additional rights Subscriber may have related to these Terms and Conditions and this Authorization, as well as any rights related to Subscriber’s data in general.\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInOut } from '../../services/animations';\r\n\r\n\r\n@Component({\r\n  selector: 'terms',\r\n  templateUrl: './terms.component.html',\r\n  styleUrls: ['./terms.component.css'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class TermsComponent implements OnInit {\r\n\r\n  \r\n\r\n  constructor() {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements OnInit {\r\n    constructor(public elementRef: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        setTimeout(() => this.elementRef.nativeElement['focus'](), 500);\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Directive({\r\n  selector: '[bootstrapDatepicker]',\r\n  exportAs: 'bootstrap-datepicker'\r\n})\r\nexport class BootstrapDatepickerDirective implements OnInit, OnDestroy {\r\n\r\n  private _isShown = false;\r\n  private updateTimeout;\r\n  private changedSubscription: Subscription;\r\n  private shownSubscription: Subscription;\r\n  private hiddenSubscription: Subscription;\r\n\r\n  get isShown() {\r\n    return this._isShown;\r\n  }\r\n\r\n  @Input()\r\n  options = {};\r\n\r\n  @Input()\r\n  set ngModel(value) {\r\n    this.tryUpdate(value);\r\n  }\r\n\r\n\r\n  @Output()\r\n  ngModelChange = new EventEmitter();\r\n\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.changedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe((e: any) => setTimeout(() => this.ngModelChange.emit(e.target.value)));\r\n    this.shownSubscription = fromEvent($(this.el.nativeElement), 'show').subscribe((e: any) => this._isShown = true);\r\n    this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hide').subscribe((e: any) => this._isShown = false);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.initialize(this.options);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n\r\n\r\n\r\n  initialize(options?: any) {\r\n    $(this.el.nativeElement).datepicker(options);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.changedSubscription) {\r\n      this.changedSubscription.unsubscribe();\r\n      this.shownSubscription.unsubscribe();\r\n      this.hiddenSubscription.unsubscribe();\r\n    }\r\n\r\n    $(this.el.nativeElement).datepicker('destroy');\r\n  }\r\n\r\n\r\n\r\n  show() {\r\n    $(this.el.nativeElement).datepicker('show');\r\n  }\r\n\r\n\r\n  hide() {\r\n    $(this.el.nativeElement).datepicker('hide');\r\n  }\r\n\r\n\r\n  toggle() {\r\n    this.isShown ? this.hide() : this.show();\r\n  }\r\n\r\n\r\n  private tryUpdate(value) {\r\n\r\n    clearTimeout(this.updateTimeout);\r\n\r\n    if (!$(this.el.nativeElement).is(\":focus\")) {\r\n      this.update(value);\r\n    } else {\r\n      this.updateTimeout = setTimeout(() => {\r\n        this.updateTimeout = null;\r\n        this.tryUpdate(value);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  update(value) {\r\n    setTimeout(() => $(this.el.nativeElement).datepicker('update', value));\r\n  }\r\n\r\n\r\n  setDate(value) {\r\n    setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));\r\n  }\r\n\r\n\r\n  setUTCDate(value) {\r\n    setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));\r\n  }\r\n\r\n\r\n  clearDates() {\r\n    setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));\r\n  }\r\n\r\n\r\n  getDate() {\r\n    $(this.el.nativeElement).datepicker('getDate');\r\n  }\r\n\r\n\r\n  getUTCDate() {\r\n    $(this.el.nativeElement).datepicker('getUTCDate');\r\n  }\r\n}\r\n","import { Directive, Attribute, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Directive({\r\n  selector: '[bootstrapSelect]',\r\n  exportAs: 'bootstrap-select'\r\n})\r\nexport class BootstrapSelectDirective implements OnInit, OnDestroy {\r\n\r\n  private oldValues: string | string[] = \"\";\r\n\r\n  private changedSubscription: Subscription;\r\n  private shownSubscription: Subscription;\r\n  private hiddenSubscription: Subscription;\r\n\r\n  @Input()\r\n  required: string;\r\n\r\n  @Input()\r\n  set ngModel(values: string | string[]) {\r\n    setTimeout(() => this.selected = values);\r\n  }\r\n\r\n\r\n  @Output()\r\n  ngModelChange = new EventEmitter();\r\n\r\n  @Output()\r\n  shown = new EventEmitter();\r\n\r\n  @Output()\r\n  hidden = new EventEmitter();\r\n\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.changedSubscription = fromEvent($(this.el.nativeElement), 'changed.bs.select').subscribe((e: any) => setTimeout(() => {\r\n      if (this.checkIsValuesChanged(this.selected))\r\n        this.ngModelChange.emit(this.selected);\r\n    }));\r\n    this.shownSubscription = fromEvent($(this.el.nativeElement), 'shown.bs.select').subscribe((e: any) => setTimeout(() => this.shown.emit()));\r\n    this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.select').subscribe((e: any) => setTimeout(() => this.hidden.emit()));\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    $(this.el.nativeElement).selectpicker();\r\n\r\n    if (this.requiredAttribute)\r\n      $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');\r\n\r\n    setTimeout(() => {\r\n      this.refresh();\r\n      this.doValidation();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.changedSubscription)\r\n      this.changedSubscription.unsubscribe();\r\n\r\n    if (this.shownSubscription)\r\n      this.shownSubscription.unsubscribe();\r\n\r\n    if (this.hiddenSubscription)\r\n      this.hiddenSubscription.unsubscribe();\r\n\r\n    $(this.el.nativeElement).selectpicker('destroy');\r\n  }\r\n\r\n  private checkIsValuesChanged(newValue: string | string[]) {\r\n    return !(newValue == this.oldValues ||\r\n      (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));\r\n  }\r\n\r\n  private doValidation() {\r\n    if (this.requiredAttribute) {\r\n      $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');\r\n      $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');\r\n    }\r\n  }\r\n\r\n  private get requiredAttribute() {\r\n    return this.required === \"\" || this.required == \"true\";\r\n  }\r\n\r\n\r\n  refresh() {\r\n    setTimeout(() => {\r\n      $(this.el.nativeElement).selectpicker('refresh');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    setTimeout(() => {\r\n      $(this.el.nativeElement).selectpicker('render');\r\n    });\r\n  }\r\n\r\n\r\n  get valid(): boolean {\r\n    return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;\r\n  }\r\n\r\n\r\n  set selected(values: string | string[]) {\r\n\r\n    if (!this.checkIsValuesChanged(values))\r\n      return;\r\n\r\n    this.oldValues = this.selected;\r\n    $(this.el.nativeElement).selectpicker('val', values);\r\n    this.doValidation();\r\n  }\r\n\r\n\r\n  get selected(): string | string[] {\r\n    return $(this.el.nativeElement).selectpicker('val');\r\n  }\r\n}\r\n","import { Directive, ElementRef, Output, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\n\r\n\r\ndeclare var $: any;\r\n\r\ntype eventArg = { type: string, target: Element, relatedTarget: Element };\r\n\r\n@Directive({\r\n  selector: '[bootstrapTab]',\r\n  exportAs: 'bootstrap-tab'\r\n})\r\nexport class BootstrapTabDirective implements OnDestroy {\r\n\r\n\r\n  @Output()\r\n  showBSTab = new EventEmitter<eventArg>();\r\n\r\n  @Output()\r\n  hideBSTab = new EventEmitter<eventArg>();\r\n\r\n  private tabShownSubscription: Subscription;\r\n  private tabHiddenSubscription: Subscription;\r\n\r\n\r\n  constructor(private el: ElementRef, private zone: NgZone) {\r\n\r\n    this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab')\r\n      .subscribe((e: any) => {\r\n        this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\r\n      });\r\n\r\n    this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab')\r\n      .subscribe((e: any) => {\r\n        this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\r\n      });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.tabShownSubscription.unsubscribe();\r\n    this.tabHiddenSubscription.unsubscribe();\r\n  }\r\n\r\n\r\n  private runInZone(delegate: () => any) {\r\n    this.zone.run(() => {\r\n      delegate();\r\n    });\r\n  }\r\n\r\n\r\n  show(selector: string) {\r\n    $(selector).tab('show');\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\n\r\n\r\ndeclare var $: any;\r\n\r\n@Directive({\r\n  selector: '[bootstrapToggle]',\r\n  exportAs: 'bootstrap-toggle'\r\n})\r\nexport class BootstrapToggleDirective implements OnInit, OnDestroy {\r\n\r\n  private checkedSubscription: Subscription;\r\n\r\n  @Input()\r\n  set ngModel(value) {\r\n    this.toggle(value);\r\n  }\r\n\r\n  @Output()\r\n  ngModelChange = new EventEmitter();\r\n\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change')\r\n      .subscribe((e: any) => this.ngModelChange.emit(e.target.checked));\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n\r\n  initialize(options?: any) {\r\n    $(this.el.nativeElement).bootstrapToggle(options);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.checkedSubscription)\r\n      this.checkedSubscription.unsubscribe();\r\n\r\n    $(this.el.nativeElement).bootstrapToggle('destroy');\r\n  }\r\n\r\n  toggleOn() {\r\n    $(this.el.nativeElement).bootstrapToggle('on');\r\n  }\r\n\r\n  toggleOff() {\r\n    $(this.el.nativeElement).bootstrapToggle('off');\r\n  }\r\n\r\n  toggle(value?: boolean) {\r\n    if (value == null)\r\n      $(this.el.nativeElement).bootstrapToggle('toggle');\r\n    else\r\n      $(this.el.nativeElement).prop('checked', value).change();\r\n  }\r\n\r\n  enable() {\r\n    $(this.el.nativeElement).bootstrapToggle('enable');\r\n  }\r\n\r\n  disable() {\r\n    $(this.el.nativeElement).bootstrapToggle('disable');\r\n  }\r\n}\r\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n\r\n\r\n@Directive({\r\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\r\n    ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n    constructor( @Attribute('validateEqual') public validateEqual: string,\r\n        @Attribute('reverse') public reverse: string) {\r\n    }\r\n\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        let other = c.root.get(this.validateEqual);\r\n\r\n        if (!other)\r\n            return null;\r\n\r\n        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\r\n    }\r\n\r\n    private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\r\n        return other.value === c.value ? null : { validateEqual: true }\r\n    }\r\n\r\n    private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\r\n        if (c.value === other.value) {\r\n            if (other.errors) {\r\n                delete other.errors['validateEqual'];\r\n\r\n                if (Object.keys(other.errors).length == 0) {\r\n                    other.setErrors(null);\r\n                };\r\n            }\r\n        } else {\r\n            other.setErrors({ validateEqual: true });\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[lastElement]'\r\n})\r\nexport class LastElementDirective {\r\n    @Input()\r\n    set lastElement(isLastElement: boolean) {\r\n\r\n        if (isLastElement) {\r\n            setTimeout(() => {\r\n                this.lastFunction.emit();\r\n            });\r\n        }\r\n    }\r\n\r\n    @Output()\r\n    lastFunction = new EventEmitter();\r\n}\r\n","import { Directive, Attribute, Host } from '@angular/core';\r\nimport { Validator, AbstractControl, ValidationErrors, ValidatorFn, FormGroup, NG_VALIDATORS } from '@angular/forms';\r\nimport { ctp } from '../models/ctp.interface';\r\nimport { Component } from '@angular/compiler/src/core';\r\n\r\n//export const mserrorValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n\r\n  \r\n//  const name = control.get('name');\r\n//  const alterEgo = control.get('alterEgo');\r\n\r\n//  return name && alterEgo && name.value === alterEgo.value ? { 'identityRevealed': true } : null;\r\n//};\r\n\r\n\r\n@Directive({\r\n  selector: '[includeModelState]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS, useExisting: ModelStateDirective, multi: true\r\n  }]\r\n})\r\nexport class ModelStateDirective implements Validator {\r\n  //constructor(@Attribute('includeModelState') public includeModelState: string) { }\r\n  constructor() { }\r\n\r\n  validate(control: AbstractControl): ValidationErrors {\r\n    var ctp = null as ctp;\r\n\r\n\r\n\r\n    return null;\r\n\r\n    //var modelState = ctp.getErrors();\r\n\r\n    //var id = control['id'] || control['name'];\r\n\r\n    //var mine = modelState[id];\r\n\r\n    //return mine.errors.map(x => x.errorMessage);\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n\r\n@Directive({\r\n  selector: '[validateNotEqual][formControlName],[validateNotEqual][formControl],[validateNotEqual][ngModel]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => NotEqualValidator), multi: true }\r\n  ]\r\n})\r\nexport class NotEqualValidator implements Validator {\r\n  constructor(@Attribute('validateNotEqual') public validateNotEqual: string,\r\n    @Attribute('reverse') public reverse: string) {\r\n  }\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    let other = c.root.get(this.validateNotEqual);\r\n\r\n    if (!other)\r\n      return null;\r\n\r\n    return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\r\n  }\r\n\r\n  private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\r\n    return other.value !== c.value ? null : { validateNotEqual: true }\r\n  }\r\n\r\n  private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== other.value) {\r\n      if (other.errors) {\r\n        delete other.errors['validateNotEqual'];\r\n\r\n        if (Object.keys(other.errors).length == 0) {\r\n          other.setErrors(null);\r\n        };\r\n      }\r\n    } else {\r\n      other.setErrors({ validateNotEqual: true });\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","\r\nimport { Address } from './address.model';\r\n\r\nexport class Account {\r\n\r\n  number: string;\r\n  pin: string;\r\n  name: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n  currency: string;\r\n  //displayName: string;\r\n  //id: string;\r\n  //rpDisplayName: string;\r\n\r\n  address: Address = new Address();\r\n  \r\n}\r\n","\r\nexport class Address {\r\n  constructor(line1?: string, line2?: string, line3?: string,\r\n    municipality?: string, stateOrProvince?: string, postalCode?: string, country?: string) {\r\n\r\n    this.line1 = line1 || '';\r\n    this.line2 = line2 || '';\r\n    this.line3 = line3 || '';\r\n    this.municipality = municipality || '';\r\n    this.stateOrProvince = stateOrProvince || '';\r\n    this.postalCode = postalCode || '';\r\n    this.country = country || '';\r\n  }\r\n\r\n  public line1: string;\r\n  public line2: string;\r\n  public line3: string;\r\n  public municipality: string;\r\n  public stateOrProvince: string;\r\n  public postalCode: string;\r\n  public country: string;\r\n\r\n}\r\n","import { Utilities } from \"../services/utilities\";\r\n\r\n\r\nexport class Notification {\r\n\r\n    public static Create(data: {}) {\r\n        let n = new Notification();\r\n        Object.assign(n, data);\r\n\r\n        if (n.date)\r\n            n.date = Utilities.parseDate(n.date);\r\n\r\n        return n;\r\n    }\r\n\r\n\r\n    public id: number;\r\n    public header: string;\r\n    public body: string;\r\n    public isRead: boolean;\r\n    public isPinned: boolean;\r\n    public date: Date;\r\n}\r\n","import { Address } from \"./address.model\";\r\n\r\nexport class PaymentProfile {\r\n\r\n  \r\n  constructor(id?: string, paymentType?: string, paymentBillToName?: string,\r\n    name?: string, address?: Address, \r\n    cardCardType?: string, cardNumber?: string, cardExpirationMonth?: string, cardExpirationYear?: string, cardCCV?: string, achAccountType?: string, achAccountNumber?: string, achRoutingNumber?: string,\r\n    currentAutoPayMethod?: boolean, bank?: string, currency?: string) {\r\n\r\n    this.id = id;\r\n\r\n    this.paymentType = paymentType || '';\r\n    this.paymentBillToName = paymentBillToName || '';\r\n    this.bank = bank || '';\r\n    this.currency = currency || '';\r\n\r\n    this.name = name || '';\r\n    this.address = address || new Address();\r\n    \r\n    this.cardType = cardCardType || '';\r\n    this.cardNumber = cardNumber || '';\r\n    this.cardExpirationMonth = cardExpirationMonth || '';\r\n    this.cardExpirationYear = cardExpirationYear || '';\r\n    this.cardCCV = cardCCV || '';\r\n\r\n    this.achAccountType = achAccountType || '';\r\n    this.achAccountNumber = achAccountNumber || '';\r\n    this.achRoutingNumber = achRoutingNumber || '';\r\n\r\n    this.currentAutoPayMethod = currentAutoPayMethod || false;\r\n\r\n    this.captcha = false;\r\n  }\r\n\r\n\r\n\r\n  public id: string;\r\n  public paymentType: string;\r\n  public paymentBillToName: string;\r\n  public bank: string;\r\n  public currency: string;\r\n\r\n  public name: string;\r\n  public address: Address;\r\n  \r\n  // credit card\r\n  public cardType: string;\r\n  public cardNumber: string;\r\n  public cardExpirationMonth: string;\r\n  public cardExpirationYear: string;\r\n  public cardCCV: string;\r\n\r\n  // ACH\r\n  public achAccountType: string;\r\n  public achAccountNumber: string;\r\n  public achRoutingNumber: string;\r\n\r\n  public isDefault: boolean;\r\n  public currentAutoPayMethod: boolean;\r\n\r\n  public captcha: boolean;\r\n}\r\n","export type PermissionNames =\r\n    \"View Users\" | \"Manage Users\" |\r\n    \"View Roles\" | \"Manage Roles\" | \"Assign Roles\";\r\n\r\nexport type PermissionValues =\r\n    \"users.view\" | \"users.manage\" |\r\n    \"roles.view\" | \"roles.manage\" | \"roles.assign\";\r\n\r\nexport class Permission {\r\n\r\n    public static readonly viewUsersPermission: PermissionValues = \"users.view\";\r\n    public static readonly manageUsersPermission: PermissionValues = \"users.manage\";\r\n\r\n    public static readonly viewRolesPermission: PermissionValues = \"roles.view\";\r\n    public static readonly manageRolesPermission: PermissionValues = \"roles.manage\";\r\n    public static readonly assignRolesPermission: PermissionValues = \"roles.assign\";\r\n\r\n\r\n    constructor(name?: PermissionNames, value?: PermissionValues, groupName?: string, description?: string) {\r\n        this.name = name;\r\n        this.value = value;\r\n        this.groupName = groupName;\r\n        this.description = description;\r\n    }\r\n\r\n    public name: PermissionNames;\r\n    public value: PermissionValues;\r\n    public groupName: string;\r\n    public description: string;\r\n}\r\n","import { UserNew } from './user-new.model';\r\nimport { Account } from './account.model';\r\n\r\nexport class register {\r\n\r\n  constructor(user?: UserNew, account?: Account) {\r\n    this.user = user || new UserNew();\r\n    this.account = account || new Account();\r\n  }\r\n\r\n  user: UserNew;\r\n  account: Account;\r\n  captcha: true;\r\n}\r\n\r\n","import { Permission } from './permission.model';\r\n\r\n\r\nexport class Role {\r\n\r\n    constructor(name?: string, description?: string, permissions?: Permission[]) {\r\n\r\n        this.name = name;\r\n        this.description = description;\r\n        this.permissions = permissions;\r\n    }\r\n\r\n    public id: string;\r\n    public name: string;\r\n    public description: string;\r\n    public usersCount: string;\r\n    public permissions: Permission[];\r\n}\r\n","import { User } from './user.model';\r\n\r\n\r\nexport class UserEdit extends User {\r\n    constructor(currentPassword?: string, newPassword?: string, confirmPassword?: string) {\r\n        super();\r\n\r\n        this.currentPassword = currentPassword;\r\n        this.newPassword = newPassword;\r\n        this.confirmPassword = confirmPassword\r\n    }\r\n\r\n    public currentPassword: string;\r\n    public newPassword: string;\r\n    public confirmPassword: string;        \r\n}\r\n","export class UserForgotPassword {\r\n\r\n  public userName: string;\r\n\r\n}\r\n","export class UserForgotUserName {\r\n\r\n  public accountNumber: string;\r\n  public emailAddress: string;\r\n\r\n}\r\n","export class UserLogin {\r\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\r\n        this.userName = userName;\r\n        this.password = password;\r\n        this.rememberMe = rememberMe;\r\n    }\r\n\r\n    userName: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n","import { User } from './user.model';\r\n\r\n\r\nexport class UserNew extends User {\r\n\r\n  constructor(newPassword?: string, confirmPassword?: string) {\r\n    super();\r\n\r\n    this.newPassword = newPassword || '';\r\n    this.confirmPassword = confirmPassword || '';\r\n\r\n  }\r\n\r\n  public newPassword: string;\r\n  public confirmPassword: string;\r\n}\r\n","export class User {\r\n  // Note: Using only optional constructor properties without backing store disables typescript's type checking for the type\r\n  constructor(id?: string, userName?: string, firstName?: string, lastName?: string, email?: string, phoneNumber?: string, roles?: string[], termsAccepted?: boolean,\r\n              question01?: number, answer01?: string, question02?: number, answer02?: string ) {\r\n\r\n    this.id = id;\r\n    this.userName = userName;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.email = email;\r\n    this.phoneNumber = phoneNumber;\r\n    this.roles = roles;\r\n    this.termsAccepted = termsAccepted;\r\n\r\n    this.question01 = question01;\r\n    this.answer01 = answer01;\r\n    \r\n    this.question02 = question02;\r\n    this.answer02 = answer02;\r\n  }\r\n\r\n  public id: string = '';\r\n  public userName: string = '';\r\n  public firstName: string = '';\r\n  public lastName: string = '';\r\n  public email: string = '';\r\n  public phoneNumber: string = '';\r\n  public accountNumber: string = '';\r\n  public isEnabled: boolean;\r\n  public isLockedOut: boolean;\r\n  public roles: string[];\r\n  public termsAccepted: boolean;\r\n  public question01: number = 0;\r\n  public answer01: string = '';\r\n  public question02: number = 0;\r\n  public answer02: string = '';\r\n\r\n\r\n  get friendlyName(): string {\r\n    let name = this.lastName || this.userName;\r\n    return name;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n\r\n@Pipe({ name: 'groupBy' })\r\nexport class GroupByPipe implements PipeTransform {\r\n\r\n    transform(value: Array<any>, field: string): Array<any> {\r\n\r\n        if (!value)\r\n            return value;\r\n\r\n        const groupedObj = value.reduce((prev, cur) => {\r\n            if (!prev[cur[field]]) {\r\n                prev[cur[field]] = [cur];\r\n            }\r\n            else {\r\n                prev[cur[field]].push(cur);\r\n            }\r\n\r\n            return prev;\r\n        }, {});\r\n\r\n        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { EndpointFactory } from './endpoint-factory.service';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { register } from '../models/register.model';\r\nimport { Account } from '../models/account.model';\r\nimport { UserForgotUserName } from '../models/user-forgot-username.model'\r\nimport { access } from 'fs';\r\n\r\n\r\n@Injectable()\r\nexport class AccountEndpoint extends EndpointFactory {\r\n\r\n  private readonly _userAccountLookupUrl: string = \"/api/customer/getuseraccount\";\r\n\r\n  private readonly _questionsUrl: string = \"/api/account/questions\";\r\n  private readonly _registerUrl: string = \"/api/account/register\";\r\n\r\n  private readonly _forgotUserNameUrl: string = \"/api/account/forgot/username\";\r\n  private readonly _forgotPasswordUrl: string = \"/api/account/forgot/password\";\r\n  private readonly _updatePasswordUrl: string = \"/api/account/reset/updatepassword\";\r\n  private readonly _resetPasswordUrl: string = \"/api/account/reset/password\";\r\n  private readonly _usersUrl: string = \"/api/account/users\";\r\n  private readonly _userByUserNameUrl: string = \"/api/account/users/username\";\r\n  private readonly _unblockUserUrl: string = \"/api/account/users/unblock\";\r\n\r\n  private readonly _rolesUrl: string = \"/api/account/roles\";\r\n  private readonly _roleByRoleNameUrl: string = \"/api/account/roles/name\";\r\n  private readonly _permissionsUrl: string = \"/api/account/permissions\";\r\n\r\n\r\n  private readonly _currentUserUrl: string = \"/api/account/users/me\";\r\n  private readonly _currentUserPreferencesUrl: string = \"/api/account/users/me/preferences\";\r\n\r\n\r\n  get accountLookupUrl() { return this.configurations.baseUrl + this._userAccountLookupUrl; }\r\n\r\n  get questionsUrl() { return this.configurations.baseUrl + this._questionsUrl; }\r\n  get registerUrl() { return this.configurations.baseUrl + this._registerUrl; }\r\n\r\n  get forgotUserNameUrl() { return this.configurations.baseUrl + this._forgotUserNameUrl; }\r\n  get forgotPasswordUrl() { return this.configurations.baseUrl + this._forgotPasswordUrl; }\r\n  get updatePasswordUrl() { return this.configurations.baseUrl + this._updatePasswordUrl; }\r\n  get resetPasswordUrl() { return this.configurations.baseUrl + this._resetPasswordUrl; }\r\n  get usersUrl() { return this.configurations.baseUrl + this._usersUrl; }\r\n  get userByUserNameUrl() { return this.configurations.baseUrl + this._userByUserNameUrl; }\r\n  get unblockUserUrl() { return this.configurations.baseUrl + this._unblockUserUrl; }\r\n  get rolesUrl() { return this.configurations.baseUrl + this._rolesUrl; }\r\n  get roleByRoleNameUrl() { return this.configurations.baseUrl + this._roleByRoleNameUrl; }\r\n  get permissionsUrl() { return this.configurations.baseUrl + this._permissionsUrl; }\r\n\r\n  get currentUserUrl() { return this.configurations.baseUrl + this._currentUserUrl; }\r\n  get currentUserPreferencesUrl() { return this.configurations.baseUrl + this._currentUserPreferencesUrl; }\r\n\r\n\r\n  constructor(http: HttpClient, configurations: ConfigurationService, injector: Injector) {\r\n    super(http, configurations, injector);\r\n  }\r\n\r\n  \r\n  getAccount<T>(): Observable<T> {\r\n    return this.http\r\n      .post(this.accountLookupUrl, null, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getRegisterConfirmEndpoint<T>(userId: string, code: string): Observable<T> {\r\n    let endpointUrl = `${this.registerUrl}/confirm`;\r\n\r\n    var parms = new HttpParams()\r\n      .append(\"userId\", userId)\r\n      .append(\"code\", code);\r\n\r\n    return this.http\r\n      .post<T>(endpointUrl, parms, this.getRequestHeadersText())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUpdatePasswordEndPoint<T>(username: string, currentPassword: string, password: string) {\r\n\r\n    var parms = new HttpParams()\r\n      .append(\"username\", username)\r\n      .append(\"currentPassword\", currentPassword)\r\n      .append(\"password\", password);\r\n    \r\n    return this.http\r\n      .post<T>(this.updatePasswordUrl, parms, this.getRequestHeadersText())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n\r\n  }\r\n\r\n  getForgotPasswordConfirmEndPoint<T>(code: string, userName: string, password: string) {\r\n\r\n    var parms = new HttpParams()\r\n      .append(\"code\", code)\r\n      .append(\"username\", userName)\r\n      .append(\"password\", password);\r\n\r\n    return this.http\r\n      .post<T>(this.resetPasswordUrl, parms, this.getRequestHeadersText())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n\r\n  }\r\n  getRegisterEndpoint<T>(data: register): Observable<T> {\r\n    return this.http\r\n      .post<T>(this.registerUrl, data, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getForgotPasswordEndpoint<T>(username: string): Observable<T> {\r\n    return this.http\r\n      .post(this.forgotPasswordUrl, JSON.stringify(username), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getForgotUserNameEndpoint<T>(data: UserForgotUserName): Observable<T> {\r\n    return this.http\r\n      .post(this.forgotUserNameUrl, data, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getQuestionsEndpoint<T>(language: string): Observable<T> {\r\n    let endPointUrl = `${this.questionsUrl}/${language}`;\r\n\r\n    return this.http\r\n      .get<T>(endPointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUserEndpoint<T>(userId?: string): Observable<T> {\r\n    let endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\r\n    let endpointUrl = `${this.userByUserNameUrl}/${userName}`;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\r\n    let endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getNewUserEndpoint<T>(userObject: any): Observable<T> {\r\n\r\n    return this.http\r\n      .post<T>(this.usersUrl, JSON.stringify(userObject), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\r\n    let endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\r\n\r\n    return this.http\r\n      .put<T>(endpointUrl, JSON.stringify(userObject), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getUserPreferencesEndpoint<T>(): Observable<T> {\r\n    return this.http\r\n      .get<T>(this.currentUserPreferencesUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\r\n    return this.http\r\n      .put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUnblockUserEndpoint<T>(userId: string): Observable<T> {\r\n    let endpointUrl = `${this.unblockUserUrl}/${userId}`;\r\n\r\n    return this.http\r\n      .put<T>(endpointUrl, null, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getDeleteUserEndpoint<T>(userId: string): Observable<T> {\r\n    let endpointUrl = `${this.usersUrl}/${userId}`;\r\n\r\n    return this.http\r\n      .delete<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getRoleEndpoint<T>(roleId: string): Observable<T> {\r\n    let endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\r\n    let endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n\r\n  getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\r\n    let endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\r\n\r\n    return this.http\r\n      .get<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\r\n\r\n    return this.http\r\n      .post<T>(this.rolesUrl, JSON.stringify(roleObject), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\r\n    let endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http\r\n      .put<T>(endpointUrl, JSON.stringify(roleObject), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\r\n    let endpointUrl = `${this.rolesUrl}/${roleId}`;\r\n\r\n    return this.http\r\n      .delete<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  getPermissionsEndpoint<T>(): Observable<T> {\r\n\r\n    return this.http\r\n      .get<T>(this.permissionsUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin, BehaviorSubject, Notification, combineLatest, concat, from, fromEvent, pipe } from 'rxjs';\r\nimport { map, mergeMap, tap, subscribeOn } from 'rxjs/operators';\r\n\r\n\r\n\r\nimport { AccountEndpoint } from './account-endpoint.service';\r\nimport { AuthService } from './auth.service';\r\nimport { User } from '../models/user.model';\r\nimport { Role } from '../models/role.model';\r\nimport { Account } from '../models/account.model';\r\nimport { Permission, PermissionNames, PermissionValues } from '../models/permission.model';\r\nimport { UserEdit } from '../models/user-edit.model';\r\nimport { register } from '../models/register.model';\r\nimport { UserForgotUserName } from '../models/user-forgot-username.model'\r\nimport { SecurityQuestion } from '../models/security-questions.model';\r\nimport { validateConfig } from '@angular/router/src/config';\r\n\r\n\r\n\r\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\r\nexport interface RolesChangedEventArg { roles: Role[] | string[]; operation: RolesChangedOperation; }\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n  public static readonly roleAddedOperation: RolesChangedOperation = 'add';\r\n  public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\r\n  public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\r\n\r\n  private _rolesChanged = new Subject<RolesChangedEventArg>();\r\n\r\n\r\n  constructor(private router: Router, private http: HttpClient, private authService: AuthService,\r\n    private accountEndpoint: AccountEndpoint) {\r\n  }\r\n\r\n\r\n\r\n  register(request: register) {\r\n    return this\r\n      .accountEndpoint\r\n      .getRegisterEndpoint<register>(request)\r\n      .pipe(map(response => this.processRegisterResponse(response)));\r\n  }\r\n  private processRegisterResponse(response: register) {\r\n\r\n    const account = response.account;\r\n\r\n    if (account == null) {\r\n      throw new Error('Account was empty');\r\n    }\r\n    return response;\r\n  }\r\n\r\n  forgotUserName(data: UserForgotUserName) {\r\n    return this.accountEndpoint.getForgotUserNameEndpoint(data);\r\n  }\r\n  forgotPassword(username: string) {\r\n    return this.accountEndpoint.getForgotPasswordEndpoint(username);\r\n  }\r\n  confirmEmail(userId: string, code: string) {\r\n    return this.accountEndpoint.getRegisterConfirmEndpoint<boolean>(userId, code);\r\n  }\r\n  confirmForgotPassword(code: string, userName: string, password: string) {\r\n    return this.accountEndpoint.getForgotPasswordConfirmEndPoint<boolean>(code, userName, password);\r\n  }\r\n  confirmUpdatePassword(userName: string, currentPassword: string, password: string) {\r\n    return this.accountEndpoint.getUpdatePasswordEndPoint<boolean>(userName, currentPassword, password);\r\n  }\r\n  getQuestions(language: string) {\r\n    return this.accountEndpoint.getQuestionsEndpoint<SecurityQuestion[]>(language);\r\n  }\r\n  getUser(userId?: string) {\r\n    return this.accountEndpoint.getUserEndpoint<User>(userId);\r\n  }\r\n\r\n  getAccount() {\r\n    return this.accountEndpoint.getAccount<Account>();    \r\n  }\r\n\r\n  getUserAndRoles(userId?: string) {\r\n\r\n    return forkJoin(\r\n      this.accountEndpoint.getUserEndpoint<User>(userId),\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>());\r\n  }\r\n\r\n  getUsers(page?: number, pageSize?: number) {\r\n\r\n    return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\r\n  }\r\n\r\n  getUsersAndRoles(page?: number, pageSize?: number) {\r\n\r\n    return forkJoin(\r\n      this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>());\r\n  }\r\n\r\n\r\n  updateUser(user: UserEdit, isSelf?: boolean) {\r\n    if (isSelf)\r\n      return this.accountEndpoint.getUpdateUserEndpoint<User>(user);\r\n\r\n    if (user.id) {      \r\n      //return this.accountEndpoint.getUpdateUserEndpoint<User>(user, user.id);\r\n      return this.accountEndpoint.getUpdateUserEndpoint<User>(user);\r\n    }\r\n    else {\r\n      alert(\"here1\");\r\n      return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.userName).pipe<User>(\r\n        mergeMap(foundUser => {\r\n          user.id = foundUser.id;\r\n          return this.accountEndpoint.getUpdateUserEndpoint<User>(user, user.id);\r\n        }));\r\n    }\r\n  }\r\n\r\n\r\n  newUser(user: UserEdit) {\r\n    return this.accountEndpoint.getNewUserEndpoint<User>(user);\r\n  }\r\n\r\n\r\n  getUserPreferences() {\r\n    return this.accountEndpoint.getUserPreferencesEndpoint<string>();\r\n  }\r\n\r\n  updateUserPreferences(configuration: string) {\r\n    return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\r\n  }\r\n\r\n\r\n  deleteUser(userOrUserId: string | UserEdit): Observable<User> {\r\n\r\n    if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\r\n      return this.accountEndpoint.getDeleteUserEndpoint<User>(<string>userOrUserId).pipe<User>(\r\n        tap(data => this.onRolesUserCountChanged(data.roles)));\r\n    } else {\r\n\r\n      if (userOrUserId.id) {\r\n        return this.deleteUser(userOrUserId.id);\r\n      } else {\r\n        return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.userName).pipe<User>(\r\n          mergeMap(user => this.deleteUser(user.id)));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  unblockUser(userId: string) {\r\n    return this.accountEndpoint.getUnblockUserEndpoint(userId);\r\n  }\r\n\r\n\r\n  userHasPermission(permissionValue: PermissionValues): boolean {\r\n    return this.permissions.some(p => p == permissionValue);\r\n  }\r\n\r\n\r\n  refreshLoggedInUser() {\r\n    return this.authService.refreshLogin();\r\n  }\r\n\r\n\r\n\r\n\r\n  getRoles(page?: number, pageSize?: number) {\r\n\r\n    return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\r\n  }\r\n\r\n\r\n  getRolesAndPermissions(page?: number, pageSize?: number) {\r\n\r\n    return forkJoin(\r\n      this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\r\n      this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\r\n  }\r\n\r\n\r\n  updateRole(role: Role) {\r\n    if (role.id) {\r\n      return this.accountEndpoint.getUpdateRoleEndpoint<Role>(role, role.id).pipe<Role>(\r\n        tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\r\n    } else {\r\n      return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe<Role>(\r\n        mergeMap((foundRole, i) => {\r\n          role.id = foundRole.id;\r\n          return this.accountEndpoint.getUpdateRoleEndpoint<Role>(role, role.id);\r\n        }),\r\n        tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\r\n    }\r\n  }\r\n\r\n\r\n  newRole(role: Role) {\r\n    return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe<Role>(\r\n      tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\r\n  }\r\n\r\n\r\n  deleteRole(roleOrRoleId: string | Role): Observable<Role> {\r\n\r\n    if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\r\n      return this.accountEndpoint.getDeleteRoleEndpoint<Role>(<string>roleOrRoleId).pipe<Role>(\r\n        tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\r\n    } else {\r\n\r\n      if (roleOrRoleId.id) {\r\n        return this.deleteRole(roleOrRoleId.id);\r\n      } else {\r\n        return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe<Role>(\r\n          mergeMap(role => this.deleteRole(role.id)));\r\n      }\r\n    }\r\n  }\r\n\r\n  getPermissions() {\r\n\r\n    return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\r\n  }\r\n\r\n\r\n  private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\r\n    this._rolesChanged.next({ roles: roles, operation: op });\r\n  }\r\n\r\n\r\n  onRolesUserCountChanged(roles: Role[] | string[]) {\r\n    return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\r\n  }\r\n\r\n\r\n  getRolesChangedEvent(): Observable<RolesChangedEventArg> {\r\n    return this._rolesChanged.asObservable();\r\n  }\r\n\r\n\r\n\r\n  get permissions(): PermissionValues[] {\r\n    return this.authService.userPermissions;\r\n  }\r\n\r\n  get currentUser() {\r\n    return this.authService.currentUser;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseBase } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { Utilities } from '../services/utilities';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n\r\n  private messages = new Subject<AlertMessage>();\r\n  private stickyMessages = new Subject<AlertMessage>();\r\n  private dialogs = new Subject<AlertDialog>();\r\n\r\n  private _isLoading = false;\r\n  private loadingMessageId: any;\r\n\r\n\r\n\r\n  showDialog(message: string)\r\n  showDialog(message: string, type: DialogType, okCallback: (val?: any) => any)\r\n  showDialog(message: string, type: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string)\r\n  showDialog(message: string, type?: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string) {\r\n\r\n    if (!type)\r\n      type = DialogType.alert;\r\n\r\n    this.dialogs.next({ message: message, type: type, okCallback: okCallback, cancelCallback: cancelCallback, okLabel: okLabel, cancelLabel: cancelLabel, defaultValue: defaultValue });\r\n  }\r\n\r\n\r\n\r\n  showMessage(summary: string)\r\n  showMessage(summary: string, detail: string, severity: MessageSeverity)\r\n  showMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity)\r\n  showMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity)\r\n  showMessage(data: any, separatorOrDetail?: string, severity?: MessageSeverity) {\r\n\r\n    if (!severity)\r\n      severity = MessageSeverity.default;\r\n\r\n    if (data instanceof HttpResponseBase) {\r\n      data = Utilities.getHttpResponseMessage(data);\r\n      separatorOrDetail = Utilities.captionAndMessageSeparator;\r\n    }\r\n\r\n    if (data instanceof Array) {\r\n      for (let message of data) {\r\n        let msgObject = Utilities.splitInTwo(message, separatorOrDetail);\r\n\r\n        this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, false);\r\n      }\r\n    }\r\n    else {\r\n      this.showMessageHelper(data, separatorOrDetail, severity, false);\r\n    }\r\n  }\r\n\r\n\r\n  showStickyMessage(summary: string)\r\n  showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any)\r\n  showStickyMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity)\r\n  showStickyMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity)\r\n  showStickyMessage(data: string | string[] | HttpResponseBase, separatorOrDetail?: string, severity?: MessageSeverity, error?: any) {\r\n\r\n    if (!severity)\r\n      severity = MessageSeverity.default;\r\n\r\n    if (data instanceof HttpResponseBase) {\r\n      data = Utilities.getHttpResponseMessage(data);\r\n      separatorOrDetail = Utilities.captionAndMessageSeparator;\r\n    }\r\n\r\n\r\n    if (data instanceof Array) {\r\n      for (let message of data) {\r\n        let msgObject = Utilities.splitInTwo(message, separatorOrDetail);\r\n\r\n        this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, true);\r\n      }\r\n    }\r\n    else {\r\n\r\n      if (error) {\r\n\r\n        let msg = `Severity: \"${MessageSeverity[severity]}\", Summary: \"${data}\", Detail: \"${separatorOrDetail}\", Error: \"${Utilities.safeStringify(error)}\"`;\r\n\r\n        switch (severity) {\r\n          case MessageSeverity.default:\r\n            this.logInfo(msg);\r\n            break;\r\n          case MessageSeverity.info:\r\n            this.logInfo(msg);\r\n            break;\r\n          case MessageSeverity.success:\r\n            this.logMessage(msg);\r\n            break;\r\n          case MessageSeverity.error:\r\n            this.logError(msg);\r\n            break;\r\n          case MessageSeverity.warn:\r\n            this.logWarning(msg);\r\n            break;\r\n          case MessageSeverity.wait:\r\n            this.logTrace(msg);\r\n            break;\r\n        }\r\n      }\r\n\r\n      this.showMessageHelper(data, separatorOrDetail, severity, true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private showMessageHelper(summary: string, detail: string, severity: MessageSeverity, isSticky: boolean) {\r\n\r\n    if (isSticky)\r\n      this.stickyMessages.next({ severity: severity, summary: summary, detail: detail });\r\n    else\r\n      this.messages.next({ severity: severity, summary: summary, detail: detail });\r\n  }\r\n\r\n\r\n\r\n  startLoadingMessage(message = \"Loading...\", caption = \"\") {\r\n    this._isLoading = true;\r\n    clearTimeout(this.loadingMessageId);\r\n\r\n    this.loadingMessageId = setTimeout(() => {\r\n      this.showStickyMessage(caption, message, MessageSeverity.wait);\r\n    }, 1000);\r\n  }\r\n\r\n  stopLoadingMessage() {\r\n    this._isLoading = false;\r\n    clearTimeout(this.loadingMessageId);\r\n    this.resetStickyMessage();\r\n  }\r\n\r\n\r\n\r\n  logDebug(msg) {\r\n    console.debug(msg);\r\n  }\r\n\r\n  logError(msg) {\r\n    console.error(msg);\r\n  }\r\n\r\n  logInfo(msg) {\r\n    console.info(msg);\r\n  }\r\n\r\n  logMessage(msg) {\r\n    console.log(msg);\r\n  }\r\n\r\n  logTrace(msg) {\r\n    console.trace(msg);\r\n  }\r\n\r\n  logWarning(msg) {\r\n    console.warn(msg);\r\n  }\r\n\r\n\r\n\r\n\r\n  resetStickyMessage() {\r\n    this.stickyMessages.next();\r\n  }\r\n\r\n\r\n\r\n\r\n  getDialogEvent(): Observable<AlertDialog> {\r\n    return this.dialogs.asObservable();\r\n  }\r\n\r\n\r\n  getMessageEvent(): Observable<AlertMessage> {\r\n    return this.messages.asObservable();\r\n  }\r\n\r\n  getStickyMessageEvent(): Observable<AlertMessage> {\r\n    return this.stickyMessages.asObservable();\r\n  }\r\n\r\n\r\n\r\n  get isLoadingInProgress(): boolean {\r\n    return this._isLoading;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//******************** Dialog ********************//\r\nexport class AlertDialog {\r\n  constructor(public message: string, public type: DialogType, public okCallback: (val?: any) => any, public cancelCallback: () => any,\r\n    public defaultValue: string, public okLabel: string, public cancelLabel: string) {\r\n\r\n  }\r\n}\r\n\r\nexport enum DialogType {\r\n  alert,\r\n  confirm,\r\n  prompt\r\n}\r\n//******************** End ********************//\r\n\r\n\r\n\r\n\r\n\r\n\r\n//******************** Growls ********************//\r\nexport class AlertMessage {\r\n  constructor(public severity: MessageSeverity, public summary: string, public detail: string) { }\r\n}\r\n\r\nexport enum MessageSeverity {\r\n  default,\r\n  info,\r\n  success,\r\n  error,\r\n  warn,\r\n  wait\r\n}\r\n//******************** End ********************//\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n\r\n\r\nexport const fadeInOut = trigger('fadeInOut', [\r\n  transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\r\n  transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\r\n])\r\n\r\n\r\n\r\nexport function flyInOut(duration: number = 0.2) {\r\n  return trigger('flyInOut', [\r\n    state('in', style({ opacity: 1, transform: 'translateX(0)' })),\r\n    transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\r\n    transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\r\n  ])\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter, map, flatMap } from 'rxjs/operators';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Utilities } from './utilities';\r\n\r\n\r\n@Injectable()\r\nexport class AppTitleService {\r\n\r\n  sub: Subscription;\r\n  appName: string;\r\n\r\n  constructor(private titleService: Title, private router: Router) {\r\n    this.sub = this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(_ => this.router.routerState.root),\r\n      map(route => {\r\n        while (route.firstChild)\r\n          route = route.firstChild;\r\n\r\n        return route;\r\n      }),\r\n      flatMap(route => route.data))\r\n      .subscribe(data => {\r\n        let title = data['title'];\r\n\r\n        if (title) {\r\n          let fragment = this.router.url.split('#')[1]\r\n\r\n          if (fragment)\r\n            title += \" | \" + Utilities.toTitleCase(fragment);\r\n        }\r\n\r\n        if (title && this.appName)\r\n          title += ' - ' + this.appName;\r\n        else if (this.appName)\r\n          title = this.appName;\r\n\r\n        if (title)\r\n          this.titleService.setTitle(title);\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService, TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AppTranslationService {\r\n\r\n  readonly defaultLanguage = 'en';\r\n  private onLanguageChanged = new Subject<string>();\r\n  languageChanged$ = this.onLanguageChanged.asObservable();\r\n\r\n  constructor(private translate: TranslateService) {\r\n     \r\n    this.setDefaultLanguage(this.defaultLanguage);\r\n  }\r\n\r\n\r\n  addLanguages(lang: string[]) {\r\n    this.translate.addLangs(lang);\r\n  }\r\n\r\n\r\n  setDefaultLanguage(lang: string) {\r\n    this.translate.setDefaultLang(lang);\r\n  }\r\n\r\n  getDefaultLanguage() {\r\n    return this.translate.defaultLang;\r\n  }\r\n\r\n  getBrowserLanguage() {\r\n    return this.translate.getBrowserLang();\r\n  }\r\n\r\n\r\n  useBrowserLanguage(): string | void {\r\n    const browserLang = this.getBrowserLanguage();\r\n\r\n    if (browserLang.match(/en|fr|de|ar|ko|pt|sp|es|zh/)) {\r\n      this.changeLanguage(browserLang);\r\n      return browserLang;\r\n    }\r\n  }\r\n\r\n  changeLanguage(language: string = 'en') {\r\n     \r\n    if (!language) {\r\n      language = this.translate.defaultLang;\r\n    }\r\n\r\n    if (language != this.translate.currentLang) {\r\n      setTimeout(() => {\r\n        this.translate.use(language);\r\n        this.onLanguageChanged.next(language);\r\n      });\r\n    }\r\n\r\n    return language;\r\n  }\r\n\r\n\r\n  getTranslation(key: string | Array<string>, interpolateParams?: Object): string | any {\r\n    return this.translate.instant(key, interpolateParams);\r\n  }\r\n\r\n\r\n  getTranslationAsync(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\r\n    return this.translate.get(key, interpolateParams);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport class TranslateLanguageLoader implements TranslateLoader {\r\n\r\n  public getTranslation(lang: string): any {\r\n    //Note Dynamic require(variable) will not work. Require is always at compile time\r\n\r\n    switch (lang) {\r\n      case 'en':\r\n        return of(require('../assets/locale/en.json'));\r\n      case 'fr':\r\n        return of(require('../assets/locale/fr.json'));\r\n      case 'es':\r\n        return of(require('../assets/locale/sp.json'));\r\n      case 'sp':\r\n        return of(require('../assets/locale/sp.json'));\r\n      case 'de':\r\n        return of(require('../assets/locale/de.json'));\r\n      case 'pt':\r\n        return of(require('../assets/locale/pt.json'));\r\n      case 'ar':\r\n        return of(require('../assets/locale/ar.json'));\r\n      case 'ko':\r\n        return of(require('../assets/locale/ko.json'));\r\n      case 'zh':\r\n        return of(require('../assets/locale/zh.json'));\r\n      default:\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, NavigationExtras, CanLoad, Route } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    let url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  canLoad(route: Route): boolean {\r\n\r\n    //let url = `/${route.path}`;\r\n    let url = route.path;\r\n\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  checkLogin(url: string): boolean {\r\n\r\n    if (this.authService.isLoggedIn) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.loginRedirectUrl = url;\r\n    this.router.navigate(['login'], { preserveQueryParams: true, queryParamsHandling: \"merge\", preserveFragment: true });\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationExtras } from \"@angular/router\";\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LocalStoreManager } from './local-store-manager.service';\r\nimport { EndpointFactory } from './endpoint-factory.service';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { DBkeys } from './db-Keys';\r\nimport { JwtHelper } from './jwt-helper';\r\nimport { Utilities } from './utilities';\r\nimport { LoginResponse, IdToken } from '../models/login-response.model';\r\nimport { User } from '../models/user.model';\r\nimport { Permission, PermissionNames, PermissionValues } from '../models/permission.model';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  public get loginUrl() { return this.configurations.loginUrl; }\r\n  public get homeUrl() { return this.configurations.homeUrl; }\r\n\r\n  public loginRedirectUrl: string;\r\n  public logoutRedirectUrl: string;\r\n\r\n  public reLoginDelegate: () => void;\r\n\r\n  private previousIsLoggedInCheck = false;\r\n  private _loginStatus = new Subject<boolean>();\r\n\r\n\r\n  constructor(private router: Router, private configurations: ConfigurationService, private endpointFactory: EndpointFactory, private localStorage: LocalStoreManager) {\r\n    this.initializeLoginStatus();\r\n  }\r\n\r\n\r\n  private initializeLoginStatus() {\r\n    this.localStorage.getInitEvent().subscribe(() => {\r\n      this.reevaluateLoginStatus();\r\n    });\r\n  }\r\n\r\n\r\n  gotoPage(page: string, preserveParams = true) {\r\n\r\n    let navigationExtras: NavigationExtras = {\r\n      queryParamsHandling: preserveParams ? \"merge\" : \"\", preserveFragment: preserveParams\r\n    };\r\n\r\n\r\n    this.router.navigate([page], navigationExtras);\r\n  }\r\n\r\n\r\n  redirectLoginUser() {\r\n    let redirect = this.loginRedirectUrl && this.loginRedirectUrl != '/' && this.loginRedirectUrl != ConfigurationService.defaultHomeUrl ? this.loginRedirectUrl : this.homeUrl;\r\n    this.loginRedirectUrl = null;\r\n\r\n\r\n    let urlParamsAndFragment = Utilities.splitInTwo(redirect, '#');\r\n    let urlAndParams = Utilities.splitInTwo(urlParamsAndFragment.firstPart, '?');\r\n\r\n    let navigationExtras: NavigationExtras = {\r\n      fragment: urlParamsAndFragment.secondPart,\r\n      queryParams: Utilities.getQueryParamsFromString(urlAndParams.secondPart),\r\n      queryParamsHandling: \"merge\"\r\n    };\r\n\r\n    this.router.navigate([urlAndParams.firstPart], navigationExtras);\r\n  }\r\n\r\n\r\n  redirectLogoutUser() {\r\n    let redirect = this.logoutRedirectUrl ? this.logoutRedirectUrl : this.loginUrl;\r\n    this.logoutRedirectUrl = null;\r\n\r\n    this.router.navigate([redirect]);\r\n  }\r\n\r\n\r\n  redirectForLogin() {\r\n    this.loginRedirectUrl = this.router.url;\r\n    this.router.navigate([this.loginUrl]);\r\n  }\r\n\r\n\r\n  reLogin() {\r\n\r\n    this.localStorage.deleteData(DBkeys.TOKEN_EXPIRES_IN);\r\n\r\n    if (this.reLoginDelegate) {\r\n      this.reLoginDelegate();\r\n    }\r\n    else {\r\n      this.redirectForLogin();\r\n    }\r\n  }\r\n\r\n\r\n  refreshLogin() {\r\n    return this.endpointFactory.getRefreshLoginEndpoint<LoginResponse>().pipe(\r\n      map(response => this.processLoginResponse(response, this.rememberMe)));\r\n  }\r\n\r\n\r\n  login(userName: string, password: string, rememberMe?: boolean) {\r\n\r\n    if (this.isLoggedIn)\r\n      this.logout();\r\n\r\n    return this.endpointFactory.getLoginEndpoint<LoginResponse>(userName, password).pipe(\r\n      map(response => this.processLoginResponse(response, rememberMe)));\r\n  }\r\n\r\n\r\n  private processLoginResponse(response: LoginResponse, rememberMe: boolean) {\r\n\r\n    let accessToken = response.access_token;\r\n\r\n    if (accessToken == null)\r\n      throw new Error(\"Received accessToken was empty\");\r\n\r\n    let idToken = response.id_token;\r\n    let refreshToken = response.refresh_token || this.refreshToken;\r\n    let expiresIn = response.expires_in;\r\n\r\n    let tokenExpiryDate = new Date();\r\n    tokenExpiryDate.setSeconds(tokenExpiryDate.getSeconds() + expiresIn);\r\n\r\n    let accessTokenExpiry = tokenExpiryDate;\r\n\r\n    let jwtHelper = new JwtHelper();\r\n    let decodedIdToken = <IdToken>jwtHelper.decodeToken(response.id_token);\r\n\r\n    let permissions: PermissionValues[] = Array.isArray(decodedIdToken.permission) ? decodedIdToken.permission : [decodedIdToken.permission];\r\n     //if (!this.isLoggedIn)\r\n     // this.configurations.import(decodedIdToken.configuration);\r\n\r\n    let user = new User(\r\n      decodedIdToken.sub,\r\n      decodedIdToken.name,\r\n      decodedIdToken.fullname,\r\n      decodedIdToken.email,\r\n      decodedIdToken.jobtitle,\r\n      decodedIdToken.phone,\r\n      Array.isArray(decodedIdToken.role) ? decodedIdToken.role : [decodedIdToken.role]);\r\n\r\n    user.isEnabled = true;\r\n\r\n    this.saveUserDetails(user, permissions, accessToken, idToken, refreshToken, accessTokenExpiry, rememberMe);\r\n\r\n    this.reevaluateLoginStatus(user);\r\n\r\n    return user;\r\n  }\r\n\r\n\r\n  private saveUserDetails(user: User, permissions: PermissionValues[], accessToken: string, idToken: string, refreshToken: string, expiresIn: Date, rememberMe: boolean) {\r\n\r\n    if (rememberMe) {\r\n      this.localStorage.savePermanentData(accessToken, DBkeys.ACCESS_TOKEN);\r\n      this.localStorage.savePermanentData(idToken, DBkeys.ID_TOKEN);\r\n      this.localStorage.savePermanentData(refreshToken, DBkeys.REFRESH_TOKEN);\r\n      this.localStorage.savePermanentData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\r\n      this.localStorage.savePermanentData(permissions, DBkeys.USER_PERMISSIONS);\r\n      this.localStorage.savePermanentData(user, DBkeys.CURRENT_USER);\r\n    }\r\n    else {\r\n      this.localStorage.saveSyncedSessionData(accessToken, DBkeys.ACCESS_TOKEN);\r\n      this.localStorage.saveSyncedSessionData(idToken, DBkeys.ID_TOKEN);\r\n      this.localStorage.saveSyncedSessionData(refreshToken, DBkeys.REFRESH_TOKEN);\r\n      this.localStorage.saveSyncedSessionData(expiresIn, DBkeys.TOKEN_EXPIRES_IN);\r\n      this.localStorage.saveSyncedSessionData(permissions, DBkeys.USER_PERMISSIONS);\r\n      this.localStorage.saveSyncedSessionData(user, DBkeys.CURRENT_USER);\r\n    }\r\n\r\n    this.localStorage.savePermanentData(rememberMe, DBkeys.REMEMBER_ME);\r\n  }\r\n\r\n\r\n\r\n  logout(): void {\r\n    this.localStorage.deleteData(DBkeys.ACCESS_TOKEN);\r\n    this.localStorage.deleteData(DBkeys.ID_TOKEN);\r\n    this.localStorage.deleteData(DBkeys.REFRESH_TOKEN);\r\n    this.localStorage.deleteData(DBkeys.TOKEN_EXPIRES_IN);\r\n    this.localStorage.deleteData(DBkeys.USER_PERMISSIONS);\r\n    this.localStorage.deleteData(DBkeys.CURRENT_USER);\r\n\r\n    this.configurations.clearLogOutChanges();\r\n\r\n    this.reevaluateLoginStatus();\r\n  }\r\n\r\n\r\n  private reevaluateLoginStatus(currentUser?: User) {\r\n\r\n    let user = currentUser || this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER);\r\n    let isLoggedIn = user != null;\r\n\r\n    if (this.previousIsLoggedInCheck != isLoggedIn) {\r\n      setTimeout(() => {\r\n        this._loginStatus.next(isLoggedIn);\r\n      });\r\n    }\r\n\r\n    this.previousIsLoggedInCheck = isLoggedIn;\r\n  }\r\n\r\n\r\n  getLoginStatusEvent(): Observable<boolean> {\r\n    return this._loginStatus.asObservable();\r\n  }\r\n\r\n\r\n  get currentUser(): User {\r\n\r\n    let user = this.localStorage.getDataObject<User>(DBkeys.CURRENT_USER);\r\n    this.reevaluateLoginStatus(user);\r\n\r\n    return user;\r\n  }\r\n\r\n  get userPermissions(): PermissionValues[] {\r\n    return this.localStorage.getDataObject<PermissionValues[]>(DBkeys.USER_PERMISSIONS) || [];\r\n  }\r\n\r\n  get accessToken(): string {\r\n\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getData(DBkeys.ACCESS_TOKEN);\r\n  }\r\n\r\n  get accessTokenExpiryDate(): Date {\r\n\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getDataObject<Date>(DBkeys.TOKEN_EXPIRES_IN, true);\r\n  }\r\n\r\n  get isSessionExpired(): boolean {\r\n\r\n    if (this.accessTokenExpiryDate == null) {\r\n      return true;\r\n    }\r\n\r\n    return !(this.accessTokenExpiryDate.valueOf() > new Date().valueOf());\r\n  }\r\n\r\n\r\n  get idToken(): string {\r\n\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getData(DBkeys.ID_TOKEN);\r\n  }\r\n\r\n  get refreshToken(): string {\r\n\r\n    this.reevaluateLoginStatus();\r\n    return this.localStorage.getData(DBkeys.REFRESH_TOKEN);\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.currentUser != null;\r\n  }\r\n\r\n  get rememberMe(): boolean {\r\n    return this.localStorage.getDataObject<boolean>(DBkeys.REMEMBER_ME) == true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AppTranslationService } from './app-translation.service';\r\nimport { LocalStoreManager } from './local-store-manager.service';\r\nimport { DBkeys } from './db-Keys';\r\nimport { Utilities } from './utilities';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n\r\ntype UserConfiguration = {\r\n    language: string,\r\n    homeUrl: string,\r\n    theme: string,\r\n    showDashboardStatistics: boolean,\r\n    showDashboardNotifications: boolean,\r\n    showDashboardTodo: boolean,\r\n};\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n\r\n    public static readonly appVersion: string = \"0.1.0\";\r\n\r\n    public baseUrl = environment.baseUrl || Utilities.baseUrl();\r\n    public loginUrl = environment.loginUrl;\r\n    public fallbackBaseUrl = \"http://localhost\";\r\n\r\n    //***Specify default configurations here***\r\n    public static readonly defaultLanguage: string = \"en\";\r\n    public static readonly defaultHomeUrl: string = \"/\";\r\n    public static readonly defaultTheme: string = \"Default\";\r\n    public static readonly defaultShowDashboardStatistics: boolean = true;\r\n    public static readonly defaultShowDashboardNotifications: boolean = true;\r\n    public static readonly defaultShowDashboardTodo: boolean = false;\r\n    //***End of defaults***  \r\n\r\n    private _language: string = null;\r\n    private _homeUrl: string = null;\r\n    private _theme: string = null;\r\n    private _showDashboardStatistics: boolean = null;\r\n    private _showDashboardNotifications: boolean = null;\r\n    private _showDashboardTodo: boolean = null;\r\n\r\n\r\n    constructor(private localStorage: LocalStoreManager, private translationService: AppTranslationService) {\r\n        this.loadLocalChanges();\r\n    }\r\n\r\n\r\n\r\n    private loadLocalChanges() {\r\n\r\n        if (this.localStorage.exists(DBkeys.LANGUAGE)) {\r\n            this._language = this.localStorage.getDataObject<string>(DBkeys.LANGUAGE);\r\n            this.translationService.changeLanguage(this._language);\r\n        }\r\n        else {\r\n            this.resetLanguage();\r\n        }\r\n\r\n        if (this.localStorage.exists(DBkeys.HOME_URL))\r\n            this._homeUrl = this.localStorage.getDataObject<string>(DBkeys.HOME_URL);\r\n\r\n        if (this.localStorage.exists(DBkeys.THEME))\r\n            this._theme = this.localStorage.getDataObject<string>(DBkeys.THEME);\r\n\r\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_STATISTICS))\r\n            this._showDashboardStatistics = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_STATISTICS);\r\n\r\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS))\r\n            this._showDashboardNotifications = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\r\n\r\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_TODO))\r\n            this._showDashboardTodo = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_TODO);\r\n    }\r\n\r\n\r\n    private saveToLocalStore(data: any, key: string) {\r\n        setTimeout(() => this.localStorage.savePermanentData(data, key));\r\n    }\r\n\r\n\r\n    public import(value: string) {\r\n\r\n        this.clearLocalChanges();\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        let config: UserConfiguration = Utilities.JSonTryParse(value);\r\n\r\n        if (config.language != null)\r\n            this.language = config.language;\r\n\r\n        if (config.homeUrl != null)\r\n            this.homeUrl = config.homeUrl;\r\n\r\n        if (config.theme != null)\r\n            this.theme = config.theme;\r\n\r\n        if (config.showDashboardStatistics != null)\r\n            this.showDashboardStatistics = config.showDashboardStatistics;\r\n\r\n        if (config.showDashboardNotifications != null)\r\n            this.showDashboardNotifications = config.showDashboardNotifications;\r\n\r\n        if (config.showDashboardTodo != null)\r\n            this.showDashboardTodo = config.showDashboardTodo;\r\n    }\r\n\r\n\r\n  public export(changesOnly = true): string {\r\n        let exportValue: UserConfiguration =\r\n            {\r\n                language:                   changesOnly ? this._language : this.language,\r\n                homeUrl:                    changesOnly ? this._homeUrl : this.homeUrl,\r\n                theme:                      changesOnly ? this._theme : this.theme,\r\n                showDashboardStatistics:    changesOnly ? this._showDashboardStatistics : this.showDashboardStatistics,\r\n                showDashboardNotifications: changesOnly ? this._showDashboardNotifications : this.showDashboardNotifications,\r\n                showDashboardTodo:          changesOnly ? this._showDashboardTodo : this.showDashboardTodo,\r\n            };\r\n                      \r\n        return JSON.stringify(exportValue);\r\n    }\r\n\r\n\r\n    public clearLocalChanges() {\r\n        this._language = null;\r\n        this._homeUrl = null;\r\n        this._theme = null;\r\n        this._showDashboardStatistics = null;\r\n        this._showDashboardNotifications = null;\r\n        this._showDashboardTodo = null;\r\n\r\n        this.localStorage.deleteData(DBkeys.LANGUAGE);\r\n        this.localStorage.deleteData(DBkeys.HOME_URL);\r\n        this.localStorage.deleteData(DBkeys.THEME);\r\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_STATISTICS);\r\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\r\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_TODO);\r\n\r\n        this.resetLanguage();\r\n    }\r\n\r\n\r\n  public clearLogOutChanges() {\r\n    this._homeUrl = null;\r\n    this._theme = null;\r\n    this._showDashboardStatistics = null;\r\n    this._showDashboardNotifications = null;\r\n    this._showDashboardTodo = null;\r\n\r\n    this.localStorage.deleteData(DBkeys.HOME_URL);\r\n    this.localStorage.deleteData(DBkeys.THEME);\r\n    this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_STATISTICS);\r\n    this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\r\n    this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_TODO);\r\n  }\r\n\r\n\r\n    private resetLanguage() {\r\n        let language = this.translationService.useBrowserLanguage();\r\n\r\n        if (language) {\r\n            this._language = language;\r\n        }\r\n        else {\r\n            this._language = this.translationService.changeLanguage()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n  set language(value: string) {\r\n        this._language = value;\r\n        this.saveToLocalStore(value, DBkeys.LANGUAGE);\r\n        this.translationService.changeLanguage(value);\r\n    }\r\n  get language() {\r\n        if (this._language != null)\r\n            return this._language;\r\n\r\n        return ConfigurationService.defaultLanguage;\r\n    }\r\n\r\n\r\n    set homeUrl(value: string) {\r\n        this._homeUrl = value;\r\n        this.saveToLocalStore(value, DBkeys.HOME_URL);\r\n    }\r\n    get homeUrl() {\r\n        if (this._homeUrl != null)\r\n            return this._homeUrl;\r\n\r\n        return ConfigurationService.defaultHomeUrl;\r\n    }\r\n\r\n\r\n    set theme(value: string) {\r\n        this._theme = value;\r\n        this.saveToLocalStore(value, DBkeys.THEME);\r\n    }\r\n    get theme() {\r\n        if (this._theme != null)\r\n            return this._theme;\r\n\r\n        return ConfigurationService.defaultTheme;\r\n    }\r\n\r\n\r\n    set showDashboardStatistics(value: boolean) {\r\n        this._showDashboardStatistics = value;\r\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_STATISTICS);\r\n    }\r\n    get showDashboardStatistics() {\r\n        if (this._showDashboardStatistics != null)\r\n            return this._showDashboardStatistics;\r\n\r\n        return ConfigurationService.defaultShowDashboardStatistics;\r\n    }\r\n\r\n\r\n    set showDashboardNotifications(value: boolean) {\r\n        this._showDashboardNotifications = value;\r\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\r\n    }\r\n    get showDashboardNotifications() {\r\n        if (this._showDashboardNotifications != null)\r\n            return this._showDashboardNotifications;\r\n\r\n        return ConfigurationService.defaultShowDashboardNotifications;\r\n    }\r\n\r\n\r\n    set showDashboardTodo(value: boolean) {\r\n        this._showDashboardTodo = value;\r\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_TODO);\r\n    }\r\n    get showDashboardTodo() {\r\n        if (this._showDashboardTodo != null)\r\n            return this._showDashboardTodo;\r\n\r\n        return ConfigurationService.defaultShowDashboardTodo;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DBkeys {\r\n\r\n    public static readonly CURRENT_USER = 'current_user';\r\n    public static readonly USER_PERMISSIONS = 'user_permissions';\r\n    public static readonly ACCESS_TOKEN = 'access_token';\r\n    public static readonly ID_TOKEN = 'id_token';\r\n    public static readonly REFRESH_TOKEN = 'refresh_token';\r\n    public static readonly TOKEN_EXPIRES_IN = 'expires_in';\r\n\r\n    public static readonly REMEMBER_ME = 'remember_me';\r\n\r\n\r\n    public static readonly LANGUAGE = 'language';\r\n    public static readonly HOME_URL = 'home_url';\r\n    public static readonly THEME = 'theme';\r\n    public static readonly SHOW_DASHBOARD_STATISTICS = 'show_dashboard_statistics';\r\n    public static readonly SHOW_DASHBOARD_NOTIFICATIONS = 'show_dashboard_notifications';\r\n    public static readonly SHOW_DASHBOARD_TODO = 'show_dashboard_todo';\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, Subject, throwError } from 'rxjs';\r\nimport { mergeMap, switchMap, catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { ConfigurationService } from './configuration.service';\r\n\r\n\r\n@Injectable()\r\nexport class EndpointFactory {\r\n  static readonly apiVersion: string = \"1\";\r\n\r\n  private readonly _loginUrl: string = \"/connect/token\";\r\n\r\n  private get loginUrl() { return this.configurations.baseUrl + this._loginUrl; }\r\n\r\n  private taskPauser: Subject<any>;\r\n  private isRefreshingLogin: boolean;\r\n\r\n  private _authService: AuthService;\r\n\r\n  private get authService() {\r\n    if (!this._authService)\r\n      this._authService = this.injector.get(AuthService);\r\n\r\n    return this._authService;\r\n  }\r\n\r\n\r\n\r\n  constructor(protected http: HttpClient, protected configurations: ConfigurationService, private injector: Injector) {\r\n\r\n  }\r\n\r\n\r\n  getLoginEndpoint<T>(userName: string, password: string): Observable<T> {\r\n\r\n    let header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    let params = new HttpParams()\r\n      .append('username', userName)\r\n      .append('password', password)\r\n      .append('grant_type', 'password')\r\n      .append('scope', 'openid email phone profile offline_access roles');\r\n\r\n    let requestBody = params.toString();\r\n\r\n    return this.http.post<T>(this.loginUrl, requestBody, { headers: header });\r\n  }\r\n\r\n  getRefreshLoginEndpoint<T>(): Observable<T> {\r\n\r\n    let header = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n\r\n    let params = new HttpParams()\r\n      .append('refresh_token', this.authService.refreshToken)\r\n      .append('grant_type', 'refresh_token')\r\n      .append('scope', 'openid email phone profile offline_access roles');\r\n\r\n    let requestBody = params.toString();\r\n\r\n    return this.http.post<T>(this.loginUrl, requestBody, { headers: header }).pipe<T>(\r\n      catchError(error => {\r\n        return this.handleError(error, () => this.getRefreshLoginEndpoint());\r\n      }));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  protected getRequestHeaders(): { headers: HttpHeaders | { [header: string]: string | string[]; } } {\r\n    let headers = new HttpHeaders({\r\n      'Authorization': 'Bearer ' + this.authService.accessToken,\r\n      'Content-Type': 'application/json',\r\n      'Accept': `application/vnd.iman.v${EndpointFactory.apiVersion}+json, application/json, text/plain, */*`,\r\n      'App-Version': ConfigurationService.appVersion\r\n    });\r\n\r\n    return { headers: headers };\r\n  }\r\n  protected getRequestHeadersText(): { headers: HttpHeaders | { [header: string]: string | string[]; } } {\r\n    let headers = new HttpHeaders({\r\n      'Authorization': 'Bearer ' + this.authService.accessToken,\r\n      'Content-Type': 'text/plain',\r\n      'Accept': `application/vnd.iman.v${EndpointFactory.apiVersion}+json, application/json, text/plain, */*`,\r\n      'App-Version': ConfigurationService.appVersion\r\n    });\r\n\r\n    return { headers: headers };\r\n  }\r\n\r\n  protected handleError(error, continuation?: () => Observable<any>) {\r\n\r\n    if (error.status == 401) {\r\n      if (this.isRefreshingLogin) {\r\n        return this.pauseTask(continuation);\r\n      }\r\n\r\n      this.isRefreshingLogin = true;\r\n\r\n      return this.authService.refreshLogin().pipe(\r\n        mergeMap(data => {\r\n          this.isRefreshingLogin = false;\r\n          this.resumeTasks(true);\r\n\r\n          return continuation ? continuation() : null;\r\n        }),\r\n        catchError(refreshLoginError => {\r\n          this.isRefreshingLogin = false;\r\n          this.resumeTasks(false);\r\n\r\n          if (refreshLoginError.status == 401 || (refreshLoginError.url && refreshLoginError.url.toLowerCase().includes(this.loginUrl.toLowerCase()))) {\r\n            this.authService.reLogin();\r\n            return throwError('session expired');\r\n          }\r\n          else {\r\n            return throwError(refreshLoginError || 'server error');\r\n          }\r\n        }));\r\n    }\r\n\r\n    if (error.url && error.url.toLowerCase().includes(this.loginUrl.toLowerCase())) {\r\n      this.authService.reLogin();\r\n\r\n      return throwError((error.error && error.error.error_description) ? `session expired (${error.error.error_description})` : 'session expired');\r\n    }\r\n    else {\r\n      return throwError(error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private pauseTask(continuation: () => Observable<any>) {\r\n    if (!this.taskPauser)\r\n      this.taskPauser = new Subject();\r\n\r\n    return this.taskPauser.pipe(switchMap(continueOp => {\r\n      if (continueOp)\r\n        if (continuation)\r\n          return continuation();\r\n        else\r\n          return null;\r\n      \r\n      throwError('session expired');\r\n    }));\r\n  }\r\n\r\n\r\n  private resumeTasks(continueOp: boolean) {\r\n    setTimeout(() => {\r\n      if (this.taskPauser) {\r\n        this.taskPauser.next(continueOp);\r\n        this.taskPauser.complete();\r\n        this.taskPauser = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\nimport { EndpointFactory } from './endpoint-factory.service';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { pipe } from '@angular/core/src/render3/pipe';\r\nimport { PdfResponse } from '../models/pdf-response.model';\r\n\r\n@Injectable()\r\nexport class InvoiceEndpoint extends EndpointFactory {\r\n\r\n  private readonly _openInvoicesUrl: string = \"/api/invoice/open\";\r\n  private readonly _closedInvoicesUrl: string = \"/api/invoice/closed\";\r\n  private readonly _invoicePdfUrl: string = \"/api/invoice/pdf\";\r\n \r\n  get openInvoicesUrl() { return this.configurations.baseUrl + this._openInvoicesUrl; }\r\n  get closedInvoicesUrl() { return this.configurations.baseUrl + this._closedInvoicesUrl; } \r\n  get pdfUrl() { return this.configurations.baseUrl + this._invoicePdfUrl; }\r\n\r\n  constructor(http: HttpClient, configurations: ConfigurationService, injector: Injector) {\r\n    super(http, configurations, injector);\r\n  }\r\n\r\n  // get open invoices\r\n  getOpenInvoicesEndpoint<T>(): Observable<T> {\r\n    return this.http.post(this.openInvoicesUrl, null, this.getRequestHeaders()).pipe<T>(\r\n      catchError(error => {\r\n        return this.handleError(error, () => this.getOpenInvoicesEndpoint());\r\n      }));\r\n  }\r\n\r\n\r\n  // get closed invoices\r\n  getClosedInvoicesEndpoint<T>(): Observable<T> {\r\n    return this.http.post(this.closedInvoicesUrl, null, this.getRequestHeaders()).pipe<T>(\r\n      catchError(error => {\r\n        return this.handleError(error, () => this.getClosedInvoicesEndpoint());\r\n      }));\r\n  }\r\n\r\n\r\n  getInvoicePDF(invoiceNumber: string): Observable<PdfResponse> {\r\n    let pdflink = this.pdfUrl + \"?InvoiceNumber=\" + invoiceNumber;\r\n    return this.http.get(pdflink, this.getRequestHeaders()).pipe<PdfResponse>();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationExtras } from \"@angular/router\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin } from 'rxjs';\r\nimport { map, mergeMap, tap } from 'rxjs/operators';\r\n\r\nimport { InvoiceEndpoint } from './invoice-endpoint.service';\r\nimport { AuthService } from './auth.service';\r\nimport { Invoice } from '../models/invoice.model';\r\nimport { PdfResponse } from '../models/pdf-response.model';\r\n\r\n@Injectable()\r\nexport class InvoiceService {\r\n\r\n  userInvoices: Invoice[];\r\n  invoicesToPay: Invoice[];\r\n  invoicesTotalToPay: number;\r\n  openInvoicesTotal: number;\r\n\r\n  constructor(private router: Router, private http: HttpClient, private authService: AuthService,\r\n    private invoiceEndpoint: InvoiceEndpoint) {\r\n\r\n    this.invoicesToPay = [];\r\n    this.userInvoices = [];\r\n  }\r\n\r\n\r\n  getOpenInvoices() {\r\n    return this.invoiceEndpoint.getOpenInvoicesEndpoint<Invoice[]>();\r\n  }\r\n\r\n  getClosedInvoices() {\r\n    return this.invoiceEndpoint.getClosedInvoicesEndpoint<Invoice[]>();\r\n  }\r\n\r\n  setUserInvoices(invoices: Invoice[]) {\r\n    this.userInvoices = invoices;\r\n  }\r\n\r\n  getInvoicesToPay(): Invoice[] {\r\n\r\n    this.invoicesToPay = [];\r\n\r\n    for (let i = 0; i < this.userInvoices.length; i++) {\r\n      if (this.userInvoices[i].userPaymentAmount > 0) {\r\n        this.invoicesToPay.push(this.userInvoices[i]);\r\n      }\r\n    }\r\n\r\n    return this.invoicesToPay;\r\n  }\r\n\r\n  getOpenInvoicesTotal(): number {\r\n\r\n    if (!this.userInvoices) \r\n      return 0;\r\n\r\n    this.openInvoicesTotal = 0;\r\n\r\n    for (let i = 0; i < this.userInvoices.length; i++) {\r\n      if (this.userInvoices[i].balance > 0) {\r\n        this.openInvoicesTotal += this.userInvoices[i].balance;\r\n      }\r\n    }\r\n\r\n\r\n    return this.openInvoicesTotal;\r\n  }\r\n\r\n  getInvoicesPaymentTotal(): number {\r\n\r\n    if (!this.invoicesToPay)\r\n      return 0;\r\n\r\n    this.invoicesTotalToPay = 0;\r\n\r\n    for (let i = 0; i < this.invoicesToPay.length; i++) {\r\n      if (this.invoicesToPay[i].userPaymentAmount > 0) {\r\n        this.invoicesTotalToPay += this.invoicesToPay[i].userPaymentAmount;\r\n      }\r\n    }\r\n\r\n    return this.invoicesTotalToPay;\r\n  }\r\n\r\n  getUserInvoices(): Invoice[] {\r\n    return this.userInvoices;\r\n  }\r\n\r\n  getInvoicePDF(invoiceNumber: string): Observable<PdfResponse> {\r\n    return this.invoiceEndpoint.getInvoicePDF(invoiceNumber);\r\n  }\r\n \r\n}\r\n","/**\r\n * Helper class to decode and find JWT expiration.\r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class JwtHelper {\r\n\r\n    public urlBase64Decode(str: string): string {\r\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0: { break; }\r\n            case 2: { output += '=='; break; }\r\n            case 3: { output += '='; break; }\r\n            default: {\r\n                throw new Error('Illegal base64url string!');\r\n            }\r\n        }\r\n        return this.b64DecodeUnicode(output);\r\n    }\r\n\r\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\n    private b64DecodeUnicode(str: any) {\r\n        return decodeURIComponent(Array.prototype.map.call(atob(str), (c: any) => {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    }\r\n\r\n    public decodeToken(token: string): any {\r\n        const parts = token.split('.');\r\n\r\n        if (parts.length !== 3) {\r\n            throw new Error('JWT must have 3 parts');\r\n        }\r\n\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error('Cannot decode the token');\r\n        }\r\n\r\n        return JSON.parse(decoded);\r\n    }\r\n\r\n    public getTokenExpirationDate(token: string): Date {\r\n        let decoded: any;\r\n        decoded = this.decodeToken(token);\r\n\r\n        if (!decoded.hasOwnProperty('exp')) {\r\n            return null;\r\n        }\r\n\r\n        const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        date.setUTCSeconds(decoded.exp);\r\n\r\n        return date;\r\n    }\r\n\r\n    public isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        const date = this.getTokenExpirationDate(token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (date == null) {\r\n            return false;\r\n        }\r\n\r\n        // Token expired?\r\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LanguageObservableService {\r\n  private language = new Subject<string>();\r\n  public languageStream$ = this.language.asObservable();\r\n\r\n  constructor() {}\r\n\r\n\r\n  setDefaultLanguage(language)\r\n  {\r\n    this.language.next(language); \r\n  }\r\n\r\n  getDefaultLanguage() {\r\n    return this.language;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { Utilities } from './utilities';\r\n\r\n@Injectable()\r\n/**\r\n* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.\r\n*/\r\nexport class LocalStoreManager {\r\n\r\n  private static syncListenerInitialised = false;\r\n  private syncKeys: string[] = [];\r\n  private initEvent = new Subject();\r\n\r\n  private reservedKeys: string[] =\r\n    [\r\n      'sync_keys',\r\n      'addToSyncKeys',\r\n      'removeFromSyncKeys',\r\n      'getSessionStorage',\r\n      'setSessionStorage',\r\n      'addToSessionStorage',\r\n      'removeFromSessionStorage',\r\n      'clearAllSessionsStorage'\r\n    ];\r\n\r\n  public static readonly DBKEY_USER_DATA = \"user_data\";\r\n  private static readonly DBKEY_SYNC_KEYS = \"sync_keys\";\r\n\r\n\r\n  public initialiseStorageSyncListener() {\r\n    if (LocalStoreManager.syncListenerInitialised == true)\r\n      return;\r\n\r\n    LocalStoreManager.syncListenerInitialised = true;\r\n    window.addEventListener(\"storage\", this.sessionStorageTransferHandler, false);\r\n    this.syncSessionStorage();\r\n  }\r\n\r\n\r\n\r\n  public deinitialiseStorageSyncListener() {\r\n\r\n    window.removeEventListener(\"storage\", this.sessionStorageTransferHandler, false);\r\n\r\n    LocalStoreManager.syncListenerInitialised = false;\r\n  }\r\n\r\n\r\n\r\n\r\n  private sessionStorageTransferHandler = (event: StorageEvent) => {\r\n\r\n    if (!event.newValue)\r\n      return;\r\n\r\n    if (event.key == 'getSessionStorage') {\r\n\r\n      if (sessionStorage.length) {\r\n        this.localStorageSetItem('setSessionStorage', sessionStorage);\r\n        localStorage.removeItem('setSessionStorage');\r\n      }\r\n    }\r\n    else if (event.key == 'setSessionStorage') {\r\n\r\n      if (!this.syncKeys.length)\r\n        this.loadSyncKeys();\r\n\r\n      let data = JSON.parse(event.newValue);\r\n      //console.info(\"Set => Key: Transfer setSessionStorage\" + \",  data: \" + JSON.stringify(data));\r\n\r\n      for (let key in data) {\r\n\r\n        if (this.syncKeysContains(key))\r\n          this.sessionStorageSetItem(key, JSON.parse(data[key]));\r\n      }\r\n\r\n      this.onInit();\r\n    }\r\n    else if (event.key == 'addToSessionStorage') {\r\n\r\n      let data = JSON.parse(event.newValue);\r\n\r\n      //console.warn(\"Set => Key: Transfer addToSessionStorage\" + \",  data: \" + JSON.stringify(data));\r\n\r\n      this.addToSessionStorageHelper(data[\"data\"], data[\"key\"]);\r\n    }\r\n    else if (event.key == 'removeFromSessionStorage') {\r\n\r\n      this.removeFromSessionStorageHelper(event.newValue);\r\n    }\r\n    else if (event.key == 'clearAllSessionsStorage' && sessionStorage.length) {\r\n\r\n      this.clearInstanceSessionStorage();\r\n    }\r\n    else if (event.key == 'addToSyncKeys') {\r\n\r\n      this.addToSyncKeysHelper(event.newValue);\r\n    }\r\n    else if (event.key == 'removeFromSyncKeys') {\r\n\r\n      this.removeFromSyncKeysHelper(event.newValue);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private syncSessionStorage() {\r\n\r\n    localStorage.setItem('getSessionStorage', '_dummy');\r\n    localStorage.removeItem('getSessionStorage');\r\n  }\r\n\r\n\r\n  public clearAllStorage() {\r\n\r\n    this.clearAllSessionsStorage();\r\n    this.clearLocalStorage();\r\n  }\r\n\r\n\r\n  public clearAllSessionsStorage() {\r\n\r\n    this.clearInstanceSessionStorage();\r\n    localStorage.removeItem(LocalStoreManager.DBKEY_SYNC_KEYS);\r\n\r\n    localStorage.setItem('clearAllSessionsStorage', '_dummy');\r\n    localStorage.removeItem('clearAllSessionsStorage');\r\n  }\r\n\r\n\r\n  public clearInstanceSessionStorage() {\r\n\r\n    sessionStorage.clear();\r\n    this.syncKeys = [];\r\n  }\r\n\r\n\r\n  public clearLocalStorage() {\r\n    localStorage.clear();\r\n  }\r\n\r\n\r\n\r\n\r\n  private addToSessionStorage(data: any, key: string) {\r\n\r\n    this.addToSessionStorageHelper(data, key);\r\n    this.addToSyncKeysBackup(key);\r\n\r\n    this.localStorageSetItem('addToSessionStorage', { key: key, data: data });\r\n    localStorage.removeItem('addToSessionStorage');\r\n  }\r\n\r\n  private addToSessionStorageHelper(data: any, key: string) {\r\n\r\n    this.addToSyncKeysHelper(key);\r\n    this.sessionStorageSetItem(key, data);\r\n  }\r\n\r\n\r\n  private removeFromSessionStorage(keyToRemove: string) {\r\n\r\n    this.removeFromSessionStorageHelper(keyToRemove);\r\n    this.removeFromSyncKeysBackup(keyToRemove);\r\n\r\n    localStorage.setItem('removeFromSessionStorage', keyToRemove);\r\n    localStorage.removeItem('removeFromSessionStorage');\r\n  }\r\n\r\n\r\n  private removeFromSessionStorageHelper(keyToRemove: string) {\r\n\r\n    sessionStorage.removeItem(keyToRemove);\r\n    this.removeFromSyncKeysHelper(keyToRemove);\r\n  }\r\n\r\n\r\n  private testForInvalidKeys(key: string) {\r\n\r\n    if (!key)\r\n      throw new Error(\"key cannot be empty\")\r\n\r\n    if (this.reservedKeys.some(x => x == key))\r\n      throw new Error(`The storage key \"${key}\" is reserved and cannot be used. Please use a different key`);\r\n  }\r\n\r\n\r\n  private syncKeysContains(key: string) {\r\n\r\n    return this.syncKeys.some(x => x == key);\r\n  }\r\n\r\n\r\n  private loadSyncKeys() {\r\n\r\n    if (this.syncKeys.length)\r\n      return;\r\n\r\n    this.syncKeys = this.getSyncKeysFromStorage();\r\n  }\r\n\r\n\r\n  private getSyncKeysFromStorage(defaultValue: string[] = []): string[] {\r\n\r\n    let data = this.localStorageGetItem(LocalStoreManager.DBKEY_SYNC_KEYS);\r\n\r\n    if (data == null)\r\n      return defaultValue;\r\n    else\r\n      return <string[]>data;\r\n  }\r\n\r\n\r\n  private addToSyncKeys(key: string) {\r\n\r\n    this.addToSyncKeysHelper(key);\r\n    this.addToSyncKeysBackup(key);\r\n\r\n    localStorage.setItem('addToSyncKeys', key);\r\n    localStorage.removeItem('addToSyncKeys');\r\n  }\r\n\r\n\r\n  private addToSyncKeysBackup(key: string) {\r\n\r\n    let storedSyncKeys = this.getSyncKeysFromStorage();\r\n\r\n    if (!storedSyncKeys.some(x => x == key)) {\r\n      storedSyncKeys.push(key);\r\n      this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\r\n    }\r\n  }\r\n\r\n  private removeFromSyncKeysBackup(key: string) {\r\n\r\n    let storedSyncKeys = this.getSyncKeysFromStorage();\r\n\r\n    let index = storedSyncKeys.indexOf(key);\r\n\r\n    if (index > -1) {\r\n      storedSyncKeys.splice(index, 1);\r\n      this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\r\n    }\r\n  }\r\n\r\n\r\n  private addToSyncKeysHelper(key: string) {\r\n\r\n    if (!this.syncKeysContains(key))\r\n      this.syncKeys.push(key);\r\n  }\r\n\r\n\r\n\r\n  private removeFromSyncKeys(key: string) {\r\n\r\n    this.removeFromSyncKeysHelper(key);\r\n    this.removeFromSyncKeysBackup(key);\r\n\r\n    localStorage.setItem('removeFromSyncKeys', key);\r\n    localStorage.removeItem('removeFromSyncKeys');\r\n  }\r\n\r\n\r\n  private removeFromSyncKeysHelper(key: string) {\r\n\r\n    let index = this.syncKeys.indexOf(key);\r\n\r\n    if (index > -1) {\r\n      this.syncKeys.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n  public saveSessionData(data: any, key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    this.removeFromSyncKeys(key);\r\n    localStorage.removeItem(key);\r\n    this.sessionStorageSetItem(key, data);\r\n  }\r\n\r\n\r\n  public saveSyncedSessionData(data: any, key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    localStorage.removeItem(key);\r\n    this.addToSessionStorage(data, key);\r\n  }\r\n\r\n\r\n  public savePermanentData(data: any, key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    this.removeFromSessionStorage(key);\r\n    this.localStorageSetItem(key, data);\r\n  }\r\n\r\n\r\n\r\n  public moveDataToSessionStorage(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    let data = this.getData(key);\r\n\r\n    if (data == null)\r\n      return;\r\n\r\n    this.saveSessionData(data, key);\r\n  }\r\n\r\n\r\n  public moveDataToSyncedSessionStorage(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    let data = this.getData(key);\r\n\r\n    if (data == null)\r\n      return;\r\n\r\n    this.saveSyncedSessionData(data, key);\r\n  }\r\n\r\n\r\n  public moveDataToPermanentStorage(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    let data = this.getData(key);\r\n\r\n    if (data == null)\r\n      return;\r\n\r\n    this.savePermanentData(data, key);\r\n  }\r\n\r\n\r\n  public exists(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    let data = sessionStorage.getItem(key);\r\n\r\n    if (data == null)\r\n      data = localStorage.getItem(key);\r\n\r\n    return data != null;\r\n  }\r\n\r\n\r\n  public getData(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    let data = this.sessionStorageGetItem(key);\r\n\r\n    if (data == null)\r\n      data = this.localStorageGetItem(key);\r\n\r\n    return data;\r\n  }\r\n\r\n\r\n  public getDataObject<T>(key = LocalStoreManager.DBKEY_USER_DATA, isDateType = false): T {\r\n\r\n    let data = this.getData(key);\r\n\r\n    if (data != null) {\r\n      if (isDateType)\r\n        data = new Date(data);\r\n\r\n      return <T>data;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  public deleteData(key = LocalStoreManager.DBKEY_USER_DATA) {\r\n\r\n    this.testForInvalidKeys(key);\r\n\r\n    this.removeFromSessionStorage(key);\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  private localStorageSetItem(key: string, data: any) {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  }\r\n\r\n  private sessionStorageSetItem(key: string, data: any) {\r\n    sessionStorage.setItem(key, JSON.stringify(data));\r\n  }\r\n\r\n\r\n  private localStorageGetItem(key: string) {\r\n    return Utilities.JSonTryParse(localStorage.getItem(key));\r\n  }\r\n\r\n  private sessionStorageGetItem(key: string) {\r\n    return Utilities.JSonTryParse(sessionStorage.getItem(key));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  private onInit() {\r\n    setTimeout(() => {\r\n      this.initEvent.next();\r\n      this.initEvent.complete();\r\n    });\r\n  }\r\n\r\n\r\n  public getInitEvent(): Observable<{}> {\r\n    return this.initEvent.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class NotificationEndpoint {\r\n\r\n  private demoNotifications = [\r\n    {\r\n      \"id\": 1,\r\n      \"header\": \"20 New Products were added to your inventory by \\\"administrator\\\"\",\r\n      \"body\": \"20 new \\\"BMW M6\\\" were added to your stock by \\\"administrator\\\" on 5/28/2017 4:54:13 PM\",\r\n      \"isRead\": true,\r\n      \"isPinned\": true,\r\n      \"date\": \"2017-05-28T16:29:13.5877958\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"header\": \"1 Product running low\",\r\n      \"body\": \"You are running low on \\\"Nissan Patrol\\\". 2 Items remaining\",\r\n      \"isRead\": false,\r\n      \"isPinned\": false,\r\n      \"date\": \"2017-05-28T19:54:42.4144502\"\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"header\": \"Tomorrow is half day\",\r\n      \"body\": \"Guys, tomorrow we close by midday. Please check in your sales before noon. Thanx. Alex.\",\r\n      \"isRead\": false,\r\n      \"isPinned\": false,\r\n      \"date\": \"2017-05-30T11:13:42.4144502\"\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  getNotificationEndpoint<T>(notificationId: number): Observable<T> {\r\n\r\n    let notification = this.demoNotifications.find(val => val.id == notificationId);\r\n    let response: HttpResponse<T>;\r\n\r\n    if (notification) {\r\n      response = this.createResponse<T>(notification, 200);\r\n    }\r\n    else {\r\n      response = this.createResponse<T>(null, 404);\r\n    }\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getNotificationsEndpoint<T>(page: number, pageSize: number): Observable<T> {\r\n\r\n    let notifications = this.demoNotifications;\r\n    let response = this.createResponse<T>(this.demoNotifications, 200);\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getUnreadNotificationsEndpoint<T>(userId?: string): Observable<T> {\r\n\r\n    let unreadNotifications = this.demoNotifications.filter(val => !val.isRead);\r\n    let response = this.createResponse<T>(unreadNotifications, 200);\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getNewNotificationsEndpoint<T>(lastNotificationDate?: Date): Observable<T> {\r\n\r\n    let unreadNotifications = this.demoNotifications;\r\n    let response = this.createResponse<T>(unreadNotifications, 200);\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getPinUnpinNotificationEndpoint<T>(notificationId: number, isPinned?: boolean, ): Observable<T> {\r\n\r\n    let notification = this.demoNotifications.find(val => val.id == notificationId);\r\n    let response: HttpResponse<T>;\r\n\r\n    if (notification) {\r\n      response = this.createResponse<T>(null, 204);\r\n\r\n      if (isPinned == null)\r\n        isPinned = !notification.isPinned;\r\n\r\n      notification.isPinned = isPinned;\r\n      notification.isRead = true;\r\n    }\r\n    else {\r\n      response = this.createResponse<T>(null, 404);\r\n    }\r\n\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getReadUnreadNotificationEndpoint<T>(notificationIds: number[], isRead: boolean, ): Observable<T> {\r\n\r\n    for (let notificationId of notificationIds) {\r\n\r\n      let notification = this.demoNotifications.find(val => val.id == notificationId);\r\n\r\n      if (notification) {\r\n        notification.isRead = isRead;\r\n      }\r\n    }\r\n\r\n    let response = this.createResponse<T>(null, 204);\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  getDeleteNotificationEndpoint<T>(notificationId: number): Observable<T> {\r\n\r\n    let notification = this.demoNotifications.find(val => val.id == notificationId);\r\n    let response: HttpResponse<T>;\r\n\r\n    if (notification) {\r\n      this.demoNotifications = this.demoNotifications.filter(val => val.id != notificationId)\r\n      response = this.createResponse<T>(notification, 200);\r\n    }\r\n    else {\r\n      response = this.createResponse<T>(null, 404);\r\n    }\r\n\r\n    return of(response.body);\r\n  }\r\n\r\n\r\n\r\n  private createResponse<T>(body, status: number) {\r\n    return new HttpResponse<T>({ body: body, status: status });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { map, flatMap, startWith } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { NotificationEndpoint } from './notification-endpoint.service';\r\nimport { Notification } from '../models/notification.model';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n  private lastNotificationDate: Date;\r\n  private _recentNotifications: Notification[];\r\n\r\n  get recentNotifications() {\r\n    return this._recentNotifications;\r\n  }\r\n\r\n  set recentNotifications(notifications: Notification[]) {\r\n    this._recentNotifications = notifications;\r\n  }\r\n\r\n\r\n\r\n  constructor(private notificationEndpoint: NotificationEndpoint, private authService: AuthService) {\r\n\r\n  }\r\n\r\n\r\n  getNotification(notificationId?: number) {\r\n\r\n    return this.notificationEndpoint.getNotificationEndpoint(notificationId).pipe(\r\n      map(response => Notification.Create(response)));\r\n  }\r\n\r\n\r\n  getNotifications(page: number, pageSize: number) {\r\n\r\n    return this.notificationEndpoint.getNotificationsEndpoint(page, pageSize).pipe(\r\n      map(response => {\r\n        return this.getNotificationsFromResponse(response);\r\n      }));\r\n  }\r\n\r\n\r\n  getUnreadNotifications(userId?: string) {\r\n\r\n    return this.notificationEndpoint.getUnreadNotificationsEndpoint(userId).pipe(\r\n      map(response => this.getNotificationsFromResponse(response)));\r\n  }\r\n\r\n\r\n  getNewNotifications() {\r\n    return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\r\n      map(response => this.processNewNotificationsFromResponse(response)));\r\n  }\r\n\r\n\r\n  getNewNotificationsPeriodically() {\r\n    return interval(10000).pipe(\r\n      startWith(0),\r\n      flatMap(() => {\r\n        return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\r\n          map(response => this.processNewNotificationsFromResponse(response)));\r\n      }));\r\n  }\r\n\r\n\r\n\r\n\r\n  pinUnpinNotification(notificationOrNotificationId: number | Notification, isPinned?: boolean): Observable<any> {\r\n\r\n    if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {\r\n      return this.notificationEndpoint.getPinUnpinNotificationEndpoint(<number>notificationOrNotificationId, isPinned);\r\n    }\r\n    else {\r\n      return this.pinUnpinNotification(notificationOrNotificationId.id);\r\n    }\r\n  }\r\n\r\n\r\n  readUnreadNotification(notificationIds: number[], isRead: boolean): Observable<any> {\r\n\r\n    return this.notificationEndpoint.getReadUnreadNotificationEndpoint(notificationIds, isRead);\r\n  }\r\n\r\n\r\n\r\n\r\n  deleteNotification(notificationOrNotificationId: number | Notification): Observable<Notification> {\r\n\r\n    if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { //Todo: Test me if its check is valid\r\n      return this.notificationEndpoint.getDeleteNotificationEndpoint(<number>notificationOrNotificationId).pipe(\r\n        map(response => {\r\n          this.recentNotifications = this.recentNotifications.filter(n => n.id != notificationOrNotificationId);\r\n          return Notification.Create(response);\r\n        }));\r\n    }\r\n    else {\r\n      return this.deleteNotification(notificationOrNotificationId.id);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  private processNewNotificationsFromResponse(response) {\r\n    let notifications = this.getNotificationsFromResponse(response);\r\n\r\n    for (let n of notifications) {\r\n      if (n.date > this.lastNotificationDate)\r\n        this.lastNotificationDate = n.date;\r\n    }\r\n\r\n    return notifications;\r\n  }\r\n\r\n\r\n  private getNotificationsFromResponse(response) {\r\n    let notifications: Notification[] = [];\r\n\r\n    for (let i in response) {\r\n      notifications[i] = Notification.Create(response[i]);\r\n    }\r\n\r\n    notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());\r\n    notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);\r\n\r\n    this.recentNotifications = notifications;\r\n\r\n    return notifications;\r\n  }\r\n\r\n\r\n\r\n  get currentUser() {\r\n    return this.authService.currentUser;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\nimport { EndpointFactory } from './endpoint-factory.service';\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { pipe } from '@angular/core/src/render3/pipe';\r\nimport { PaymentMethod } from '../models/payment-method.model';\r\nimport { PaymentProfile } from '../models/payment-profile.model';\r\n\r\n\r\n@Injectable()\r\nexport class PaymentServiceEndpoint extends EndpointFactory {\r\n  private readonly baseUrlPayment: string = \"/api/payment\";\r\n  private readonly _autopayUrl: string = \"/api/payment/auto\";\r\n\r\n  get getPaymentUrl() { return this.configurations.baseUrl + this.baseUrlPayment; }\r\n  get autopayUrl() { return this.configurations.baseUrl + this._autopayUrl; }\r\n\r\n  constructor(http: HttpClient, configurations: ConfigurationService, injector: Injector) {\r\n    super(http, configurations, injector);\r\n  }\r\n\r\n\r\n  getPaymentEndpoint<T>(paymentMethodId: string): Observable<T> {\r\n    let endpointUrl = `${this.getPaymentUrl}/${paymentMethodId}`;\r\n\r\n    return this.http\r\n      .get(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n  getPaymentsEndpoint<T>(): Observable<T> {\r\n    let endpointUrl = `${this.getPaymentUrl}/list`;\r\n\r\n    return this.http\r\n      .get(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n  savePaymentMethod<T>(paymentMethod: PaymentMethod): Observable<T> {\r\n \r\n    return this.http\r\n      .put<T>(this.autopayUrl, JSON.stringify(paymentMethod), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n  savePaymentProfile<T>(paymentProfile: PaymentProfile): Observable<T> {\r\n    return this.http\r\n      .put<T>(this.getPaymentUrl, JSON.stringify(paymentProfile), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n  deletePaymentProfile<T>(paymentMethodId: string): Observable<T> {\r\n    let endpointUrl = `${this.getPaymentUrl}/${paymentMethodId}`;\r\n\r\n    return this.http\r\n      .delete<T>(endpointUrl, this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n  submitPayment<T>(paymentMethodId: string, invoiceNumbers: string[], PaymentAmount: number): Observable<T> {\r\n    let endpointUrl = `${this.getPaymentUrl}/pay/${paymentMethodId}`;\r\n\r\n    return this.http\r\n      .post<T>(endpointUrl, JSON.stringify({ invoices: invoiceNumbers, PaymentAmount: PaymentAmount }), this.getRequestHeaders())\r\n      .pipe<T>(catchError(error => this.handleError(error)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationExtras } from \"@angular/router\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, forkJoin } from 'rxjs';\r\nimport { map, mergeMap, tap } from 'rxjs/operators';\r\n\r\nimport { PaymentServiceEndpoint } from './payment-service-endpoint.service';\r\nimport { AuthService } from './auth.service';\r\nimport { PaymentMethod } from '../models/payment-method.model';\r\nimport { PaymentProfile } from '../models/payment-profile.model';\r\nimport { Invoice } from '../models/invoice.model';\r\nimport { PaymentResult } from '../models/payment-result-model';\r\n\r\n\r\n@Injectable()\r\nexport class PaymentService {\r\n  constructor(private router: Router, private http: HttpClient, private authService: AuthService,\r\n                              private paymentServiceEndpoint: PaymentServiceEndpoint) {\r\n  }\r\n  getPaymentMethod(id: string) {\r\n    return this.paymentServiceEndpoint.getPaymentEndpoint<PaymentProfile>(id);\r\n  }\r\n\r\n  getPaymentMethods() {\r\n    return this.paymentServiceEndpoint.getPaymentsEndpoint<PaymentMethod[]>();\r\n  }\r\n  savePaymentMethod(paymentMethod: PaymentMethod) {\r\n    return this.paymentServiceEndpoint.savePaymentMethod<PaymentMethod>(paymentMethod);\r\n  }\r\n  savePaymentProfile(paymentProfile: PaymentProfile) {\r\n    return this.paymentServiceEndpoint.savePaymentProfile<PaymentProfile>(paymentProfile);\r\n  }\r\n  deletePaymentProfile(id: string) {\r\n    return this.paymentServiceEndpoint.deletePaymentProfile<boolean>(id);\r\n  }\r\n  submitPayment(paymentMethodId: string, invoiceNumbers: string[], paymentAmount: number) {\r\n    return this.paymentServiceEndpoint.submitPayment<PaymentResult>(paymentMethodId, invoiceNumbers, paymentAmount);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponseBase, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { modelState } from '../models/ctp.interface';\r\nimport { ModelStateDirective } from '../directives/modelstate.directive';\r\n\r\n\r\n@Injectable()\r\nexport class Utilities {\r\n\r\n  public static readonly captionAndMessageSeparator = ':';\r\n  public static readonly noNetworkMessageCaption = 'No Network';\r\n  public static readonly noNetworkMessageDetail = 'The server cannot be reached';\r\n  public static readonly accessDeniedMessageCaption = 'Access Denied!';\r\n  public static readonly accessDeniedMessageDetail = '';\r\n\r\n  public static getHttpErrors(response: HttpResponseBase): string[] {\r\n\r\n    const result: string[] = [];\r\n\r\n\r\n\r\n    if (this.checkNoNetwork(response)) {\r\n      result.push(`${this.noNetworkMessageCaption}${this.captionAndMessageSeparator} ${this.noNetworkMessageDetail}`);\r\n    }\r\n    else if (this.checkAccessDenied(response)) {\r\n      result.push(`${this.accessDeniedMessageCaption}${this.captionAndMessageSeparator} ${this.accessDeniedMessageDetail}`);\r\n    }\r\n\r\n\r\n    const body = this.getResponseBody(response);\r\n\r\n    if (body) {\r\n      if ((typeof body === 'object' || body instanceof Object)) {\r\n        for (const key in body) {\r\n          if (key) {\r\n            if (body[key] && (body[key] instanceof Array))\r\n              result.push(body[key]);\r\n            else\r\n              result.push(`${body[key]}`);\r\n          }\r\n        }\r\n      }\r\n      else if ((typeof body === 'string' || body instanceof String)) {\r\n        result.push(`${body}`);\r\n      }\r\n    }\r\n\r\n    if (result.length == 0) {\r\n      result.push(`${response.status}${this.captionAndMessageSeparator} ${response.statusText}`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static getHttpError(response: HttpResponseBase): modelState[] {\r\n\r\n    const result: modelState[] = [];\r\n\r\n\r\n\r\n    if (this.checkNoNetwork(response)) {\r\n      result.push({ 'connection': [`${this.noNetworkMessageCaption}`, `${this.noNetworkMessageDetail}`] });\r\n    }\r\n    else if (this.checkAccessDenied(response)) {\r\n      result.push({ 'connection': [`${this.accessDeniedMessageCaption}`, `${this.accessDeniedMessageDetail}`] });\r\n    }\r\n\r\n    const body = this.getResponseBody(response);\r\n\r\n    if (body && (typeof body === 'object' || body instanceof Object)) {\r\n      for (const key in body) {\r\n        if (key) {\r\n          if (body[key] && (body[key] instanceof Array))\r\n            result.push({ [`${key}`]: body[key] });\r\n          else\r\n            result.push({ [`${key}`]: [`${body[key]}`] });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (result.length == 0) {\r\n      result.push({ 'responseCode': [`${response.status}`, `${response.statusText}`] });\r\n    }\r\n\r\n    return result;\r\n  }\r\n  public static getHttpResponseMessage(data: HttpResponseBase | any): string[] {\r\n\r\n    const responses: string[] = [];\r\n\r\n    if (data instanceof HttpResponseBase) {\r\n\r\n      if (this.checkNoNetwork(data)) {\r\n        responses.push(`${this.noNetworkMessageCaption}${this.captionAndMessageSeparator} ${this.noNetworkMessageDetail}`);\r\n      } else {\r\n        const responseObject = this.getResponseBody(data);\r\n\r\n        if (responseObject && (typeof responseObject === 'object' || responseObject instanceof Object)) {\r\n\r\n          for (const key in responseObject) {\r\n            if (key) {\r\n              responses.push(`${key}${this.captionAndMessageSeparator} ${responseObject[key]}`);\r\n            } else if (responseObject[key]) {\r\n              responses.push(responseObject[key].toString());\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!responses.length && this.getResponseBody(data)) {\r\n        responses.push(`${data.statusText}: ${this.getResponseBody(data).toString()}`);\r\n      }\r\n    }\r\n\r\n    if (!responses.length) {\r\n      responses.push(data.toString());\r\n    }\r\n\r\n    if (this.checkAccessDenied(data)) {\r\n      responses.splice(0, 0, `${this.accessDeniedMessageCaption}${this.captionAndMessageSeparator} ${this.accessDeniedMessageDetail}`);\r\n    }\r\n\r\n\r\n    return responses;\r\n  }\r\n\r\n\r\n  public static findHttpResponseMessage(messageToFind: string, data: HttpResponse<any> | any, seachInCaptionOnly = true, includeCaptionInResult = false): string {\r\n\r\n    const searchString = messageToFind.toLowerCase();\r\n    const httpMessages = this.getHttpResponseMessage(data);\r\n\r\n    for (const message of httpMessages) {\r\n      const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\r\n\r\n      if (fullMessage.firstPart && fullMessage.firstPart.toLowerCase().indexOf(searchString) != -1) {\r\n        return includeCaptionInResult ? message : fullMessage.secondPart || fullMessage.firstPart;\r\n      }\r\n    }\r\n\r\n    if (!seachInCaptionOnly) {\r\n      for (const message of httpMessages) {\r\n\r\n        if (message.toLowerCase().indexOf(searchString) != -1) {\r\n          if (includeCaptionInResult) {\r\n            return message;\r\n          } else {\r\n            const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\r\n            return fullMessage.secondPart || fullMessage.firstPart;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  public static getResponseBody(response: HttpResponseBase) {\r\n    if (response instanceof HttpResponse) {\r\n      return response.body;\r\n    }\r\n\r\n    if (response instanceof HttpErrorResponse) {\r\n      return response.error || response.message || response.statusText;\r\n    }\r\n  }\r\n\r\n\r\n  public static checkNoNetwork(response: HttpResponseBase) {\r\n    if (response instanceof HttpResponseBase) {\r\n      return response.status == 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public static checkAccessDenied(response: HttpResponseBase) {\r\n    if (response instanceof HttpResponseBase) {\r\n      return response.status == 403;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public static checkNotFound(response: HttpResponseBase) {\r\n    if (response instanceof HttpResponseBase) {\r\n      return response.status == 404;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public static checkIsLocalHost(url: string, base?: string) {\r\n    if (url) {\r\n      const location = new URL(url, base);\r\n      return location.hostname === 'localhost' || location.hostname === '127.0.0.1';\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  public static getQueryParamsFromString(paramString: string) {\r\n\r\n    if (!paramString) {\r\n      return null;\r\n    }\r\n\r\n    const params: { [key: string]: string } = {};\r\n\r\n    for (const param of paramString.split('&')) {\r\n      const keyValue = Utilities.splitInTwo(param, '=');\r\n      params[keyValue.firstPart] = keyValue.secondPart;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n\r\n  public static splitInTwo(text: string, separator: string): { firstPart: string, secondPart: string } {\r\n    const separatorIndex = text.indexOf(separator);\r\n\r\n    if (separatorIndex == -1) {\r\n      return { firstPart: text, secondPart: null };\r\n    }\r\n\r\n    const part1 = text.substr(0, separatorIndex).trim();\r\n    const part2 = text.substr(separatorIndex + 1).trim();\r\n\r\n    return { firstPart: part1, secondPart: part2 };\r\n  }\r\n\r\n\r\n  public static safeStringify(object) {\r\n\r\n    let result: string;\r\n\r\n    try {\r\n      result = JSON.stringify(object);\r\n      return result;\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    const simpleObject = {};\r\n\r\n    for (const prop in object) {\r\n      if (!object.hasOwnProperty(prop)) {\r\n        continue;\r\n      }\r\n      if (typeof (object[prop]) == 'object') {\r\n        continue;\r\n      }\r\n      if (typeof (object[prop]) == 'function') {\r\n        continue;\r\n      }\r\n      simpleObject[prop] = object[prop];\r\n    }\r\n\r\n    result = '[***Sanitized Object***]: ' + JSON.stringify(simpleObject);\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  public static JSonTryParse(value: string) {\r\n    try {\r\n      return JSON.parse(value);\r\n    } catch (e) {\r\n      if (value === 'undefined') {\r\n        return void 0;\r\n      }\r\n\r\n      return value;\r\n    }\r\n  }\r\n\r\n\r\n  public static TestIsObjectEmpty(obj: any) {\r\n    for (const prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  public static TestIsUndefined(value: any) {\r\n    return typeof value === 'undefined';\r\n    //return value === undefined;\r\n  }\r\n\r\n\r\n  public static TestIsString(value: any) {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n\r\n\r\n  public static capitalizeFirstLetter(text: string) {\r\n    if (text) {\r\n      return text.charAt(0).toUpperCase() + text.slice(1);\r\n    } else {\r\n      return text;\r\n    }\r\n  }\r\n\r\n\r\n  public static toTitleCase(text: string) {\r\n    return text.replace(/\\w\\S*/g, (subString) => {\r\n      return subString.charAt(0).toUpperCase() + subString.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n\r\n  public static toLowerCase(items: string);\r\n  public static toLowerCase(items: string[]);\r\n  public static toLowerCase(items: any): string | string[] {\r\n\r\n    if (items instanceof Array) {\r\n      const loweredRoles: string[] = [];\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        loweredRoles[i] = items[i].toLowerCase();\r\n      }\r\n\r\n      return loweredRoles;\r\n    } else if (typeof items === 'string' || items instanceof String) {\r\n      return items.toLowerCase();\r\n    }\r\n  }\r\n\r\n\r\n  public static uniqueId() {\r\n    return this.randomNumber(1000000, 9000000).toString();\r\n  }\r\n\r\n\r\n  public static randomNumber(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n\r\n  public static baseUrl() {\r\n    let base = '';\r\n\r\n    if (window.location.origin) {\r\n      base = window.location.origin;\r\n    } else {\r\n      base = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\r\n    }\r\n\r\n    return base.replace(/\\/$/, '');\r\n  }\r\n\r\n\r\n  public static printDateOnly(date: Date) {\r\n\r\n    date = new Date(date);\r\n\r\n    const dayNames = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\r\n    const monthNames = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\r\n\r\n    const dayOfWeek = date.getDay();\r\n    const dayOfMonth = date.getDate();\r\n    let sup = '';\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n\r\n    if (dayOfMonth == 1 || dayOfMonth == 21 || dayOfMonth == 31) {\r\n      sup = 'st';\r\n    } else if (dayOfMonth == 2 || dayOfMonth == 22) {\r\n      sup = 'nd';\r\n    } else if (dayOfMonth == 3 || dayOfMonth == 23) {\r\n      sup = 'rd';\r\n    } else {\r\n      sup = 'th';\r\n    }\r\n\r\n    const dateString = dayNames[dayOfWeek] + ', ' + dayOfMonth + sup + ' ' + monthNames[month] + ' ' + year;\r\n\r\n    return dateString;\r\n  }\r\n\r\n  public static printTimeOnly(date: Date) {\r\n\r\n    date = new Date(date);\r\n\r\n    let period = '';\r\n    let minute = date.getMinutes().toString();\r\n    let hour = date.getHours();\r\n\r\n    period = hour < 12 ? 'AM' : 'PM';\r\n\r\n    if (hour == 0) {\r\n      hour = 12;\r\n    }\r\n    if (hour > 12) {\r\n      hour = hour - 12;\r\n    }\r\n\r\n    if (minute.length == 1) {\r\n      minute = '0' + minute;\r\n    }\r\n\r\n    const timeString = hour + ':' + minute + ' ' + period;\r\n\r\n\r\n    return timeString;\r\n  }\r\n\r\n  public static printDate(date: Date, separator = 'at') {\r\n    return `${Utilities.printDateOnly(date)} ${separator} ${Utilities.printTimeOnly(date)}`;\r\n  }\r\n\r\n\r\n  public static printFriendlyDate(date: Date, separator = '-') {\r\n    const today = new Date(); today.setHours(0, 0, 0, 0);\r\n    const yesterday = new Date(today); yesterday.setDate(yesterday.getDate() - 1);\r\n    const test = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n\r\n    if (test.toDateString() == today.toDateString()) {\r\n      return `Today ${separator} ${Utilities.printTimeOnly(date)}`;\r\n    }\r\n    if (test.toDateString() == yesterday.toDateString()) {\r\n      return `Yesterday ${separator} ${Utilities.printTimeOnly(date)}`;\r\n    } else {\r\n      return Utilities.printDate(date, separator);\r\n    }\r\n  }\r\n\r\n  public static printShortDate(date: Date, separator = '/', dateTimeSeparator = '-') {\r\n\r\n    let day = date.getDate().toString();\r\n    let month = (date.getMonth() + 1).toString();\r\n    const year = date.getFullYear();\r\n\r\n    if (day.length == 1) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (month.length == 1) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return `${month}${separator}${day}${separator}${year} ${dateTimeSeparator} ${Utilities.printTimeOnly(date)}`;\r\n  }\r\n\r\n\r\n  public static parseDate(date) {\r\n\r\n    if (date) {\r\n\r\n      if (date instanceof Date) {\r\n        return date;\r\n      }\r\n\r\n      if (typeof date === 'string' || date instanceof String) {\r\n        if (date.search(/[a-su-z+]/i) == -1) {\r\n          date = date + 'Z';\r\n        }\r\n\r\n        return new Date(date);\r\n      }\r\n\r\n      if (typeof date === 'number' || date instanceof Number) {\r\n        return new Date(<any>date);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public static printDuration(start: Date, end: Date) {\r\n\r\n    start = new Date(start);\r\n    end = new Date(end);\r\n\r\n    // get total seconds between the times\r\n    let delta = Math.abs(start.valueOf() - end.valueOf()) / 1000;\r\n\r\n    // calculate (and subtract) whole days\r\n    const days = Math.floor(delta / 86400);\r\n    delta -= days * 86400;\r\n\r\n    // calculate (and subtract) whole hours\r\n    const hours = Math.floor(delta / 3600) % 24;\r\n    delta -= hours * 3600;\r\n\r\n    // calculate (and subtract) whole minutes\r\n    const minutes = Math.floor(delta / 60) % 60;\r\n    delta -= minutes * 60;\r\n\r\n    // what's left is seconds\r\n    const seconds = delta % 60;  // in theory the modulus is not required\r\n\r\n\r\n    let printedDays = '';\r\n\r\n    if (days) {\r\n      printedDays = `${days} days`;\r\n    }\r\n\r\n    if (hours) {\r\n      printedDays += printedDays ? `, ${hours} hours` : `${hours} hours`;\r\n    }\r\n\r\n    if (minutes) {\r\n      printedDays += printedDays ? `, ${minutes} minutes` : `${minutes} minutes`;\r\n    }\r\n\r\n    if (seconds) {\r\n      printedDays += printedDays ? ` and ${seconds} seconds` : `${seconds} seconds`;\r\n    }\r\n\r\n\r\n    if (!printedDays) {\r\n      printedDays = '0';\r\n    }\r\n\r\n    return printedDays;\r\n  }\r\n\r\n\r\n  public static getAge(birthDate, otherDate) {\r\n    birthDate = new Date(birthDate);\r\n    otherDate = new Date(otherDate);\r\n\r\n    let years = (otherDate.getFullYear() - birthDate.getFullYear());\r\n\r\n    if (otherDate.getMonth() < birthDate.getMonth() ||\r\n      otherDate.getMonth() == birthDate.getMonth() && otherDate.getDate() < birthDate.getDate()) {\r\n      years--;\r\n    }\r\n\r\n    return years;\r\n  }\r\n\r\n\r\n  public static searchArray(searchTerm: string, caseSensitive: boolean, ...values: any[]) {\r\n\r\n    if (!searchTerm) {\r\n      return true;\r\n    }\r\n\r\n\r\n    if (!caseSensitive) {\r\n      searchTerm = searchTerm.toLowerCase();\r\n    }\r\n\r\n    for (const value of values) {\r\n\r\n      if (value != null) {\r\n        let strValue = value.toString();\r\n\r\n        if (!caseSensitive) {\r\n          strValue = strValue.toLowerCase();\r\n        }\r\n\r\n        if (strValue.indexOf(searchTerm) !== -1) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  public static moveArrayItem(array: any[], oldIndex, newIndex) {\r\n\r\n    while (oldIndex < 0) {\r\n      oldIndex += this.length;\r\n    }\r\n\r\n    while (newIndex < 0) {\r\n      newIndex += this.length;\r\n    }\r\n\r\n    if (newIndex >= this.length) {\r\n      let k = newIndex - this.length;\r\n      while ((k--) + 1) {\r\n        array.push(undefined);\r\n      }\r\n    }\r\n\r\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\r\n  }\r\n\r\n\r\n  public static expandCamelCase(text: string) {\r\n\r\n    if (!text) {\r\n      return text;\r\n    }\r\n\r\n    return text.replace(/([A-Z][a-z]+)/g, ' $1')\r\n      .replace(/([A-Z][A-Z]+)/g, ' $1')\r\n      .replace(/([^A-Za-z ]+)/g, ' $1');\r\n  }\r\n\r\n\r\n  public static testIsAbsoluteUrl(url: string) {\r\n\r\n    const r = new RegExp('^(?:[a-z]+:)?//', 'i');\r\n    return r.test(url);\r\n  }\r\n\r\n\r\n  public static convertToAbsoluteUrl(url: string) {\r\n\r\n    return Utilities.testIsAbsoluteUrl(url) ? url : '//' + url;\r\n  }\r\n\r\n\r\n\r\n  public static removeNulls(obj) {\r\n    const isArray = obj instanceof Array;\r\n\r\n    for (const k in obj) {\r\n      if (obj[k] === null) {\r\n        isArray ? obj.splice(k, 1) : delete obj[k];\r\n      } else if (typeof obj[k] == 'object') {\r\n        Utilities.removeNulls(obj[k]);\r\n      }\r\n\r\n      if (isArray && obj.length == k) {\r\n        Utilities.removeNulls(obj);\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  public static debounce(func: (...args) => any, wait: number, immediate?: boolean) {\r\n    let timeout;\r\n\r\n    return function () {\r\n      const context = this;\r\n      const args_ = arguments;\r\n\r\n      const later = function () {\r\n        timeout = null;\r\n        if (!immediate) {\r\n          func.apply(context, args_);\r\n        }\r\n      };\r\n\r\n      const callNow = immediate && !timeout;\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n\r\n      if (callNow) {\r\n        func.apply(context, args_);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n  public static cookies = {\r\n    getItem: (sKey) => {\r\n      return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\r\n    },\r\n    setItem: (sKey, sValue, vEnd, sPath, sDomain, bSecure) => {\r\n      if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\r\n        return false;\r\n      }\r\n\r\n      let sExpires = '';\r\n\r\n      if (vEnd) {\r\n        switch (vEnd.constructor) {\r\n          case Number:\r\n            sExpires = vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + vEnd;\r\n            break;\r\n          case String:\r\n            sExpires = '; expires=' + vEnd;\r\n            break;\r\n          case Date:\r\n            sExpires = '; expires=' + vEnd.toUTCString();\r\n            break;\r\n        }\r\n      }\r\n\r\n      document.cookie = encodeURIComponent(sKey) + '=' + encodeURIComponent(sValue) + sExpires + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '') + (bSecure ? '; secure' : '');\r\n      return true;\r\n    },\r\n    removeItem: (sKey, sPath, sDomain) => {\r\n      if (!sKey) {\r\n        return false;\r\n      }\r\n      document.cookie = encodeURIComponent(sKey) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '');\r\n      return true;\r\n    },\r\n    hasItem: (sKey) => {\r\n      return (new RegExp('(?:^|;\\\\s*)' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\r\n    },\r\n    keys: () => {\r\n      const aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, '').split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n      for (let nIdx = 0; nIdx < aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\r\n      return aKeys;\r\n    }\r\n  };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: null, //Change this to the address of your backend API if different from frontend address\r\n  loginUrl: \"/Login\"\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}